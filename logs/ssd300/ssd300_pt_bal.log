2025/05/11 16:39:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 352598324
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 352598324
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/11 16:39:16 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
cudnn_benchmark = True
custom_hooks = [
    dict(type='NumClassCheckHook'),
    dict(interval=50, priority='VERY_LOW', type='CheckInvalidLossHook'),
]
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = 300
launcher = 'none'
load_from = 'D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        ceil_mode=True,
        depth=16,
        init_cfg=dict(
            checkpoint='open-mmlab://vgg16_caffe', type='Pretrained'),
        out_feature_indices=(
            22,
            34,
        ),
        out_indices=(
            3,
            4,
        ),
        type='SSDVGG',
        with_last_pool=False),
    bbox_head=dict(
        anchor_generator=dict(
            basesize_ratio_range=(
                0.15,
                0.9,
            ),
            input_size=300,
            ratios=[
                [
                    2,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                ],
                [
                    2,
                ],
            ],
            scale_major=False,
            strides=[
                8,
                16,
                32,
                64,
                100,
                300,
            ],
            type='SSDAnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        in_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        num_classes=4,
        type='SSDHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=1,
        std=[
            1,
            1,
            1,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=(
            512,
            1024,
        ),
        l2_norm_scale=20,
        level_paddings=(
            1,
            1,
            0,
            0,
        ),
        level_strides=(
            2,
            2,
            1,
            1,
        ),
        out_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        type='SSDNeck'),
    test_cfg=dict(
        max_per_img=200,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.45, type='nms'),
        nms_pre=1000,
        score_thr=0.02),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            gt_max_assign_all=False,
            ignore_iof_thr=-1,
            min_pos_iou=0.0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        neg_pos_ratio=3,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler'),
        smoothl1_beta=1.0),
    type='SingleStageDetector')
optim_wrapper = dict(
    optimizer=dict(lr=0.002, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=24,
        gamma=0.1,
        milestones=[
            16,
            22,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=None,
    batch_size=8,
    dataset=dict(
        dataset=dict(
            ann_file='train/annotations.json',
            backend_args=None,
            data_prefix=dict(img='train/'),
            data_root='D:/Repositories/test/data/larch_casebearer/',
            filter_cfg=dict(filter_empty_gt=True, min_size=32),
            metainfo=dict(
                classes=(
                    'H',
                    'LD',
                    'HD',
                    'other',
                ),
                palette=[
                    (
                        0,
                        255,
                        0,
                    ),
                    (
                        255,
                        128,
                        0,
                    ),
                    (
                        255,
                        0,
                        0,
                    ),
                    (
                        0,
                        0,
                        255,
                    ),
                ]),
            pipeline=[
                dict(backend_args=None, type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(keep_ratio=False, scale=(
                    300,
                    300,
                ), type='Resize'),
                dict(type='PackDetInputs'),
            ],
            type='CocoDataset'),
        oversample_thr=0.25,
        type='ClassBalancedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/ssd300'

2025/05/11 16:39:16 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/11 16:39:16 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
(VERY_LOW    ) CheckInvalidLossHook               
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/11 16:39:17 - mmengine - INFO - load model from: open-mmlab://vgg16_caffe
2025/05/11 16:39:17 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://vgg16_caffe
Name of parameter - Initialization information

backbone.features.0.weight - torch.Size([64, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.0.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

neck.l2_norm.weight - torch.Size([512]): 
ConstantInit: val=20, bias=0 

neck.extra_layers.0.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.0.1.conv.weight - torch.Size([512, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.1.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.0.conv.weight - torch.Size([128, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

bbox_head.cls_convs.0.0.weight - torch.Size([20, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.0.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.weight - torch.Size([30, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.weight - torch.Size([30, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.weight - torch.Size([30, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.weight - torch.Size([16, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.weight - torch.Size([24, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.weight - torch.Size([24, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.weight - torch.Size([24, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2025/05/11 16:39:17 - mmengine - INFO - Load checkpoint from D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth
2025/05/11 16:39:17 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/11 16:39:17 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/11 16:39:17 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\ssd300.
2025/05/11 16:39:39 - mmengine - INFO - Epoch(train)  [1][50/71]  lr: 1.9820e-04  eta: 0:15:07  time: 0.4363  data_time: 0.1750  memory: 1437  loss: 8.0642  loss_cls: 6.3857  loss_bbox: 1.6785
2025/05/11 16:39:45 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:39:54 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:39:57 - mmengine - INFO - bbox_mAP_copypaste: 0.025 0.070 0.016 -1.000 0.004 0.031
2025/05/11 16:39:57 - mmengine - INFO - Epoch(val) [1][7/7]    coco/bbox_mAP: 0.0250  coco/bbox_mAP_50: 0.0700  coco/bbox_mAP_75: 0.0160  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0040  coco/bbox_mAP_l: 0.0310  data_time: 1.2009  time: 1.3162
2025/05/11 16:39:57 - mmengine - INFO - The best checkpoint with 0.0250 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/11 16:40:13 - mmengine - INFO - Epoch(train)  [2][50/71]  lr: 4.8248e-04  eta: 0:11:47  time: 0.3119  data_time: 0.0083  memory: 1437  loss: 4.2855  loss_cls: 3.3408  loss_bbox: 0.9448
2025/05/11 16:40:18 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:40:20 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:40:22 - mmengine - INFO - bbox_mAP_copypaste: 0.091 0.173 0.091 -1.000 0.021 0.100
2025/05/11 16:40:22 - mmengine - INFO - Epoch(val) [2][7/7]    coco/bbox_mAP: 0.0910  coco/bbox_mAP_50: 0.1730  coco/bbox_mAP_75: 0.0910  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0210  coco/bbox_mAP_l: 0.1000  data_time: 0.0624  time: 0.1455
2025/05/11 16:40:22 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/11 16:40:23 - mmengine - INFO - The best checkpoint with 0.0910 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/11 16:40:36 - mmengine - INFO - Epoch(train)  [3][50/71]  lr: 7.6677e-04  eta: 0:10:18  time: 0.2595  data_time: 0.0076  memory: 1437  loss: 3.7152  loss_cls: 2.9080  loss_bbox: 0.8072
2025/05/11 16:40:41 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:40:42 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:40:45 - mmengine - INFO - bbox_mAP_copypaste: 0.161 0.309 0.157 -1.000 0.087 0.177
2025/05/11 16:40:45 - mmengine - INFO - Epoch(val) [3][7/7]    coco/bbox_mAP: 0.1610  coco/bbox_mAP_50: 0.3090  coco/bbox_mAP_75: 0.1570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0870  coco/bbox_mAP_l: 0.1770  data_time: 0.0646  time: 0.1293
2025/05/11 16:40:45 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/11 16:40:45 - mmengine - INFO - The best checkpoint with 0.1610 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/11 16:40:58 - mmengine - INFO - Epoch(train)  [4][50/71]  lr: 1.0511e-03  eta: 0:09:24  time: 0.2618  data_time: 0.0078  memory: 1437  loss: 3.2949  loss_cls: 2.5501  loss_bbox: 0.7448
2025/05/11 16:41:04 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:41:05 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:41:07 - mmengine - INFO - bbox_mAP_copypaste: 0.250 0.465 0.247 -1.000 0.140 0.278
2025/05/11 16:41:08 - mmengine - INFO - Epoch(val) [4][7/7]    coco/bbox_mAP: 0.2500  coco/bbox_mAP_50: 0.4650  coco/bbox_mAP_75: 0.2470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1400  coco/bbox_mAP_l: 0.2780  data_time: 0.0629  time: 0.1364
2025/05/11 16:41:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/11 16:41:08 - mmengine - INFO - The best checkpoint with 0.2500 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/11 16:41:23 - mmengine - INFO - Epoch(train)  [5][50/71]  lr: 1.3353e-03  eta: 0:08:58  time: 0.2987  data_time: 0.0083  memory: 1437  loss: 3.0369  loss_cls: 2.3343  loss_bbox: 0.7026
2025/05/11 16:41:29 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:41:30 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:41:32 - mmengine - INFO - bbox_mAP_copypaste: 0.281 0.517 0.276 -1.000 0.165 0.312
2025/05/11 16:41:32 - mmengine - INFO - Epoch(val) [5][7/7]    coco/bbox_mAP: 0.2810  coco/bbox_mAP_50: 0.5170  coco/bbox_mAP_75: 0.2760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1650  coco/bbox_mAP_l: 0.3120  data_time: 0.0666  time: 0.1393
2025/05/11 16:41:32 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/11 16:41:33 - mmengine - INFO - The best checkpoint with 0.2810 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/11 16:41:46 - mmengine - INFO - Epoch(train)  [6][50/71]  lr: 1.6196e-03  eta: 0:08:25  time: 0.2605  data_time: 0.0077  memory: 1437  loss: 2.8756  loss_cls: 2.1917  loss_bbox: 0.6839
2025/05/11 16:41:51 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:41:52 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:41:55 - mmengine - INFO - bbox_mAP_copypaste: 0.356 0.665 0.350 -1.000 0.177 0.392
2025/05/11 16:41:55 - mmengine - INFO - Epoch(val) [6][7/7]    coco/bbox_mAP: 0.3560  coco/bbox_mAP_50: 0.6650  coco/bbox_mAP_75: 0.3500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1770  coco/bbox_mAP_l: 0.3920  data_time: 0.0645  time: 0.1299
2025/05/11 16:41:55 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/11 16:41:55 - mmengine - INFO - The best checkpoint with 0.3560 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/11 16:42:09 - mmengine - INFO - Epoch(train)  [7][50/71]  lr: 1.9039e-03  eta: 0:07:59  time: 0.2802  data_time: 0.0083  memory: 1437  loss: 2.7572  loss_cls: 2.0987  loss_bbox: 0.6585
2025/05/11 16:42:14 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:42:16 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:42:18 - mmengine - INFO - bbox_mAP_copypaste: 0.382 0.696 0.379 -1.000 0.210 0.415
2025/05/11 16:42:18 - mmengine - INFO - Epoch(val) [7][7/7]    coco/bbox_mAP: 0.3820  coco/bbox_mAP_50: 0.6960  coco/bbox_mAP_75: 0.3790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2100  coco/bbox_mAP_l: 0.4150  data_time: 0.0611  time: 0.1240
2025/05/11 16:42:18 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/11 16:42:19 - mmengine - INFO - The best checkpoint with 0.3820 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/11 16:42:32 - mmengine - INFO - Epoch(train)  [8][50/71]  lr: 2.0000e-03  eta: 0:07:32  time: 0.2641  data_time: 0.0082  memory: 1437  loss: 2.6161  loss_cls: 1.9909  loss_bbox: 0.6252
2025/05/11 16:42:37 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:42:38 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:42:41 - mmengine - INFO - bbox_mAP_copypaste: 0.391 0.698 0.403 -1.000 0.211 0.423
2025/05/11 16:42:41 - mmengine - INFO - Epoch(val) [8][7/7]    coco/bbox_mAP: 0.3910  coco/bbox_mAP_50: 0.6980  coco/bbox_mAP_75: 0.4030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2110  coco/bbox_mAP_l: 0.4230  data_time: 0.0670  time: 0.1278
2025/05/11 16:42:41 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/11 16:42:41 - mmengine - INFO - The best checkpoint with 0.3910 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/11 16:42:54 - mmengine - INFO - Epoch(train)  [9][50/71]  lr: 2.0000e-03  eta: 0:07:07  time: 0.2626  data_time: 0.0077  memory: 1437  loss: 2.4722  loss_cls: 1.8904  loss_bbox: 0.5818
2025/05/11 16:43:00 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:43:01 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:43:03 - mmengine - INFO - bbox_mAP_copypaste: 0.412 0.733 0.431 -1.000 0.230 0.441
2025/05/11 16:43:03 - mmengine - INFO - Epoch(val) [9][7/7]    coco/bbox_mAP: 0.4120  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.4310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2300  coco/bbox_mAP_l: 0.4410  data_time: 0.0653  time: 0.1269
2025/05/11 16:43:03 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/11 16:43:04 - mmengine - INFO - The best checkpoint with 0.4120 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/11 16:43:17 - mmengine - INFO - Epoch(train) [10][50/71]  lr: 2.0000e-03  eta: 0:06:42  time: 0.2591  data_time: 0.0078  memory: 1437  loss: 2.3996  loss_cls: 1.8298  loss_bbox: 0.5698
2025/05/11 16:43:22 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:43:23 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:43:25 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.687 0.428 -1.000 0.234 0.425
2025/05/11 16:43:25 - mmengine - INFO - Epoch(val) [10][7/7]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.6870  coco/bbox_mAP_75: 0.4280  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2340  coco/bbox_mAP_l: 0.4250  data_time: 0.0649  time: 0.1259
2025/05/11 16:43:39 - mmengine - INFO - Epoch(train) [11][50/71]  lr: 2.0000e-03  eta: 0:06:20  time: 0.2713  data_time: 0.0077  memory: 1437  loss: 2.3395  loss_cls: 1.7944  loss_bbox: 0.5451
2025/05/11 16:43:44 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:43:45 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:43:48 - mmengine - INFO - bbox_mAP_copypaste: 0.429 0.755 0.450 -1.000 0.242 0.461
2025/05/11 16:43:48 - mmengine - INFO - Epoch(val) [11][7/7]    coco/bbox_mAP: 0.4290  coco/bbox_mAP_50: 0.7550  coco/bbox_mAP_75: 0.4500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2420  coco/bbox_mAP_l: 0.4610  data_time: 0.0668  time: 0.1279
2025/05/11 16:43:48 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/11 16:43:48 - mmengine - INFO - The best checkpoint with 0.4290 coco/bbox_mAP at 11 epoch is saved to best_coco_bbox_mAP_epoch_11.pth.
2025/05/11 16:44:02 - mmengine - INFO - Epoch(train) [12][50/71]  lr: 2.0000e-03  eta: 0:06:00  time: 0.2769  data_time: 0.0080  memory: 1437  loss: 2.2878  loss_cls: 1.7535  loss_bbox: 0.5343
2025/05/11 16:44:07 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:44:09 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:44:11 - mmengine - INFO - bbox_mAP_copypaste: 0.443 0.759 0.485 -1.000 0.256 0.472
2025/05/11 16:44:11 - mmengine - INFO - Epoch(val) [12][7/7]    coco/bbox_mAP: 0.4430  coco/bbox_mAP_50: 0.7590  coco/bbox_mAP_75: 0.4850  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2560  coco/bbox_mAP_l: 0.4720  data_time: 0.0621  time: 0.1373
2025/05/11 16:44:11 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_11.pth is removed
2025/05/11 16:44:12 - mmengine - INFO - The best checkpoint with 0.4430 coco/bbox_mAP at 12 epoch is saved to best_coco_bbox_mAP_epoch_12.pth.
2025/05/11 16:44:26 - mmengine - INFO - Epoch(train) [13][50/71]  lr: 2.0000e-03  eta: 0:05:40  time: 0.2844  data_time: 0.0083  memory: 1437  loss: 2.2524  loss_cls: 1.7329  loss_bbox: 0.5195
2025/05/11 16:44:32 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:44:33 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:44:36 - mmengine - INFO - bbox_mAP_copypaste: 0.428 0.743 0.453 -1.000 0.240 0.460
2025/05/11 16:44:36 - mmengine - INFO - Epoch(val) [13][7/7]    coco/bbox_mAP: 0.4280  coco/bbox_mAP_50: 0.7430  coco/bbox_mAP_75: 0.4530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2400  coco/bbox_mAP_l: 0.4600  data_time: 0.0608  time: 0.1393
2025/05/11 16:44:51 - mmengine - INFO - Epoch(train) [14][50/71]  lr: 2.0000e-03  eta: 0:05:22  time: 0.3090  data_time: 0.0085  memory: 1437  loss: 2.1851  loss_cls: 1.6828  loss_bbox: 0.5023
2025/05/11 16:44:57 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:44:58 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:45:00 - mmengine - INFO - bbox_mAP_copypaste: 0.420 0.747 0.419 -1.000 0.239 0.451
2025/05/11 16:45:00 - mmengine - INFO - Epoch(val) [14][7/7]    coco/bbox_mAP: 0.4200  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.4190  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2390  coco/bbox_mAP_l: 0.4510  data_time: 0.0646  time: 0.1400
2025/05/11 16:45:02 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:45:13 - mmengine - INFO - Epoch(train) [15][50/71]  lr: 2.0000e-03  eta: 0:05:01  time: 0.2590  data_time: 0.0077  memory: 1437  loss: 2.1170  loss_cls: 1.6307  loss_bbox: 0.4863
2025/05/11 16:45:19 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:45:20 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:45:22 - mmengine - INFO - bbox_mAP_copypaste: 0.441 0.771 0.467 -1.000 0.279 0.467
2025/05/11 16:45:22 - mmengine - INFO - Epoch(val) [15][7/7]    coco/bbox_mAP: 0.4410  coco/bbox_mAP_50: 0.7710  coco/bbox_mAP_75: 0.4670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2790  coco/bbox_mAP_l: 0.4670  data_time: 0.0715  time: 0.1336
2025/05/11 16:45:35 - mmengine - INFO - Epoch(train) [16][50/71]  lr: 2.0000e-03  eta: 0:04:40  time: 0.2594  data_time: 0.0074  memory: 1437  loss: 2.0702  loss_cls: 1.5964  loss_bbox: 0.4739
2025/05/11 16:45:40 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:45:41 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:45:44 - mmengine - INFO - bbox_mAP_copypaste: 0.370 0.669 0.376 -1.000 0.223 0.400
2025/05/11 16:45:44 - mmengine - INFO - Epoch(val) [16][7/7]    coco/bbox_mAP: 0.3700  coco/bbox_mAP_50: 0.6690  coco/bbox_mAP_75: 0.3760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2230  coco/bbox_mAP_l: 0.4000  data_time: 0.0642  time: 0.1250
2025/05/11 16:45:57 - mmengine - INFO - Epoch(train) [17][50/71]  lr: 2.0000e-04  eta: 0:04:20  time: 0.2630  data_time: 0.0073  memory: 1437  loss: 2.0033  loss_cls: 1.5515  loss_bbox: 0.4518
2025/05/11 16:46:02 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:46:03 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:46:06 - mmengine - INFO - bbox_mAP_copypaste: 0.440 0.752 0.481 -1.000 0.255 0.470
2025/05/11 16:46:06 - mmengine - INFO - Epoch(val) [17][7/7]    coco/bbox_mAP: 0.4400  coco/bbox_mAP_50: 0.7520  coco/bbox_mAP_75: 0.4810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2550  coco/bbox_mAP_l: 0.4700  data_time: 0.0694  time: 0.1303
2025/05/11 16:46:19 - mmengine - INFO - Epoch(train) [18][50/71]  lr: 2.0000e-04  eta: 0:04:00  time: 0.2727  data_time: 0.0076  memory: 1437  loss: 1.9537  loss_cls: 1.5148  loss_bbox: 0.4389
2025/05/11 16:46:25 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:46:26 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:46:28 - mmengine - INFO - bbox_mAP_copypaste: 0.441 0.757 0.482 -1.000 0.258 0.471
2025/05/11 16:46:28 - mmengine - INFO - Epoch(val) [18][7/7]    coco/bbox_mAP: 0.4410  coco/bbox_mAP_50: 0.7570  coco/bbox_mAP_75: 0.4820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4710  data_time: 0.0624  time: 0.1250
2025/05/11 16:46:41 - mmengine - INFO - Epoch(train) [19][50/71]  lr: 2.0000e-04  eta: 0:03:40  time: 0.2676  data_time: 0.0081  memory: 1437  loss: 1.9394  loss_cls: 1.5041  loss_bbox: 0.4353
2025/05/11 16:46:47 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:46:48 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:46:50 - mmengine - INFO - bbox_mAP_copypaste: 0.436 0.748 0.475 -1.000 0.259 0.465
2025/05/11 16:46:50 - mmengine - INFO - Epoch(val) [19][7/7]    coco/bbox_mAP: 0.4360  coco/bbox_mAP_50: 0.7480  coco/bbox_mAP_75: 0.4750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2590  coco/bbox_mAP_l: 0.4650  data_time: 0.0677  time: 0.1292
2025/05/11 16:47:03 - mmengine - INFO - Epoch(train) [20][50/71]  lr: 2.0000e-04  eta: 0:03:20  time: 0.2688  data_time: 0.0078  memory: 1437  loss: 1.9223  loss_cls: 1.4938  loss_bbox: 0.4285
2025/05/11 16:47:09 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:47:10 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:47:12 - mmengine - INFO - bbox_mAP_copypaste: 0.429 0.738 0.469 -1.000 0.257 0.458
2025/05/11 16:47:12 - mmengine - INFO - Epoch(val) [20][7/7]    coco/bbox_mAP: 0.4290  coco/bbox_mAP_50: 0.7380  coco/bbox_mAP_75: 0.4690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2570  coco/bbox_mAP_l: 0.4580  data_time: 0.0686  time: 0.1323
2025/05/11 16:47:26 - mmengine - INFO - Epoch(train) [21][50/71]  lr: 2.0000e-04  eta: 0:03:00  time: 0.2742  data_time: 0.0077  memory: 1437  loss: 1.9250  loss_cls: 1.4956  loss_bbox: 0.4294
2025/05/11 16:47:31 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:47:33 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:47:35 - mmengine - INFO - bbox_mAP_copypaste: 0.439 0.754 0.478 -1.000 0.255 0.469
2025/05/11 16:47:35 - mmengine - INFO - Epoch(val) [21][7/7]    coco/bbox_mAP: 0.4390  coco/bbox_mAP_50: 0.7540  coco/bbox_mAP_75: 0.4780  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2550  coco/bbox_mAP_l: 0.4690  data_time: 0.0679  time: 0.1271
2025/05/11 16:47:48 - mmengine - INFO - Epoch(train) [22][50/71]  lr: 2.0000e-04  eta: 0:02:40  time: 0.2711  data_time: 0.0078  memory: 1437  loss: 1.9189  loss_cls: 1.4890  loss_bbox: 0.4299
2025/05/11 16:47:54 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:47:55 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:47:57 - mmengine - INFO - bbox_mAP_copypaste: 0.438 0.751 0.478 -1.000 0.256 0.467
2025/05/11 16:47:57 - mmengine - INFO - Epoch(val) [22][7/7]    coco/bbox_mAP: 0.4380  coco/bbox_mAP_50: 0.7510  coco/bbox_mAP_75: 0.4780  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2560  coco/bbox_mAP_l: 0.4670  data_time: 0.0670  time: 0.1292
2025/05/11 16:48:10 - mmengine - INFO - Epoch(train) [23][50/71]  lr: 2.0000e-05  eta: 0:02:21  time: 0.2620  data_time: 0.0074  memory: 1437  loss: 1.8956  loss_cls: 1.4717  loss_bbox: 0.4239
2025/05/11 16:48:15 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:48:16 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:48:19 - mmengine - INFO - bbox_mAP_copypaste: 0.437 0.751 0.480 -1.000 0.257 0.466
2025/05/11 16:48:19 - mmengine - INFO - Epoch(val) [23][7/7]    coco/bbox_mAP: 0.4370  coco/bbox_mAP_50: 0.7510  coco/bbox_mAP_75: 0.4800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2570  coco/bbox_mAP_l: 0.4660  data_time: 0.0665  time: 0.1289
2025/05/11 16:48:31 - mmengine - INFO - Epoch(train) [24][50/71]  lr: 2.0000e-05  eta: 0:02:01  time: 0.2582  data_time: 0.0074  memory: 1437  loss: 1.9002  loss_cls: 1.4764  loss_bbox: 0.4238
2025/05/11 16:48:37 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:48:38 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:48:40 - mmengine - INFO - bbox_mAP_copypaste: 0.437 0.750 0.482 -1.000 0.259 0.466
2025/05/11 16:48:40 - mmengine - INFO - Epoch(val) [24][7/7]    coco/bbox_mAP: 0.4370  coco/bbox_mAP_50: 0.7500  coco/bbox_mAP_75: 0.4820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2590  coco/bbox_mAP_l: 0.4660  data_time: 0.0632  time: 0.1257
2025/05/11 16:48:53 - mmengine - INFO - Epoch(train) [25][50/71]  lr: 2.0000e-05  eta: 0:01:41  time: 0.2586  data_time: 0.0076  memory: 1437  loss: 1.9168  loss_cls: 1.4899  loss_bbox: 0.4269
2025/05/11 16:48:58 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:48:59 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:49:01 - mmengine - INFO - bbox_mAP_copypaste: 0.438 0.752 0.483 -1.000 0.258 0.467
2025/05/11 16:49:01 - mmengine - INFO - Epoch(val) [25][7/7]    coco/bbox_mAP: 0.4380  coco/bbox_mAP_50: 0.7520  coco/bbox_mAP_75: 0.4830  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4670  data_time: 0.0651  time: 0.1279
2025/05/11 16:49:15 - mmengine - INFO - Epoch(train) [26][50/71]  lr: 2.0000e-05  eta: 0:01:22  time: 0.2740  data_time: 0.0074  memory: 1437  loss: 1.9052  loss_cls: 1.4807  loss_bbox: 0.4244
2025/05/11 16:49:20 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:49:21 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:49:24 - mmengine - INFO - bbox_mAP_copypaste: 0.436 0.749 0.479 -1.000 0.258 0.465
2025/05/11 16:49:24 - mmengine - INFO - Epoch(val) [26][7/7]    coco/bbox_mAP: 0.4360  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.4790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4650  data_time: 0.0629  time: 0.1251
2025/05/11 16:49:37 - mmengine - INFO - Epoch(train) [27][50/71]  lr: 2.0000e-05  eta: 0:01:03  time: 0.2651  data_time: 0.0076  memory: 1437  loss: 1.9069  loss_cls: 1.4814  loss_bbox: 0.4255
2025/05/11 16:49:42 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:49:43 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:49:45 - mmengine - INFO - bbox_mAP_copypaste: 0.439 0.751 0.481 -1.000 0.258 0.468
2025/05/11 16:49:45 - mmengine - INFO - Epoch(val) [27][7/7]    coco/bbox_mAP: 0.4390  coco/bbox_mAP_50: 0.7510  coco/bbox_mAP_75: 0.4810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4680  data_time: 0.0649  time: 0.1275
2025/05/11 16:49:59 - mmengine - INFO - Epoch(train) [28][50/71]  lr: 2.0000e-05  eta: 0:00:44  time: 0.2631  data_time: 0.0075  memory: 1437  loss: 1.9052  loss_cls: 1.4797  loss_bbox: 0.4255
2025/05/11 16:50:04 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:50:05 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:50:07 - mmengine - INFO - bbox_mAP_copypaste: 0.438 0.752 0.480 -1.000 0.259 0.467
2025/05/11 16:50:07 - mmengine - INFO - Epoch(val) [28][7/7]    coco/bbox_mAP: 0.4380  coco/bbox_mAP_50: 0.7520  coco/bbox_mAP_75: 0.4800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2590  coco/bbox_mAP_l: 0.4670  data_time: 0.0647  time: 0.1248
2025/05/11 16:50:10 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:50:20 - mmengine - INFO - Epoch(train) [29][50/71]  lr: 2.0000e-05  eta: 0:00:24  time: 0.2621  data_time: 0.0081  memory: 1437  loss: 1.9121  loss_cls: 1.4862  loss_bbox: 0.4259
2025/05/11 16:50:26 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:50:27 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:50:29 - mmengine - INFO - bbox_mAP_copypaste: 0.437 0.749 0.479 -1.000 0.259 0.466
2025/05/11 16:50:29 - mmengine - INFO - Epoch(val) [29][7/7]    coco/bbox_mAP: 0.4370  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.4790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2590  coco/bbox_mAP_l: 0.4660  data_time: 0.0643  time: 0.1251
2025/05/11 16:50:42 - mmengine - INFO - Epoch(train) [30][50/71]  lr: 2.0000e-05  eta: 0:00:05  time: 0.2633  data_time: 0.0077  memory: 1437  loss: 1.8975  loss_cls: 1.4744  loss_bbox: 0.4231
2025/05/11 16:50:48 - mmengine - INFO - Exp name: ssd300_pt_bal_20250511_163911
2025/05/11 16:50:48 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/11 16:50:50 - mmengine - INFO - Evaluating bbox...
2025/05/11 16:50:52 - mmengine - INFO - bbox_mAP_copypaste: 0.438 0.751 0.481 -1.000 0.258 0.467
2025/05/11 16:50:52 - mmengine - INFO - Epoch(val) [30][7/7]    coco/bbox_mAP: 0.4380  coco/bbox_mAP_50: 0.7510  coco/bbox_mAP_75: 0.4810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4670  data_time: 0.0614  time: 0.1233
