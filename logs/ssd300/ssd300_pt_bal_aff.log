2025/05/13 11:13:58 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 101033848
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 101033848
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/13 11:13:58 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
cudnn_benchmark = True
custom_hooks = [
    dict(type='NumClassCheckHook'),
    dict(interval=50, priority='VERY_LOW', type='CheckInvalidLossHook'),
]
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = 300
launcher = 'none'
load_from = 'D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        ceil_mode=True,
        depth=16,
        init_cfg=dict(
            checkpoint='open-mmlab://vgg16_caffe', type='Pretrained'),
        out_feature_indices=(
            22,
            34,
        ),
        out_indices=(
            3,
            4,
        ),
        type='SSDVGG',
        with_last_pool=False),
    bbox_head=dict(
        anchor_generator=dict(
            basesize_ratio_range=(
                0.15,
                0.9,
            ),
            input_size=300,
            ratios=[
                [
                    2,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                ],
                [
                    2,
                ],
            ],
            scale_major=False,
            strides=[
                8,
                16,
                32,
                64,
                100,
                300,
            ],
            type='SSDAnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        in_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        num_classes=4,
        type='SSDHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=1,
        std=[
            1,
            1,
            1,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=(
            512,
            1024,
        ),
        l2_norm_scale=20,
        level_paddings=(
            1,
            1,
            0,
            0,
        ),
        level_strides=(
            2,
            2,
            1,
            1,
        ),
        out_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        type='SSDNeck'),
    test_cfg=dict(
        max_per_img=200,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.45, type='nms'),
        nms_pre=1000,
        score_thr=0.02),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            gt_max_assign_all=False,
            ignore_iof_thr=-1,
            min_pos_iou=0.0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        neg_pos_ratio=3,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler'),
        smoothl1_beta=1.0),
    type='SingleStageDetector')
optim_wrapper = dict(
    optimizer=dict(lr=0.002, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=24,
        gamma=0.1,
        milestones=[
            16,
            22,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=None,
    batch_size=8,
    dataset=dict(
        dataset=dict(
            ann_file='train/annotations.json',
            backend_args=None,
            data_prefix=dict(img='train/'),
            data_root='D:/Repositories/test/data/larch_casebearer/',
            filter_cfg=dict(filter_empty_gt=True, min_size=32),
            metainfo=dict(
                classes=(
                    'H',
                    'LD',
                    'HD',
                    'other',
                ),
                palette=[
                    (
                        0,
                        255,
                        0,
                    ),
                    (
                        255,
                        128,
                        0,
                    ),
                    (
                        255,
                        0,
                        0,
                    ),
                    (
                        0,
                        0,
                        255,
                    ),
                ]),
            pipeline=[
                dict(backend_args=None, type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(keep_ratio=False, scale=(
                    300,
                    300,
                ), type='Resize'),
                dict(type='RandomAffine'),
                dict(type='PackDetInputs'),
            ],
            type='CocoDataset'),
        oversample_thr=0.25,
        type='ClassBalancedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/ssd300'

2025/05/13 11:13:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/13 11:13:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
(VERY_LOW    ) CheckInvalidLossHook               
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/13 11:14:00 - mmengine - INFO - load model from: open-mmlab://vgg16_caffe
2025/05/13 11:14:00 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://vgg16_caffe
Name of parameter - Initialization information

backbone.features.0.weight - torch.Size([64, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.0.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

neck.l2_norm.weight - torch.Size([512]): 
ConstantInit: val=20, bias=0 

neck.extra_layers.0.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.0.1.conv.weight - torch.Size([512, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.1.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.0.conv.weight - torch.Size([128, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

bbox_head.cls_convs.0.0.weight - torch.Size([20, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.0.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.weight - torch.Size([30, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.weight - torch.Size([30, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.weight - torch.Size([30, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.weight - torch.Size([16, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.weight - torch.Size([24, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.weight - torch.Size([24, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.weight - torch.Size([24, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2025/05/13 11:14:00 - mmengine - INFO - Load checkpoint from D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth
2025/05/13 11:14:00 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/13 11:14:00 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/13 11:14:00 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\ssd300.
2025/05/13 11:14:21 - mmengine - INFO - Epoch(train)  [1][50/71]  lr: 1.9820e-04  eta: 0:14:49  time: 0.4278  data_time: 0.1738  memory: 1437  loss: 8.5213  loss_cls: 6.7615  loss_bbox: 1.7598
2025/05/13 11:14:26 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:14:35 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:14:38 - mmengine - INFO - bbox_mAP_copypaste: 0.021 0.066 0.012 -1.000 0.002 0.026
2025/05/13 11:14:38 - mmengine - INFO - Epoch(val) [1][7/7]    coco/bbox_mAP: 0.0210  coco/bbox_mAP_50: 0.0660  coco/bbox_mAP_75: 0.0120  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0020  coco/bbox_mAP_l: 0.0260  data_time: 1.1606  time: 1.2894
2025/05/13 11:14:39 - mmengine - INFO - The best checkpoint with 0.0210 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/13 11:14:51 - mmengine - INFO - Epoch(train)  [2][50/71]  lr: 4.8248e-04  eta: 0:10:49  time: 0.2530  data_time: 0.0077  memory: 1437  loss: 4.5322  loss_cls: 3.4170  loss_bbox: 1.1152
2025/05/13 11:14:56 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:14:57 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:15:00 - mmengine - INFO - bbox_mAP_copypaste: 0.089 0.193 0.067 -1.000 0.016 0.099
2025/05/13 11:15:00 - mmengine - INFO - Epoch(val) [2][7/7]    coco/bbox_mAP: 0.0890  coco/bbox_mAP_50: 0.1930  coco/bbox_mAP_75: 0.0670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0160  coco/bbox_mAP_l: 0.0990  data_time: 0.0619  time: 0.1379
2025/05/13 11:15:00 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/13 11:15:01 - mmengine - INFO - The best checkpoint with 0.0890 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/13 11:15:13 - mmengine - INFO - Epoch(train)  [3][50/71]  lr: 7.6677e-04  eta: 0:09:26  time: 0.2438  data_time: 0.0075  memory: 1437  loss: 3.9903  loss_cls: 2.9916  loss_bbox: 0.9987
2025/05/13 11:15:18 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:15:19 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:15:21 - mmengine - INFO - bbox_mAP_copypaste: 0.141 0.311 0.102 -1.000 0.092 0.156
2025/05/13 11:15:21 - mmengine - INFO - Epoch(val) [3][7/7]    coco/bbox_mAP: 0.1410  coco/bbox_mAP_50: 0.3110  coco/bbox_mAP_75: 0.1020  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0920  coco/bbox_mAP_l: 0.1560  data_time: 0.0615  time: 0.1250
2025/05/13 11:15:21 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/13 11:15:22 - mmengine - INFO - The best checkpoint with 0.1410 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/13 11:15:35 - mmengine - INFO - Epoch(train)  [4][50/71]  lr: 1.0511e-03  eta: 0:08:43  time: 0.2529  data_time: 0.0076  memory: 1437  loss: 3.6777  loss_cls: 2.7340  loss_bbox: 0.9437
2025/05/13 11:15:40 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:15:41 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:15:43 - mmengine - INFO - bbox_mAP_copypaste: 0.170 0.395 0.103 -1.000 0.107 0.188
2025/05/13 11:15:43 - mmengine - INFO - Epoch(val) [4][7/7]    coco/bbox_mAP: 0.1700  coco/bbox_mAP_50: 0.3950  coco/bbox_mAP_75: 0.1030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1070  coco/bbox_mAP_l: 0.1880  data_time: 0.0634  time: 0.1297
2025/05/13 11:15:43 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/13 11:15:44 - mmengine - INFO - The best checkpoint with 0.1700 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/13 11:15:56 - mmengine - INFO - Epoch(train)  [5][50/71]  lr: 1.3353e-03  eta: 0:08:08  time: 0.2453  data_time: 0.0081  memory: 1437  loss: 3.4252  loss_cls: 2.5282  loss_bbox: 0.8970
2025/05/13 11:16:01 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:16:02 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:16:05 - mmengine - INFO - bbox_mAP_copypaste: 0.245 0.523 0.176 -1.000 0.163 0.270
2025/05/13 11:16:05 - mmengine - INFO - Epoch(val) [5][7/7]    coco/bbox_mAP: 0.2450  coco/bbox_mAP_50: 0.5230  coco/bbox_mAP_75: 0.1760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1630  coco/bbox_mAP_l: 0.2700  data_time: 0.0623  time: 0.1238
2025/05/13 11:16:05 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/13 11:16:05 - mmengine - INFO - The best checkpoint with 0.2450 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/13 11:16:18 - mmengine - INFO - Epoch(train)  [6][50/71]  lr: 1.6196e-03  eta: 0:07:40  time: 0.2478  data_time: 0.0076  memory: 1437  loss: 3.2877  loss_cls: 2.3894  loss_bbox: 0.8983
2025/05/13 11:16:23 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:16:24 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:16:26 - mmengine - INFO - bbox_mAP_copypaste: 0.287 0.605 0.217 -1.000 0.160 0.319
2025/05/13 11:16:26 - mmengine - INFO - Epoch(val) [6][7/7]    coco/bbox_mAP: 0.2870  coco/bbox_mAP_50: 0.6050  coco/bbox_mAP_75: 0.2170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1600  coco/bbox_mAP_l: 0.3190  data_time: 0.0651  time: 0.1283
2025/05/13 11:16:26 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/13 11:16:27 - mmengine - INFO - The best checkpoint with 0.2870 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/13 11:16:39 - mmengine - INFO - Epoch(train)  [7][50/71]  lr: 1.9039e-03  eta: 0:07:16  time: 0.2511  data_time: 0.0076  memory: 1437  loss: 3.1618  loss_cls: 2.2830  loss_bbox: 0.8788
2025/05/13 11:16:44 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:16:45 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:16:48 - mmengine - INFO - bbox_mAP_copypaste: 0.308 0.600 0.281 -1.000 0.180 0.335
2025/05/13 11:16:48 - mmengine - INFO - Epoch(val) [7][7/7]    coco/bbox_mAP: 0.3080  coco/bbox_mAP_50: 0.6000  coco/bbox_mAP_75: 0.2810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1800  coco/bbox_mAP_l: 0.3350  data_time: 0.0682  time: 0.1310
2025/05/13 11:16:48 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/13 11:16:49 - mmengine - INFO - The best checkpoint with 0.3080 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/13 11:17:01 - mmengine - INFO - Epoch(train)  [8][50/71]  lr: 2.0000e-03  eta: 0:06:52  time: 0.2469  data_time: 0.0076  memory: 1437  loss: 3.0956  loss_cls: 2.2211  loss_bbox: 0.8745
2025/05/13 11:17:06 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:17:07 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:17:09 - mmengine - INFO - bbox_mAP_copypaste: 0.332 0.684 0.269 -1.000 0.176 0.361
2025/05/13 11:17:09 - mmengine - INFO - Epoch(val) [8][7/7]    coco/bbox_mAP: 0.3320  coco/bbox_mAP_50: 0.6840  coco/bbox_mAP_75: 0.2690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1760  coco/bbox_mAP_l: 0.3610  data_time: 0.0628  time: 0.1249
2025/05/13 11:17:09 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/13 11:17:10 - mmengine - INFO - The best checkpoint with 0.3320 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/13 11:17:22 - mmengine - INFO - Epoch(train)  [9][50/71]  lr: 2.0000e-03  eta: 0:06:31  time: 0.2492  data_time: 0.0078  memory: 1437  loss: 2.9637  loss_cls: 2.1384  loss_bbox: 0.8253
2025/05/13 11:17:27 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:17:28 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:17:31 - mmengine - INFO - bbox_mAP_copypaste: 0.389 0.725 0.374 -1.000 0.197 0.421
2025/05/13 11:17:31 - mmengine - INFO - Epoch(val) [9][7/7]    coco/bbox_mAP: 0.3890  coco/bbox_mAP_50: 0.7250  coco/bbox_mAP_75: 0.3740  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1970  coco/bbox_mAP_l: 0.4210  data_time: 0.0662  time: 0.1276
2025/05/13 11:17:31 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/13 11:17:31 - mmengine - INFO - The best checkpoint with 0.3890 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/13 11:17:44 - mmengine - INFO - Epoch(train) [10][50/71]  lr: 2.0000e-03  eta: 0:06:10  time: 0.2462  data_time: 0.0075  memory: 1437  loss: 2.8613  loss_cls: 2.0705  loss_bbox: 0.7908
2025/05/13 11:17:48 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:17:50 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:17:52 - mmengine - INFO - bbox_mAP_copypaste: 0.377 0.732 0.335 -1.000 0.200 0.408
2025/05/13 11:17:52 - mmengine - INFO - Epoch(val) [10][7/7]    coco/bbox_mAP: 0.3770  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.3350  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2000  coco/bbox_mAP_l: 0.4080  data_time: 0.0659  time: 0.1291
2025/05/13 11:18:04 - mmengine - INFO - Epoch(train) [11][50/71]  lr: 2.0000e-03  eta: 0:05:49  time: 0.2456  data_time: 0.0076  memory: 1437  loss: 2.8132  loss_cls: 2.0411  loss_bbox: 0.7721
2025/05/13 11:18:09 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:18:10 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:18:13 - mmengine - INFO - bbox_mAP_copypaste: 0.370 0.720 0.335 -1.000 0.200 0.400
2025/05/13 11:18:13 - mmengine - INFO - Epoch(val) [11][7/7]    coco/bbox_mAP: 0.3700  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.3350  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2000  coco/bbox_mAP_l: 0.4000  data_time: 0.0673  time: 0.1313
2025/05/13 11:18:25 - mmengine - INFO - Epoch(train) [12][50/71]  lr: 2.0000e-03  eta: 0:05:30  time: 0.2491  data_time: 0.0077  memory: 1437  loss: 2.7506  loss_cls: 2.0042  loss_bbox: 0.7464
2025/05/13 11:18:30 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:18:31 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:18:34 - mmengine - INFO - bbox_mAP_copypaste: 0.380 0.731 0.355 -1.000 0.214 0.409
2025/05/13 11:18:34 - mmengine - INFO - Epoch(val) [12][7/7]    coco/bbox_mAP: 0.3800  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.3550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2140  coco/bbox_mAP_l: 0.4090  data_time: 0.0652  time: 0.1281
2025/05/13 11:18:46 - mmengine - INFO - Epoch(train) [13][50/71]  lr: 2.0000e-03  eta: 0:05:11  time: 0.2542  data_time: 0.0076  memory: 1437  loss: 2.7247  loss_cls: 1.9747  loss_bbox: 0.7501
2025/05/13 11:18:51 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:18:52 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:18:55 - mmengine - INFO - bbox_mAP_copypaste: 0.338 0.654 0.305 -1.000 0.193 0.365
2025/05/13 11:18:55 - mmengine - INFO - Epoch(val) [13][7/7]    coco/bbox_mAP: 0.3380  coco/bbox_mAP_50: 0.6540  coco/bbox_mAP_75: 0.3050  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1930  coco/bbox_mAP_l: 0.3650  data_time: 0.0653  time: 0.1278
2025/05/13 11:19:07 - mmengine - INFO - Epoch(train) [14][50/71]  lr: 2.0000e-03  eta: 0:04:52  time: 0.2504  data_time: 0.0076  memory: 1437  loss: 2.7409  loss_cls: 1.9795  loss_bbox: 0.7614
2025/05/13 11:19:12 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:19:13 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:19:16 - mmengine - INFO - bbox_mAP_copypaste: 0.366 0.677 0.357 -1.000 0.225 0.393
2025/05/13 11:19:16 - mmengine - INFO - Epoch(val) [14][7/7]    coco/bbox_mAP: 0.3660  coco/bbox_mAP_50: 0.6770  coco/bbox_mAP_75: 0.3570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2250  coco/bbox_mAP_l: 0.3930  data_time: 0.0668  time: 0.1273
2025/05/13 11:19:18 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:19:28 - mmengine - INFO - Epoch(train) [15][50/71]  lr: 2.0000e-03  eta: 0:04:33  time: 0.2492  data_time: 0.0077  memory: 1437  loss: 2.6976  loss_cls: 1.9732  loss_bbox: 0.7244
2025/05/13 11:19:33 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:19:34 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:19:37 - mmengine - INFO - bbox_mAP_copypaste: 0.302 0.702 0.180 -1.000 0.167 0.326
2025/05/13 11:19:37 - mmengine - INFO - Epoch(val) [15][7/7]    coco/bbox_mAP: 0.3020  coco/bbox_mAP_50: 0.7020  coco/bbox_mAP_75: 0.1800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1670  coco/bbox_mAP_l: 0.3260  data_time: 0.0693  time: 0.1333
2025/05/13 11:19:49 - mmengine - INFO - Epoch(train) [16][50/71]  lr: 2.0000e-03  eta: 0:04:15  time: 0.2511  data_time: 0.0076  memory: 1437  loss: 2.6342  loss_cls: 1.9087  loss_bbox: 0.7255
2025/05/13 11:19:54 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:19:56 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:19:58 - mmengine - INFO - bbox_mAP_copypaste: 0.349 0.726 0.275 -1.000 0.188 0.375
2025/05/13 11:19:58 - mmengine - INFO - Epoch(val) [16][7/7]    coco/bbox_mAP: 0.3490  coco/bbox_mAP_50: 0.7260  coco/bbox_mAP_75: 0.2750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1880  coco/bbox_mAP_l: 0.3750  data_time: 0.0623  time: 0.1278
2025/05/13 11:20:10 - mmengine - INFO - Epoch(train) [17][50/71]  lr: 2.0000e-04  eta: 0:03:57  time: 0.2466  data_time: 0.0077  memory: 1437  loss: 2.6074  loss_cls: 1.8852  loss_bbox: 0.7223
2025/05/13 11:20:15 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:20:16 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:20:19 - mmengine - INFO - bbox_mAP_copypaste: 0.360 0.711 0.313 -1.000 0.201 0.387
2025/05/13 11:20:19 - mmengine - INFO - Epoch(val) [17][7/7]    coco/bbox_mAP: 0.3600  coco/bbox_mAP_50: 0.7110  coco/bbox_mAP_75: 0.3130  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2010  coco/bbox_mAP_l: 0.3870  data_time: 0.0684  time: 0.1281
2025/05/13 11:20:31 - mmengine - INFO - Epoch(train) [18][50/71]  lr: 2.0000e-04  eta: 0:03:38  time: 0.2430  data_time: 0.0077  memory: 1437  loss: 2.5512  loss_cls: 1.8658  loss_bbox: 0.6854
2025/05/13 11:20:36 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:20:37 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:20:40 - mmengine - INFO - bbox_mAP_copypaste: 0.369 0.729 0.323 -1.000 0.206 0.396
2025/05/13 11:20:40 - mmengine - INFO - Epoch(val) [18][7/7]    coco/bbox_mAP: 0.3690  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.3230  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2060  coco/bbox_mAP_l: 0.3960  data_time: 0.0624  time: 0.1240
2025/05/13 11:20:52 - mmengine - INFO - Epoch(train) [19][50/71]  lr: 2.0000e-04  eta: 0:03:20  time: 0.2482  data_time: 0.0076  memory: 1437  loss: 2.5289  loss_cls: 1.8458  loss_bbox: 0.6831
2025/05/13 11:20:57 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:20:58 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:21:01 - mmengine - INFO - bbox_mAP_copypaste: 0.385 0.736 0.353 -1.000 0.216 0.413
2025/05/13 11:21:01 - mmengine - INFO - Epoch(val) [19][7/7]    coco/bbox_mAP: 0.3850  coco/bbox_mAP_50: 0.7360  coco/bbox_mAP_75: 0.3530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2160  coco/bbox_mAP_l: 0.4130  data_time: 0.0626  time: 0.1255
2025/05/13 11:21:13 - mmengine - INFO - Epoch(train) [20][50/71]  lr: 2.0000e-04  eta: 0:03:02  time: 0.2471  data_time: 0.0075  memory: 1437  loss: 2.4938  loss_cls: 1.8272  loss_bbox: 0.6666
2025/05/13 11:21:18 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:21:19 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:21:21 - mmengine - INFO - bbox_mAP_copypaste: 0.376 0.736 0.327 -1.000 0.205 0.404
2025/05/13 11:21:21 - mmengine - INFO - Epoch(val) [20][7/7]    coco/bbox_mAP: 0.3760  coco/bbox_mAP_50: 0.7360  coco/bbox_mAP_75: 0.3270  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2050  coco/bbox_mAP_l: 0.4040  data_time: 0.0623  time: 0.1238
2025/05/13 11:21:34 - mmengine - INFO - Epoch(train) [21][50/71]  lr: 2.0000e-04  eta: 0:02:44  time: 0.2454  data_time: 0.0077  memory: 1437  loss: 2.5314  loss_cls: 1.8414  loss_bbox: 0.6900
2025/05/13 11:21:39 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:21:40 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:21:42 - mmengine - INFO - bbox_mAP_copypaste: 0.384 0.733 0.354 -1.000 0.212 0.412
2025/05/13 11:21:42 - mmengine - INFO - Epoch(val) [21][7/7]    coco/bbox_mAP: 0.3840  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3540  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2120  coco/bbox_mAP_l: 0.4120  data_time: 0.0635  time: 0.1257
2025/05/13 11:21:55 - mmengine - INFO - Epoch(train) [22][50/71]  lr: 2.0000e-04  eta: 0:02:26  time: 0.2511  data_time: 0.0075  memory: 1437  loss: 2.5424  loss_cls: 1.8460  loss_bbox: 0.6965
2025/05/13 11:22:00 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:22:01 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:22:03 - mmengine - INFO - bbox_mAP_copypaste: 0.369 0.717 0.336 -1.000 0.205 0.396
2025/05/13 11:22:03 - mmengine - INFO - Epoch(val) [22][7/7]    coco/bbox_mAP: 0.3690  coco/bbox_mAP_50: 0.7170  coco/bbox_mAP_75: 0.3360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2050  coco/bbox_mAP_l: 0.3960  data_time: 0.0635  time: 0.1256
2025/05/13 11:22:16 - mmengine - INFO - Epoch(train) [23][50/71]  lr: 2.0000e-05  eta: 0:02:09  time: 0.2485  data_time: 0.0078  memory: 1437  loss: 2.5294  loss_cls: 1.8386  loss_bbox: 0.6909
2025/05/13 11:22:20 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:22:22 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:22:24 - mmengine - INFO - bbox_mAP_copypaste: 0.375 0.718 0.343 -1.000 0.212 0.402
2025/05/13 11:22:24 - mmengine - INFO - Epoch(val) [23][7/7]    coco/bbox_mAP: 0.3750  coco/bbox_mAP_50: 0.7180  coco/bbox_mAP_75: 0.3430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2120  coco/bbox_mAP_l: 0.4020  data_time: 0.0703  time: 0.1308
2025/05/13 11:22:36 - mmengine - INFO - Epoch(train) [24][50/71]  lr: 2.0000e-05  eta: 0:01:51  time: 0.2496  data_time: 0.0076  memory: 1437  loss: 2.4740  loss_cls: 1.8131  loss_bbox: 0.6609
2025/05/13 11:22:41 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:22:42 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:22:45 - mmengine - INFO - bbox_mAP_copypaste: 0.376 0.725 0.340 -1.000 0.209 0.403
2025/05/13 11:22:45 - mmengine - INFO - Epoch(val) [24][7/7]    coco/bbox_mAP: 0.3760  coco/bbox_mAP_50: 0.7250  coco/bbox_mAP_75: 0.3400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2090  coco/bbox_mAP_l: 0.4030  data_time: 0.0691  time: 0.1324
2025/05/13 11:22:57 - mmengine - INFO - Epoch(train) [25][50/71]  lr: 2.0000e-05  eta: 0:01:33  time: 0.2474  data_time: 0.0075  memory: 1437  loss: 2.5100  loss_cls: 1.8369  loss_bbox: 0.6731
2025/05/13 11:23:02 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:23:03 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:23:06 - mmengine - INFO - bbox_mAP_copypaste: 0.373 0.720 0.340 -1.000 0.209 0.400
2025/05/13 11:23:06 - mmengine - INFO - Epoch(val) [25][7/7]    coco/bbox_mAP: 0.3730  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.3400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2090  coco/bbox_mAP_l: 0.4000  data_time: 0.0664  time: 0.1280
2025/05/13 11:23:18 - mmengine - INFO - Epoch(train) [26][50/71]  lr: 2.0000e-05  eta: 0:01:15  time: 0.2432  data_time: 0.0075  memory: 1437  loss: 2.5279  loss_cls: 1.8465  loss_bbox: 0.6813
2025/05/13 11:23:23 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:23:24 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:23:27 - mmengine - INFO - bbox_mAP_copypaste: 0.372 0.720 0.336 -1.000 0.207 0.399
2025/05/13 11:23:27 - mmengine - INFO - Epoch(val) [26][7/7]    coco/bbox_mAP: 0.3720  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.3360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2070  coco/bbox_mAP_l: 0.3990  data_time: 0.0655  time: 0.1259
2025/05/13 11:23:39 - mmengine - INFO - Epoch(train) [27][50/71]  lr: 2.0000e-05  eta: 0:00:58  time: 0.2471  data_time: 0.0077  memory: 1437  loss: 2.5344  loss_cls: 1.8428  loss_bbox: 0.6916
2025/05/13 11:23:44 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:23:45 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:23:47 - mmengine - INFO - bbox_mAP_copypaste: 0.378 0.723 0.346 -1.000 0.210 0.405
2025/05/13 11:23:47 - mmengine - INFO - Epoch(val) [27][7/7]    coco/bbox_mAP: 0.3780  coco/bbox_mAP_50: 0.7230  coco/bbox_mAP_75: 0.3460  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2100  coco/bbox_mAP_l: 0.4050  data_time: 0.0650  time: 0.1248
2025/05/13 11:24:00 - mmengine - INFO - Epoch(train) [28][50/71]  lr: 2.0000e-05  eta: 0:00:40  time: 0.2495  data_time: 0.0075  memory: 1437  loss: 2.4919  loss_cls: 1.8231  loss_bbox: 0.6688
2025/05/13 11:24:04 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:24:06 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:24:08 - mmengine - INFO - bbox_mAP_copypaste: 0.378 0.723 0.347 -1.000 0.211 0.405
2025/05/13 11:24:08 - mmengine - INFO - Epoch(val) [28][7/7]    coco/bbox_mAP: 0.3780  coco/bbox_mAP_50: 0.7230  coco/bbox_mAP_75: 0.3470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2110  coco/bbox_mAP_l: 0.4050  data_time: 0.0608  time: 0.1239
2025/05/13 11:24:12 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:24:21 - mmengine - INFO - Epoch(train) [29][50/71]  lr: 2.0000e-05  eta: 0:00:22  time: 0.2531  data_time: 0.0074  memory: 1437  loss: 2.5016  loss_cls: 1.8201  loss_bbox: 0.6815
2025/05/13 11:24:25 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:24:27 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:24:29 - mmengine - INFO - bbox_mAP_copypaste: 0.377 0.723 0.345 -1.000 0.210 0.405
2025/05/13 11:24:29 - mmengine - INFO - Epoch(val) [29][7/7]    coco/bbox_mAP: 0.3770  coco/bbox_mAP_50: 0.7230  coco/bbox_mAP_75: 0.3450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2100  coco/bbox_mAP_l: 0.4050  data_time: 0.0602  time: 0.1230
2025/05/13 11:24:41 - mmengine - INFO - Epoch(train) [30][50/71]  lr: 2.0000e-05  eta: 0:00:05  time: 0.2472  data_time: 0.0076  memory: 1437  loss: 2.4949  loss_cls: 1.8137  loss_bbox: 0.6812
2025/05/13 11:24:46 - mmengine - INFO - Exp name: ssd300_pt_bal_aff_20250513_111354
2025/05/13 11:24:46 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/13 11:24:48 - mmengine - INFO - Evaluating bbox...
2025/05/13 11:24:51 - mmengine - INFO - bbox_mAP_copypaste: 0.379 0.726 0.348 -1.000 0.210 0.408
2025/05/13 11:24:51 - mmengine - INFO - Epoch(val) [30][7/7]    coco/bbox_mAP: 0.3790  coco/bbox_mAP_50: 0.7260  coco/bbox_mAP_75: 0.3480  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2100  coco/bbox_mAP_l: 0.4080  data_time: 0.0640  time: 0.1315
