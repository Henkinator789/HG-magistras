2025/05/09 22:39:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1131735125
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1131735125
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/09 22:39:25 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
cudnn_benchmark = True
custom_hooks = [
    dict(type='NumClassCheckHook'),
    dict(interval=50, priority='VERY_LOW', type='CheckInvalidLossHook'),
]
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = 300
launcher = 'none'
load_from = 'D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        ceil_mode=True,
        depth=16,
        init_cfg=dict(
            checkpoint='open-mmlab://vgg16_caffe', type='Pretrained'),
        out_feature_indices=(
            22,
            34,
        ),
        out_indices=(
            3,
            4,
        ),
        type='SSDVGG',
        with_last_pool=False),
    bbox_head=dict(
        anchor_generator=dict(
            basesize_ratio_range=(
                0.15,
                0.9,
            ),
            input_size=300,
            ratios=[
                [
                    2,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                    3,
                ],
                [
                    2,
                ],
                [
                    2,
                ],
            ],
            scale_major=False,
            strides=[
                8,
                16,
                32,
                64,
                100,
                300,
            ],
            type='SSDAnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                0.1,
                0.1,
                0.2,
                0.2,
            ],
            type='DeltaXYWHBBoxCoder'),
        in_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        num_classes=4,
        type='SSDHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=1,
        std=[
            1,
            1,
            1,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=(
            512,
            1024,
        ),
        l2_norm_scale=20,
        level_paddings=(
            1,
            1,
            0,
            0,
        ),
        level_strides=(
            2,
            2,
            1,
            1,
        ),
        out_channels=(
            512,
            1024,
            512,
            256,
            256,
            256,
        ),
        type='SSDNeck'),
    test_cfg=dict(
        max_per_img=200,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.45, type='nms'),
        nms_pre=1000,
        score_thr=0.02),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            gt_max_assign_all=False,
            ignore_iof_thr=-1,
            min_pos_iou=0.0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        neg_pos_ratio=3,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler'),
        smoothl1_beta=1.0),
    type='SingleStageDetector')
optim_wrapper = dict(
    optimizer=dict(lr=0.002, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=24,
        gamma=0.1,
        milestones=[
            16,
            22,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=None,
    batch_size=8,
    dataset=dict(
        dataset=dict(
            ann_file='train/annotations.json',
            backend_args=None,
            data_prefix=dict(img='train/'),
            data_root='D:/Repositories/test/data/larch_casebearer/',
            filter_cfg=dict(filter_empty_gt=True, min_size=32),
            metainfo=dict(
                classes=(
                    'H',
                    'LD',
                    'HD',
                    'other',
                ),
                palette=[
                    (
                        0,
                        255,
                        0,
                    ),
                    (
                        255,
                        128,
                        0,
                    ),
                    (
                        255,
                        0,
                        0,
                    ),
                    (
                        0,
                        0,
                        255,
                    ),
                ]),
            pipeline=[
                dict(backend_args=None, type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    ratio_range=(
                        1,
                        4,
                    ),
                    to_rgb=True,
                    type='Expand'),
                dict(
                    min_crop_size=0.3,
                    min_ious=(
                        0.1,
                        0.3,
                        0.5,
                        0.7,
                        0.9,
                    ),
                    type='MinIoURandomCrop'),
                dict(keep_ratio=False, scale=(
                    300,
                    300,
                ), type='Resize'),
                dict(prob=0.5, type='RandomFlip'),
                dict(
                    brightness_delta=32,
                    contrast_range=(
                        0.5,
                        1.5,
                    ),
                    hue_delta=18,
                    saturation_range=(
                        0.5,
                        1.5,
                    ),
                    type='PhotoMetricDistortion'),
                dict(type='PackDetInputs'),
            ],
            type='CocoDataset'),
        oversample_thr=0.25,
        type='ClassBalancedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        ratio_range=(
            1,
            4,
        ),
        to_rgb=True,
        type='Expand'),
    dict(
        min_crop_size=0.3,
        min_ious=(
            0.1,
            0.3,
            0.5,
            0.7,
            0.9,
        ),
        type='MinIoURandomCrop'),
    dict(keep_ratio=False, scale=(
        300,
        300,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        brightness_delta=32,
        contrast_range=(
            0.5,
            1.5,
        ),
        hue_delta=18,
        saturation_range=(
            0.5,
            1.5,
        ),
        type='PhotoMetricDistortion'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=False, scale=(
                300,
                300,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/ssd300'

2025/05/09 22:39:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/09 22:39:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
(VERY_LOW    ) CheckInvalidLossHook               
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) NumClassCheckHook                  
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/09 22:39:27 - mmengine - INFO - load model from: open-mmlab://vgg16_caffe
2025/05/09 22:39:27 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://vgg16_caffe
Name of parameter - Initialization information

backbone.features.0.weight - torch.Size([64, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.0.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.5.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.7.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.10.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.12.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.14.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.17.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.19.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.21.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.24.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.26.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.28.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.31.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

backbone.features.33.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://vgg16_caffe 

neck.l2_norm.weight - torch.Size([512]): 
ConstantInit: val=20, bias=0 

neck.extra_layers.0.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.0.1.conv.weight - torch.Size([512, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.0.1.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.0.conv.weight - torch.Size([128, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.1.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.1.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.2.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.2.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.0.conv.weight - torch.Size([128, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.0.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

neck.extra_layers.3.1.conv.weight - torch.Size([256, 128, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.extra_layers.3.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SingleStageDetector  

bbox_head.cls_convs.0.0.weight - torch.Size([20, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.0.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.weight - torch.Size([30, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.1.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.weight - torch.Size([30, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.2.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.weight - torch.Size([30, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.3.0.bias - torch.Size([30]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.4.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.weight - torch.Size([20, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.cls_convs.5.0.bias - torch.Size([20]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.weight - torch.Size([16, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.0.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.weight - torch.Size([24, 1024, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.1.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.weight - torch.Size([24, 512, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.2.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.weight - torch.Size([24, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.3.0.bias - torch.Size([24]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.4.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.weight - torch.Size([16, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.reg_convs.5.0.bias - torch.Size([16]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2025/05/09 22:39:28 - mmengine - INFO - Load checkpoint from D:/Repositories/test/25-05-09/ssd300/weights/ssd300_coco_20210803_015428-d231a06e.pth
2025/05/09 22:39:28 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/09 22:39:28 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/09 22:39:28 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\ssd300.
2025/05/09 22:39:56 - mmengine - INFO - Epoch(train)  [1][50/71]  lr: 1.9820e-04  eta: 0:19:33  time: 0.5640  data_time: 0.2829  memory: 1437  loss: 9.0529  loss_cls: 6.9245  loss_bbox: 2.1284
2025/05/09 22:40:03 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:40:12 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:40:15 - mmengine - INFO - bbox_mAP_copypaste: 0.052 0.118 0.041 -1.000 0.009 0.059
2025/05/09 22:40:15 - mmengine - INFO - Epoch(val) [1][7/7]    coco/bbox_mAP: 0.0520  coco/bbox_mAP_50: 0.1180  coco/bbox_mAP_75: 0.0410  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0090  coco/bbox_mAP_l: 0.0590  data_time: 1.2045  time: 1.3267
2025/05/09 22:40:16 - mmengine - INFO - The best checkpoint with 0.0520 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/09 22:40:35 - mmengine - INFO - Epoch(train)  [2][50/71]  lr: 4.8248e-04  eta: 0:15:04  time: 0.3822  data_time: 0.1322  memory: 1437  loss: 4.8417  loss_cls: 3.5264  loss_bbox: 1.3154
2025/05/09 22:40:42 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:40:43 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:40:46 - mmengine - INFO - bbox_mAP_copypaste: 0.095 0.184 0.091 -1.000 0.024 0.104
2025/05/09 22:40:46 - mmengine - INFO - Epoch(val) [2][7/7]    coco/bbox_mAP: 0.0950  coco/bbox_mAP_50: 0.1840  coco/bbox_mAP_75: 0.0910  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0240  coco/bbox_mAP_l: 0.1040  data_time: 0.0665  time: 0.1416
2025/05/09 22:40:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/09 22:40:46 - mmengine - INFO - The best checkpoint with 0.0950 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/09 22:41:04 - mmengine - INFO - Epoch(train)  [3][50/71]  lr: 7.6677e-04  eta: 0:13:24  time: 0.3614  data_time: 0.1158  memory: 1437  loss: 4.2553  loss_cls: 3.1112  loss_bbox: 1.1441
2025/05/09 22:41:12 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:41:13 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:41:16 - mmengine - INFO - bbox_mAP_copypaste: 0.112 0.214 0.107 -1.000 0.055 0.121
2025/05/09 22:41:16 - mmengine - INFO - Epoch(val) [3][7/7]    coco/bbox_mAP: 0.1120  coco/bbox_mAP_50: 0.2140  coco/bbox_mAP_75: 0.1070  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0550  coco/bbox_mAP_l: 0.1210  data_time: 0.0654  time: 0.1298
2025/05/09 22:41:16 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/09 22:41:16 - mmengine - INFO - The best checkpoint with 0.1120 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/09 22:41:35 - mmengine - INFO - Epoch(train)  [4][50/71]  lr: 1.0511e-03  eta: 0:12:30  time: 0.3687  data_time: 0.1028  memory: 1437  loss: 4.1398  loss_cls: 2.9625  loss_bbox: 1.1773
2025/05/09 22:41:42 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:41:43 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:41:45 - mmengine - INFO - bbox_mAP_copypaste: 0.162 0.316 0.155 -1.000 0.094 0.181
2025/05/09 22:41:45 - mmengine - INFO - Epoch(val) [4][7/7]    coco/bbox_mAP: 0.1620  coco/bbox_mAP_50: 0.3160  coco/bbox_mAP_75: 0.1550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0940  coco/bbox_mAP_l: 0.1810  data_time: 0.0626  time: 0.1352
2025/05/09 22:41:45 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/09 22:41:46 - mmengine - INFO - The best checkpoint with 0.1620 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/09 22:42:05 - mmengine - INFO - Epoch(train)  [5][50/71]  lr: 1.3353e-03  eta: 0:11:49  time: 0.3901  data_time: 0.1234  memory: 1437  loss: 3.7728  loss_cls: 2.7486  loss_bbox: 1.0242
2025/05/09 22:42:13 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:42:14 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:42:17 - mmengine - INFO - bbox_mAP_copypaste: 0.212 0.410 0.192 -1.000 0.108 0.232
2025/05/09 22:42:17 - mmengine - INFO - Epoch(val) [5][7/7]    coco/bbox_mAP: 0.2120  coco/bbox_mAP_50: 0.4100  coco/bbox_mAP_75: 0.1920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1080  coco/bbox_mAP_l: 0.2320  data_time: 0.0668  time: 0.1321
2025/05/09 22:42:17 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/09 22:42:17 - mmengine - INFO - The best checkpoint with 0.2120 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/09 22:42:35 - mmengine - INFO - Epoch(train)  [6][50/71]  lr: 1.6196e-03  eta: 0:11:10  time: 0.3521  data_time: 0.1089  memory: 1437  loss: 3.6425  loss_cls: 2.6168  loss_bbox: 1.0256
2025/05/09 22:42:43 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:42:44 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:42:46 - mmengine - INFO - bbox_mAP_copypaste: 0.256 0.485 0.243 -1.000 0.142 0.280
2025/05/09 22:42:46 - mmengine - INFO - Epoch(val) [6][7/7]    coco/bbox_mAP: 0.2560  coco/bbox_mAP_50: 0.4850  coco/bbox_mAP_75: 0.2430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1420  coco/bbox_mAP_l: 0.2800  data_time: 0.0661  time: 0.1286
2025/05/09 22:42:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/09 22:42:47 - mmengine - INFO - The best checkpoint with 0.2560 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/09 22:43:05 - mmengine - INFO - Epoch(train)  [7][50/71]  lr: 1.9039e-03  eta: 0:10:35  time: 0.3587  data_time: 0.1030  memory: 1437  loss: 3.5638  loss_cls: 2.5504  loss_bbox: 1.0134
2025/05/09 22:43:12 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:43:13 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:43:16 - mmengine - INFO - bbox_mAP_copypaste: 0.334 0.618 0.329 -1.000 0.176 0.366
2025/05/09 22:43:16 - mmengine - INFO - Epoch(val) [7][7/7]    coco/bbox_mAP: 0.3340  coco/bbox_mAP_50: 0.6180  coco/bbox_mAP_75: 0.3290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1760  coco/bbox_mAP_l: 0.3660  data_time: 0.0653  time: 0.1372
2025/05/09 22:43:16 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/09 22:43:16 - mmengine - INFO - The best checkpoint with 0.3340 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/09 22:43:35 - mmengine - INFO - Epoch(train)  [8][50/71]  lr: 2.0000e-03  eta: 0:10:04  time: 0.3706  data_time: 0.1060  memory: 1437  loss: 3.3871  loss_cls: 2.4249  loss_bbox: 0.9622
2025/05/09 22:43:42 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:43:44 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:43:46 - mmengine - INFO - bbox_mAP_copypaste: 0.347 0.629 0.350 -1.000 0.166 0.378
2025/05/09 22:43:46 - mmengine - INFO - Epoch(val) [8][7/7]    coco/bbox_mAP: 0.3470  coco/bbox_mAP_50: 0.6290  coco/bbox_mAP_75: 0.3500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1660  coco/bbox_mAP_l: 0.3780  data_time: 0.0646  time: 0.1318
2025/05/09 22:43:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/09 22:43:47 - mmengine - INFO - The best checkpoint with 0.3470 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/09 22:44:05 - mmengine - INFO - Epoch(train)  [9][50/71]  lr: 2.0000e-03  eta: 0:09:34  time: 0.3710  data_time: 0.1044  memory: 1437  loss: 3.3126  loss_cls: 2.3570  loss_bbox: 0.9556
2025/05/09 22:44:13 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:44:14 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:44:17 - mmengine - INFO - bbox_mAP_copypaste: 0.260 0.474 0.253 -1.000 0.146 0.283
2025/05/09 22:44:17 - mmengine - INFO - Epoch(val) [9][7/7]    coco/bbox_mAP: 0.2600  coco/bbox_mAP_50: 0.4740  coco/bbox_mAP_75: 0.2530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1460  coco/bbox_mAP_l: 0.2830  data_time: 0.0667  time: 0.1341
2025/05/09 22:44:36 - mmengine - INFO - Epoch(train) [10][50/71]  lr: 2.0000e-03  eta: 0:09:08  time: 0.3983  data_time: 0.1432  memory: 1437  loss: 3.3632  loss_cls: 2.3750  loss_bbox: 0.9882
2025/05/09 22:44:43 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:44:44 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:44:47 - mmengine - INFO - bbox_mAP_copypaste: 0.386 0.688 0.404 -1.000 0.209 0.418
2025/05/09 22:44:47 - mmengine - INFO - Epoch(val) [10][7/7]    coco/bbox_mAP: 0.3860  coco/bbox_mAP_50: 0.6880  coco/bbox_mAP_75: 0.4040  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2090  coco/bbox_mAP_l: 0.4180  data_time: 0.0685  time: 0.1337
2025/05/09 22:44:47 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/09 22:44:47 - mmengine - INFO - The best checkpoint with 0.3860 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2025/05/09 22:45:07 - mmengine - INFO - Epoch(train) [11][50/71]  lr: 2.0000e-03  eta: 0:08:40  time: 0.3890  data_time: 0.1087  memory: 1437  loss: 3.2369  loss_cls: 2.2666  loss_bbox: 0.9703
2025/05/09 22:45:14 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:45:16 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:45:18 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.716 0.408 -1.000 0.218 0.430
2025/05/09 22:45:18 - mmengine - INFO - Epoch(val) [11][7/7]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.7160  coco/bbox_mAP_75: 0.4080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2180  coco/bbox_mAP_l: 0.4300  data_time: 0.0648  time: 0.1305
2025/05/09 22:45:18 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_10.pth is removed
2025/05/09 22:45:19 - mmengine - INFO - The best checkpoint with 0.3980 coco/bbox_mAP at 11 epoch is saved to best_coco_bbox_mAP_epoch_11.pth.
2025/05/09 22:45:37 - mmengine - INFO - Epoch(train) [12][50/71]  lr: 2.0000e-03  eta: 0:08:11  time: 0.3641  data_time: 0.1207  memory: 1437  loss: 3.2214  loss_cls: 2.2659  loss_bbox: 0.9555
2025/05/09 22:45:44 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:45:45 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:45:48 - mmengine - INFO - bbox_mAP_copypaste: 0.345 0.622 0.355 -1.000 0.189 0.377
2025/05/09 22:45:48 - mmengine - INFO - Epoch(val) [12][7/7]    coco/bbox_mAP: 0.3450  coco/bbox_mAP_50: 0.6220  coco/bbox_mAP_75: 0.3550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1890  coco/bbox_mAP_l: 0.3770  data_time: 0.0676  time: 0.1305
2025/05/09 22:46:06 - mmengine - INFO - Epoch(train) [13][50/71]  lr: 2.0000e-03  eta: 0:07:43  time: 0.3724  data_time: 0.1346  memory: 1437  loss: 3.1348  loss_cls: 2.2224  loss_bbox: 0.9124
2025/05/09 22:46:14 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:46:15 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:46:17 - mmengine - INFO - bbox_mAP_copypaste: 0.335 0.601 0.351 -1.000 0.191 0.364
2025/05/09 22:46:17 - mmengine - INFO - Epoch(val) [13][7/7]    coco/bbox_mAP: 0.3350  coco/bbox_mAP_50: 0.6010  coco/bbox_mAP_75: 0.3510  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1910  coco/bbox_mAP_l: 0.3640  data_time: 0.0662  time: 0.1284
2025/05/09 22:46:35 - mmengine - INFO - Epoch(train) [14][50/71]  lr: 2.0000e-03  eta: 0:07:14  time: 0.3578  data_time: 0.1201  memory: 1437  loss: 3.0443  loss_cls: 2.1700  loss_bbox: 0.8743
2025/05/09 22:46:42 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:46:43 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:46:46 - mmengine - INFO - bbox_mAP_copypaste: 0.415 0.733 0.432 -1.000 0.226 0.445
2025/05/09 22:46:46 - mmengine - INFO - Epoch(val) [14][7/7]    coco/bbox_mAP: 0.4150  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.4320  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2260  coco/bbox_mAP_l: 0.4450  data_time: 0.0679  time: 0.1309
2025/05/09 22:46:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_11.pth is removed
2025/05/09 22:46:46 - mmengine - INFO - The best checkpoint with 0.4150 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/09 22:46:49 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:47:05 - mmengine - INFO - Epoch(train) [15][50/71]  lr: 2.0000e-03  eta: 0:06:46  time: 0.3663  data_time: 0.1247  memory: 1437  loss: 2.9715  loss_cls: 2.1205  loss_bbox: 0.8510
2025/05/09 22:47:12 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:47:13 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:47:15 - mmengine - INFO - bbox_mAP_copypaste: 0.405 0.711 0.437 -1.000 0.212 0.434
2025/05/09 22:47:15 - mmengine - INFO - Epoch(val) [15][7/7]    coco/bbox_mAP: 0.4050  coco/bbox_mAP_50: 0.7110  coco/bbox_mAP_75: 0.4370  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2120  coco/bbox_mAP_l: 0.4340  data_time: 0.0688  time: 0.1308
2025/05/09 22:47:33 - mmengine - INFO - Epoch(train) [16][50/71]  lr: 2.0000e-03  eta: 0:06:18  time: 0.3572  data_time: 0.1193  memory: 1437  loss: 2.9721  loss_cls: 2.1330  loss_bbox: 0.8391
2025/05/09 22:47:40 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:47:41 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:47:44 - mmengine - INFO - bbox_mAP_copypaste: 0.374 0.662 0.400 -1.000 0.199 0.406
2025/05/09 22:47:44 - mmengine - INFO - Epoch(val) [16][7/7]    coco/bbox_mAP: 0.3740  coco/bbox_mAP_50: 0.6620  coco/bbox_mAP_75: 0.4000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1990  coco/bbox_mAP_l: 0.4060  data_time: 0.0675  time: 0.1297
2025/05/09 22:48:02 - mmengine - INFO - Epoch(train) [17][50/71]  lr: 2.0000e-04  eta: 0:05:51  time: 0.3748  data_time: 0.1367  memory: 1437  loss: 2.8502  loss_cls: 2.0316  loss_bbox: 0.8186
2025/05/09 22:48:10 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:48:12 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:48:14 - mmengine - INFO - bbox_mAP_copypaste: 0.403 0.698 0.438 -1.000 0.227 0.433
2025/05/09 22:48:14 - mmengine - INFO - Epoch(val) [17][7/7]    coco/bbox_mAP: 0.4030  coco/bbox_mAP_50: 0.6980  coco/bbox_mAP_75: 0.4380  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.4330  data_time: 0.0681  time: 0.1314
2025/05/09 22:48:33 - mmengine - INFO - Epoch(train) [18][50/71]  lr: 2.0000e-04  eta: 0:05:25  time: 0.3761  data_time: 0.1319  memory: 1437  loss: 2.8384  loss_cls: 2.0435  loss_bbox: 0.7948
2025/05/09 22:48:40 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:48:41 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:48:43 - mmengine - INFO - bbox_mAP_copypaste: 0.411 0.712 0.449 -1.000 0.224 0.442
2025/05/09 22:48:43 - mmengine - INFO - Epoch(val) [18][7/7]    coco/bbox_mAP: 0.4110  coco/bbox_mAP_50: 0.7120  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2240  coco/bbox_mAP_l: 0.4420  data_time: 0.0654  time: 0.1311
2025/05/09 22:49:01 - mmengine - INFO - Epoch(train) [19][50/71]  lr: 2.0000e-04  eta: 0:04:57  time: 0.3494  data_time: 0.1124  memory: 1437  loss: 2.7454  loss_cls: 1.9912  loss_bbox: 0.7543
2025/05/09 22:49:09 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:49:10 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:49:13 - mmengine - INFO - bbox_mAP_copypaste: 0.414 0.716 0.452 -1.000 0.225 0.444
2025/05/09 22:49:13 - mmengine - INFO - Epoch(val) [19][7/7]    coco/bbox_mAP: 0.4140  coco/bbox_mAP_50: 0.7160  coco/bbox_mAP_75: 0.4520  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2250  coco/bbox_mAP_l: 0.4440  data_time: 0.0628  time: 0.1277
2025/05/09 22:49:30 - mmengine - INFO - Epoch(train) [20][50/71]  lr: 2.0000e-04  eta: 0:04:31  time: 0.3554  data_time: 0.1142  memory: 1437  loss: 2.7700  loss_cls: 1.9902  loss_bbox: 0.7799
2025/05/09 22:49:38 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:49:39 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:49:41 - mmengine - INFO - bbox_mAP_copypaste: 0.412 0.710 0.451 -1.000 0.227 0.443
2025/05/09 22:49:41 - mmengine - INFO - Epoch(val) [20][7/7]    coco/bbox_mAP: 0.4120  coco/bbox_mAP_50: 0.7100  coco/bbox_mAP_75: 0.4510  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.4430  data_time: 0.0684  time: 0.1303
2025/05/09 22:50:00 - mmengine - INFO - Epoch(train) [21][50/71]  lr: 2.0000e-04  eta: 0:04:04  time: 0.3646  data_time: 0.1245  memory: 1437  loss: 2.7086  loss_cls: 1.9720  loss_bbox: 0.7365
2025/05/09 22:50:07 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:50:08 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:50:11 - mmengine - INFO - bbox_mAP_copypaste: 0.425 0.734 0.464 -1.000 0.228 0.456
2025/05/09 22:50:11 - mmengine - INFO - Epoch(val) [21][7/7]    coco/bbox_mAP: 0.4250  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.4640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2280  coco/bbox_mAP_l: 0.4560  data_time: 0.0656  time: 0.1279
2025/05/09 22:50:11 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\ssd300\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/09 22:50:11 - mmengine - INFO - The best checkpoint with 0.4250 coco/bbox_mAP at 21 epoch is saved to best_coco_bbox_mAP_epoch_21.pth.
2025/05/09 22:50:29 - mmengine - INFO - Epoch(train) [22][50/71]  lr: 2.0000e-04  eta: 0:03:37  time: 0.3491  data_time: 0.1104  memory: 1437  loss: 2.7626  loss_cls: 1.9941  loss_bbox: 0.7685
2025/05/09 22:50:36 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:50:37 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:50:40 - mmengine - INFO - bbox_mAP_copypaste: 0.401 0.693 0.443 -1.000 0.222 0.432
2025/05/09 22:50:40 - mmengine - INFO - Epoch(val) [22][7/7]    coco/bbox_mAP: 0.4010  coco/bbox_mAP_50: 0.6930  coco/bbox_mAP_75: 0.4430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2220  coco/bbox_mAP_l: 0.4320  data_time: 0.0675  time: 0.1296
2025/05/09 22:50:58 - mmengine - INFO - Epoch(train) [23][50/71]  lr: 2.0000e-05  eta: 0:03:11  time: 0.3739  data_time: 0.1346  memory: 1437  loss: 2.7956  loss_cls: 1.9951  loss_bbox: 0.8004
2025/05/09 22:51:05 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:51:06 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:51:09 - mmengine - INFO - bbox_mAP_copypaste: 0.416 0.718 0.458 -1.000 0.228 0.446
2025/05/09 22:51:09 - mmengine - INFO - Epoch(val) [23][7/7]    coco/bbox_mAP: 0.4160  coco/bbox_mAP_50: 0.7180  coco/bbox_mAP_75: 0.4580  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2280  coco/bbox_mAP_l: 0.4460  data_time: 0.0721  time: 0.1345
2025/05/09 22:51:26 - mmengine - INFO - Epoch(train) [24][50/71]  lr: 2.0000e-05  eta: 0:02:44  time: 0.3468  data_time: 0.1109  memory: 1437  loss: 2.7611  loss_cls: 1.9953  loss_bbox: 0.7659
2025/05/09 22:51:33 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:51:34 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:51:37 - mmengine - INFO - bbox_mAP_copypaste: 0.417 0.717 0.459 -1.000 0.227 0.447
2025/05/09 22:51:37 - mmengine - INFO - Epoch(val) [24][7/7]    coco/bbox_mAP: 0.4170  coco/bbox_mAP_50: 0.7170  coco/bbox_mAP_75: 0.4590  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.4470  data_time: 0.0665  time: 0.1295
2025/05/09 22:51:54 - mmengine - INFO - Epoch(train) [25][50/71]  lr: 2.0000e-05  eta: 0:02:18  time: 0.3488  data_time: 0.1099  memory: 1437  loss: 2.7925  loss_cls: 2.0037  loss_bbox: 0.7888
2025/05/09 22:52:01 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:52:02 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:52:04 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.727 0.465 -1.000 0.229 0.454
2025/05/09 22:52:04 - mmengine - INFO - Epoch(val) [25][7/7]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.7270  coco/bbox_mAP_75: 0.4650  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2290  coco/bbox_mAP_l: 0.4540  data_time: 0.0662  time: 0.1306
2025/05/09 22:52:22 - mmengine - INFO - Epoch(train) [26][50/71]  lr: 2.0000e-05  eta: 0:01:51  time: 0.3577  data_time: 0.1150  memory: 1437  loss: 2.7837  loss_cls: 1.9969  loss_bbox: 0.7867
2025/05/09 22:52:29 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:52:30 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:52:33 - mmengine - INFO - bbox_mAP_copypaste: 0.418 0.721 0.459 -1.000 0.228 0.449
2025/05/09 22:52:33 - mmengine - INFO - Epoch(val) [26][7/7]    coco/bbox_mAP: 0.4180  coco/bbox_mAP_50: 0.7210  coco/bbox_mAP_75: 0.4590  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2280  coco/bbox_mAP_l: 0.4490  data_time: 0.0683  time: 0.1289
2025/05/09 22:52:51 - mmengine - INFO - Epoch(train) [27][50/71]  lr: 2.0000e-05  eta: 0:01:25  time: 0.3711  data_time: 0.1325  memory: 1437  loss: 2.7647  loss_cls: 1.9853  loss_bbox: 0.7794
2025/05/09 22:52:58 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:52:59 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:53:02 - mmengine - INFO - bbox_mAP_copypaste: 0.418 0.720 0.461 -1.000 0.227 0.449
2025/05/09 22:53:02 - mmengine - INFO - Epoch(val) [27][7/7]    coco/bbox_mAP: 0.4180  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.4610  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.4490  data_time: 0.0679  time: 0.1305
2025/05/09 22:53:21 - mmengine - INFO - Epoch(train) [28][50/71]  lr: 2.0000e-05  eta: 0:00:59  time: 0.3836  data_time: 0.1420  memory: 1437  loss: 2.8154  loss_cls: 1.9940  loss_bbox: 0.8215
2025/05/09 22:53:29 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:53:30 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:53:32 - mmengine - INFO - bbox_mAP_copypaste: 0.419 0.721 0.462 -1.000 0.227 0.450
2025/05/09 22:53:32 - mmengine - INFO - Epoch(val) [28][7/7]    coco/bbox_mAP: 0.4190  coco/bbox_mAP_50: 0.7210  coco/bbox_mAP_75: 0.4620  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.4500  data_time: 0.0729  time: 0.1345
2025/05/09 22:53:37 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:53:51 - mmengine - INFO - Epoch(train) [29][50/71]  lr: 2.0000e-05  eta: 0:00:33  time: 0.3685  data_time: 0.1289  memory: 1437  loss: 2.7457  loss_cls: 1.9849  loss_bbox: 0.7609
2025/05/09 22:53:58 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:53:59 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:54:01 - mmengine - INFO - bbox_mAP_copypaste: 0.420 0.721 0.461 -1.000 0.229 0.451
2025/05/09 22:54:01 - mmengine - INFO - Epoch(val) [29][7/7]    coco/bbox_mAP: 0.4200  coco/bbox_mAP_50: 0.7210  coco/bbox_mAP_75: 0.4610  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2290  coco/bbox_mAP_l: 0.4510  data_time: 0.0691  time: 0.1290
2025/05/09 22:54:19 - mmengine - INFO - Epoch(train) [30][50/71]  lr: 2.0000e-05  eta: 0:00:07  time: 0.3588  data_time: 0.1217  memory: 1437  loss: 2.7675  loss_cls: 1.9952  loss_bbox: 0.7723
2025/05/09 22:54:27 - mmengine - INFO - Exp name: ssd300_pt_df_bal_20250509_223921
2025/05/09 22:54:27 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/09 22:54:29 - mmengine - INFO - Evaluating bbox...
2025/05/09 22:54:31 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.727 0.469 -1.000 0.229 0.454
2025/05/09 22:54:31 - mmengine - INFO - Epoch(val) [30][7/7]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.7270  coco/bbox_mAP_75: 0.4690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2290  coco/bbox_mAP_l: 0.4540  data_time: 0.0653  time: 0.1291
