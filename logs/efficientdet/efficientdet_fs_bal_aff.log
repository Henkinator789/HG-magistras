2025/05/12 16:04:09 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1916873942
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1916873942
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/12 16:04:10 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=128, enable=False)
backend_args = None
batch_augments = [
    dict(size=(
        896,
        896,
    ), type='BatchFixedSizePad'),
]
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=49,
        type='EMAHook',
        update_buffers=True),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'projects.EfficientDet.efficientdet',
    ])
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet',
        interval=0,
        save_best='coco/bbox_mAP',
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet', type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evalute_type = 'CocoMetric'
image_size = 896
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet', by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 300
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        arch='b3',
        conv_cfg=dict(type='Conv2dSamePadding'),
        drop_path_rate=0.3,
        frozen_stages=0,
        init_cfg=dict(
            checkpoint=
            'D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth',
            prefix='backbone',
            type='Pretrained'),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        norm_eval=False,
        out_indices=(
            3,
            4,
            5,
        ),
        type='EfficientNet'),
    bbox_head=dict(
        anchor_generator=dict(
            center_offset=0.5,
            octave_base_scale=4,
            ratios=[
                1.0,
                0.5,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=160,
        in_channels=160,
        loss_bbox=dict(beta=0.1, loss_weight=50, type='HuberLoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=1.5,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_classes=4,
        num_ins=5,
        stacked_convs=4,
        type='EfficientDetSepBNHead'),
    data_preprocessor=dict(
        batch_augments=[
            dict(size=(
                896,
                896,
            ), type='BatchFixedSizePad'),
        ],
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=896,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            48,
            136,
            384,
        ],
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_stages=6,
        out_channels=160,
        start_level=0,
        type='BiFPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(
            iou_threshold=0.3,
            method='gaussian',
            min_score=0.001,
            sigma=0.5,
            type='soft_nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            ignore_iof_thr=-1,
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler')),
    type='EfficientDet')
norm_cfg = dict(eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    _scope_='mmdet',
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.16, momentum=0.9, type='SGD', weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=917, start_factor=0.1, type='LinearLR'),
    dict(
        T_max=299,
        begin=1,
        by_epoch=True,
        convert_to_iter_based=True,
        end=300,
        eta_min=0.0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(_scope_='mmdet', type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(
    _scope_='mmdet', max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(_scope_='mmdet', type='AspectRatioBatchSampler'),
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        dataset=dict(
            ann_file='train/annotations.json',
            backend_args=None,
            data_prefix=dict(img='train/'),
            data_root='D:/Repositories/test/data/larch_casebearer/',
            metainfo=dict(
                classes=(
                    'H',
                    'LD',
                    'HD',
                    'other',
                ),
                palette=[
                    (
                        0,
                        255,
                        0,
                    ),
                    (
                        255,
                        128,
                        0,
                    ),
                    (
                        255,
                        0,
                        0,
                    ),
                    (
                        0,
                        0,
                        255,
                    ),
                ]),
            pipeline=[
                dict(backend_args=None, type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(keep_ratio=True, scale=(
                    896,
                    896,
                ), type='Resize'),
                dict(type='RandomAffine'),
                dict(type='PackDetInputs'),
            ],
            type='CocoDataset'),
        oversample_thr=0.25,
        type='ClassBalancedDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(_scope_='mmdet', type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    _scope_='mmdet',
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '25-05-09/efficientdet'

2025/05/12 16:04:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/12 16:04:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.weight:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 16:04:11 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.cls_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:12 - mmengine - INFO - paramwise_options -- bbox_head.reg_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 16:04:13 - mmengine - INFO - load backbone in model from: D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth
2025/05/12 16:04:13 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layers.6.bn.running_var, layers.6.bn.running_mean, layers.6.bn.weight, layers.6.bn.bias, layers.6.conv.weight

Name of parameter - Initialization information

backbone.layers.0.conv.weight - torch.Size([40, 3, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.bias - torch.Size([10]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.conv.weight - torch.Size([24, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.weight - torch.Size([6, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.weight - torch.Size([24, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.weight - torch.Size([6, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.weight - torch.Size([144, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.conv.weight - torch.Size([288, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.conv.weight - torch.Size([96, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.conv.weight - torch.Size([576, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.conv.weight - torch.Size([136, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.conv.weight - torch.Size([232, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.conv.weight - torch.Size([1392, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.conv.weight - torch.Size([384, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.conv.weight - torch.Size([2304, 384, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.conv.weight - torch.Size([2304, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.weight - torch.Size([96, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.weight - torch.Size([2304, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.conv.weight - torch.Size([384, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

neck.bifpn.0.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.weight - torch.Size([160, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  
2025/05/12 16:04:13 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/12 16:04:13 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/12 16:04:13 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\efficientdet.
2025/05/12 16:04:32 - mmengine - INFO - Epoch(train)  [1][ 50/563]  base_lr: 2.3703e-02 lr: 2.3703e-02  eta: 1:47:01  time: 0.3813  data_time: 0.0898  memory: 5288  grad_norm: 3.8525  loss: 1.7748  loss_cls: 1.1154  loss_bbox: 0.6595
2025/05/12 16:04:44 - mmengine - INFO - Epoch(train)  [1][100/563]  base_lr: 3.1563e-02 lr: 3.1563e-02  eta: 1:28:51  time: 0.2537  data_time: 0.0039  memory: 5459  grad_norm: 1.2535  loss: 1.4985  loss_cls: 0.9948  loss_bbox: 0.5037
2025/05/12 16:04:58 - mmengine - INFO - Epoch(train)  [1][150/563]  base_lr: 3.9424e-02 lr: 3.9424e-02  eta: 1:24:18  time: 0.2715  data_time: 0.0039  memory: 5299  grad_norm: 1.4260  loss: 1.3784  loss_cls: 0.8736  loss_bbox: 0.5048
2025/05/12 16:05:12 - mmengine - INFO - Epoch(train)  [1][200/563]  base_lr: 4.7284e-02 lr: 4.7284e-02  eta: 1:21:57  time: 0.2721  data_time: 0.0038  memory: 5355  grad_norm: 1.0999  loss: 1.2544  loss_cls: 0.7703  loss_bbox: 0.4841
2025/05/12 16:05:25 - mmengine - INFO - Epoch(train)  [1][250/563]  base_lr: 5.5144e-02 lr: 5.5144e-02  eta: 1:20:02  time: 0.2644  data_time: 0.0040  memory: 5459  grad_norm: 1.6249  loss: 1.1185  loss_cls: 0.7050  loss_bbox: 0.4135
2025/05/12 16:05:38 - mmengine - INFO - Epoch(train)  [1][300/563]  base_lr: 6.3004e-02 lr: 6.3004e-02  eta: 1:18:39  time: 0.2637  data_time: 0.0039  memory: 5201  grad_norm: 1.0950  loss: 1.0179  loss_cls: 0.6419  loss_bbox: 0.3760
2025/05/12 16:05:51 - mmengine - INFO - Epoch(train)  [1][350/563]  base_lr: 7.0865e-02 lr: 7.0865e-02  eta: 1:17:47  time: 0.2684  data_time: 0.0039  memory: 5345  grad_norm: 1.0732  loss: 0.9871  loss_cls: 0.6440  loss_bbox: 0.3431
2025/05/12 16:06:06 - mmengine - INFO - Epoch(train)  [1][400/563]  base_lr: 7.8725e-02 lr: 7.8725e-02  eta: 1:17:34  time: 0.2830  data_time: 0.0039  memory: 5459  grad_norm: 0.9055  loss: 0.8773  loss_cls: 0.5675  loss_bbox: 0.3098
2025/05/12 16:06:19 - mmengine - INFO - Epoch(train)  [1][450/563]  base_lr: 8.6585e-02 lr: 8.6585e-02  eta: 1:16:54  time: 0.2678  data_time: 0.0039  memory: 5438  grad_norm: 0.8701  loss: 0.8266  loss_cls: 0.5508  loss_bbox: 0.2758
2025/05/12 16:06:32 - mmengine - INFO - Epoch(train)  [1][500/563]  base_lr: 9.4445e-02 lr: 9.4445e-02  eta: 1:16:09  time: 0.2619  data_time: 0.0039  memory: 5319  grad_norm: 1.3166  loss: 1.2263  loss_cls: 0.8757  loss_bbox: 0.3506
2025/05/12 16:06:46 - mmengine - INFO - Epoch(train)  [1][550/563]  base_lr: 1.0231e-01 lr: 1.0231e-01  eta: 1:15:39  time: 0.2679  data_time: 0.0040  memory: 5278  grad_norm: 1.0825  loss: 1.1100  loss_cls: 0.7740  loss_bbox: 0.3361
2025/05/12 16:06:49 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:07:03 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:07:04 - mmengine - INFO - bbox_mAP_copypaste: 0.022 0.074 0.004 -1.000 0.006 0.024
2025/05/12 16:07:05 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0220  coco/bbox_mAP_50: 0.0740  coco/bbox_mAP_75: 0.0040  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0060  coco/bbox_mAP_l: 0.0240  data_time: 0.1659  time: 0.2856
2025/05/12 16:07:05 - mmengine - INFO - The best checkpoint with 0.0220 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/12 16:07:20 - mmengine - INFO - Epoch(train)  [2][ 50/563]  base_lr: 1.1221e-01 lr: 1.1221e-01  eta: 1:15:29  time: 0.2849  data_time: 0.0060  memory: 5469  grad_norm: 0.7012  loss: 0.9394  loss_cls: 0.6205  loss_bbox: 0.3189
2025/05/12 16:07:33 - mmengine - INFO - Epoch(train)  [2][100/563]  base_lr: 1.2007e-01 lr: 1.2007e-01  eta: 1:15:01  time: 0.2664  data_time: 0.0054  memory: 5314  grad_norm: 0.6897  loss: 0.8065  loss_cls: 0.5536  loss_bbox: 0.2529
2025/05/12 16:07:46 - mmengine - INFO - Epoch(train)  [2][150/563]  base_lr: 1.2793e-01 lr: 1.2793e-01  eta: 1:14:35  time: 0.2671  data_time: 0.0055  memory: 5454  grad_norm: 0.7705  loss: 0.8548  loss_cls: 0.5970  loss_bbox: 0.2578
2025/05/12 16:08:00 - mmengine - INFO - Epoch(train)  [2][200/563]  base_lr: 1.3579e-01 lr: 1.3579e-01  eta: 1:14:10  time: 0.2655  data_time: 0.0054  memory: 5469  grad_norm: 0.7161  loss: 0.9351  loss_cls: 0.6555  loss_bbox: 0.2796
2025/05/12 16:08:14 - mmengine - INFO - Epoch(train)  [2][250/563]  base_lr: 1.4365e-01 lr: 1.4365e-01  eta: 1:14:02  time: 0.2825  data_time: 0.0053  memory: 5335  grad_norm: 0.6528  loss: 0.8534  loss_cls: 0.5880  loss_bbox: 0.2654
2025/05/12 16:08:27 - mmengine - INFO - Epoch(train)  [2][300/563]  base_lr: 1.5151e-01 lr: 1.5151e-01  eta: 1:13:39  time: 0.2657  data_time: 0.0054  memory: 5283  grad_norm: 0.6639  loss: 0.7956  loss_cls: 0.5259  loss_bbox: 0.2697
2025/05/12 16:08:40 - mmengine - INFO - Epoch(train)  [2][350/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 1:13:19  time: 0.2693  data_time: 0.0053  memory: 5345  grad_norm: 0.7170  loss: 0.8670  loss_cls: 0.5985  loss_bbox: 0.2685
2025/05/12 16:08:54 - mmengine - INFO - Epoch(train)  [2][400/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:12:57  time: 0.2647  data_time: 0.0043  memory: 5454  grad_norm: 0.5876  loss: 0.7514  loss_cls: 0.5129  loss_bbox: 0.2385
2025/05/12 16:09:04 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:09:07 - mmengine - INFO - Epoch(train)  [2][450/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:12:42  time: 0.2742  data_time: 0.0043  memory: 5376  grad_norm: 0.6037  loss: 1.0254  loss_cls: 0.7654  loss_bbox: 0.2601
2025/05/12 16:09:21 - mmengine - INFO - Epoch(train)  [2][500/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:12:25  time: 0.2699  data_time: 0.0041  memory: 5314  grad_norm: 0.6153  loss: 0.9045  loss_cls: 0.6559  loss_bbox: 0.2486
2025/05/12 16:09:34 - mmengine - INFO - Epoch(train)  [2][550/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:12:06  time: 0.2669  data_time: 0.0043  memory: 5283  grad_norm: 0.6073  loss: 0.8172  loss_cls: 0.5765  loss_bbox: 0.2407
2025/05/12 16:09:38 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:09:43 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:09:44 - mmengine - INFO - bbox_mAP_copypaste: 0.074 0.145 0.064 -1.000 0.074 0.075
2025/05/12 16:09:44 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0740  coco/bbox_mAP_50: 0.1450  coco/bbox_mAP_75: 0.0640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0740  coco/bbox_mAP_l: 0.0750  data_time: 0.0016  time: 0.1044
2025/05/12 16:09:44 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/12 16:09:45 - mmengine - INFO - The best checkpoint with 0.0740 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/12 16:10:00 - mmengine - INFO - Epoch(train)  [3][ 50/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:58  time: 0.2910  data_time: 0.0049  memory: 5371  grad_norm: 0.5769  loss: 0.7239  loss_cls: 0.4886  loss_bbox: 0.2353
2025/05/12 16:10:13 - mmengine - INFO - Epoch(train)  [3][100/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:43  time: 0.2729  data_time: 0.0043  memory: 5247  grad_norm: 0.6573  loss: 0.8393  loss_cls: 0.5814  loss_bbox: 0.2579
2025/05/12 16:10:27 - mmengine - INFO - Epoch(train)  [3][150/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:29  time: 0.2737  data_time: 0.0043  memory: 5366  grad_norm: 0.5891  loss: 0.8013  loss_cls: 0.5567  loss_bbox: 0.2446
2025/05/12 16:10:40 - mmengine - INFO - Epoch(train)  [3][200/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:07  time: 0.2605  data_time: 0.0043  memory: 5345  grad_norm: 0.5822  loss: 0.7583  loss_cls: 0.5047  loss_bbox: 0.2535
2025/05/12 16:10:53 - mmengine - INFO - Epoch(train)  [3][250/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:10:48  time: 0.2647  data_time: 0.0042  memory: 5376  grad_norm: 0.5987  loss: 0.7404  loss_cls: 0.5117  loss_bbox: 0.2287
2025/05/12 16:11:06 - mmengine - INFO - Epoch(train)  [3][300/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:10:30  time: 0.2665  data_time: 0.0043  memory: 5423  grad_norm: 0.5709  loss: 0.7098  loss_cls: 0.4749  loss_bbox: 0.2349
2025/05/12 16:11:21 - mmengine - INFO - Epoch(train)  [3][350/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:10:22  time: 0.2834  data_time: 0.0042  memory: 5335  grad_norm: 0.6549  loss: 0.8076  loss_cls: 0.5617  loss_bbox: 0.2458
2025/05/12 16:11:34 - mmengine - INFO - Epoch(train)  [3][400/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:10:00  time: 0.2584  data_time: 0.0043  memory: 5459  grad_norm: 0.6196  loss: 0.7172  loss_cls: 0.4833  loss_bbox: 0.2339
2025/05/12 16:11:47 - mmengine - INFO - Epoch(train)  [3][450/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:09:42  time: 0.2644  data_time: 0.0042  memory: 5252  grad_norm: 0.5794  loss: 0.6987  loss_cls: 0.4640  loss_bbox: 0.2347
2025/05/12 16:12:00 - mmengine - INFO - Epoch(train)  [3][500/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:24  time: 0.2644  data_time: 0.0043  memory: 5386  grad_norm: 0.5929  loss: 0.7157  loss_cls: 0.4847  loss_bbox: 0.2309
2025/05/12 16:12:13 - mmengine - INFO - Epoch(train)  [3][550/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:06  time: 0.2628  data_time: 0.0043  memory: 5371  grad_norm: 0.5544  loss: 0.6754  loss_cls: 0.4705  loss_bbox: 0.2049
2025/05/12 16:12:17 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:12:22 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:12:23 - mmengine - INFO - bbox_mAP_copypaste: 0.094 0.198 0.067 -1.000 0.078 0.098
2025/05/12 16:12:23 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.0940  coco/bbox_mAP_50: 0.1980  coco/bbox_mAP_75: 0.0670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0780  coco/bbox_mAP_l: 0.0980  data_time: 0.0015  time: 0.0979
2025/05/12 16:12:23 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/12 16:12:24 - mmengine - INFO - The best checkpoint with 0.0940 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/12 16:12:38 - mmengine - INFO - Epoch(train)  [4][ 50/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:08:57  time: 0.2880  data_time: 0.0050  memory: 5268  grad_norm: 0.6115  loss: 0.6998  loss_cls: 0.4664  loss_bbox: 0.2334
2025/05/12 16:12:52 - mmengine - INFO - Epoch(train)  [4][100/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:08:41  time: 0.2661  data_time: 0.0042  memory: 5392  grad_norm: 0.5948  loss: 0.6838  loss_cls: 0.4433  loss_bbox: 0.2404
2025/05/12 16:13:05 - mmengine - INFO - Epoch(train)  [4][150/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:08:25  time: 0.2666  data_time: 0.0043  memory: 5273  grad_norm: 0.5597  loss: 0.6553  loss_cls: 0.4489  loss_bbox: 0.2064
2025/05/12 16:13:19 - mmengine - INFO - Epoch(train)  [4][200/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:08:11  time: 0.2720  data_time: 0.0042  memory: 5296  grad_norm: 0.5917  loss: 0.6673  loss_cls: 0.4378  loss_bbox: 0.2294
2025/05/12 16:13:32 - mmengine - INFO - Epoch(train)  [4][250/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:07:55  time: 0.2683  data_time: 0.0042  memory: 5345  grad_norm: 0.6128  loss: 0.6581  loss_cls: 0.4320  loss_bbox: 0.2261
2025/05/12 16:13:46 - mmengine - INFO - Epoch(train)  [4][300/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:07:40  time: 0.2677  data_time: 0.0043  memory: 5459  grad_norm: 0.6047  loss: 0.6668  loss_cls: 0.4482  loss_bbox: 0.2186
2025/05/12 16:13:48 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:13:59 - mmengine - INFO - Epoch(train)  [4][350/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:07:23  time: 0.2639  data_time: 0.0042  memory: 5252  grad_norm: 0.6520  loss: 0.6750  loss_cls: 0.4609  loss_bbox: 0.2141
2025/05/12 16:14:12 - mmengine - INFO - Epoch(train)  [4][400/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:07:08  time: 0.2676  data_time: 0.0042  memory: 5464  grad_norm: 0.6241  loss: 0.6928  loss_cls: 0.4588  loss_bbox: 0.2339
2025/05/12 16:14:26 - mmengine - INFO - Epoch(train)  [4][450/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:06:55  time: 0.2760  data_time: 0.0042  memory: 5387  grad_norm: 0.6463  loss: 0.6509  loss_cls: 0.4344  loss_bbox: 0.2165
2025/05/12 16:14:39 - mmengine - INFO - Epoch(train)  [4][500/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:06:40  time: 0.2669  data_time: 0.0042  memory: 5454  grad_norm: 0.5693  loss: 0.6429  loss_cls: 0.4325  loss_bbox: 0.2103
2025/05/12 16:14:52 - mmengine - INFO - Epoch(train)  [4][550/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:06:22  time: 0.2600  data_time: 0.0042  memory: 5211  grad_norm: 0.5210  loss: 0.5854  loss_cls: 0.3939  loss_bbox: 0.1914
2025/05/12 16:14:56 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:15:00 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:15:01 - mmengine - INFO - bbox_mAP_copypaste: 0.096 0.266 0.029 -1.000 0.095 0.097
2025/05/12 16:15:01 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.0960  coco/bbox_mAP_50: 0.2660  coco/bbox_mAP_75: 0.0290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0950  coco/bbox_mAP_l: 0.0970  data_time: 0.0015  time: 0.0822
2025/05/12 16:15:01 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/12 16:15:02 - mmengine - INFO - The best checkpoint with 0.0960 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/12 16:15:17 - mmengine - INFO - Epoch(train)  [5][ 50/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:06:11  time: 0.2891  data_time: 0.0049  memory: 5381  grad_norm: 0.6873  loss: 0.6643  loss_cls: 0.4319  loss_bbox: 0.2324
2025/05/12 16:15:31 - mmengine - INFO - Epoch(train)  [5][100/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:06:00  time: 0.2806  data_time: 0.0043  memory: 5412  grad_norm: 0.5571  loss: 0.6280  loss_cls: 0.4227  loss_bbox: 0.2053
2025/05/12 16:15:44 - mmengine - INFO - Epoch(train)  [5][150/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:05:42  time: 0.2606  data_time: 0.0043  memory: 5299  grad_norm: 0.6952  loss: 0.6867  loss_cls: 0.4446  loss_bbox: 0.2422
2025/05/12 16:15:57 - mmengine - INFO - Epoch(train)  [5][200/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:05:27  time: 0.2651  data_time: 0.0043  memory: 5433  grad_norm: 0.6418  loss: 0.6614  loss_cls: 0.4384  loss_bbox: 0.2230
2025/05/12 16:16:10 - mmengine - INFO - Epoch(train)  [5][250/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:05:11  time: 0.2632  data_time: 0.0041  memory: 5340  grad_norm: 0.5799  loss: 0.6280  loss_cls: 0.4202  loss_bbox: 0.2079
2025/05/12 16:16:23 - mmengine - INFO - Epoch(train)  [5][300/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:04:55  time: 0.2641  data_time: 0.0042  memory: 5417  grad_norm: 0.5443  loss: 0.5911  loss_cls: 0.3929  loss_bbox: 0.1982
2025/05/12 16:16:37 - mmengine - INFO - Epoch(train)  [5][350/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:04:42  time: 0.2737  data_time: 0.0042  memory: 5345  grad_norm: 0.6089  loss: 0.5898  loss_cls: 0.4031  loss_bbox: 0.1867
2025/05/12 16:16:50 - mmengine - INFO - Epoch(train)  [5][400/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:04:26  time: 0.2623  data_time: 0.0043  memory: 5268  grad_norm: 0.5937  loss: 0.6064  loss_cls: 0.4088  loss_bbox: 0.1977
2025/05/12 16:17:03 - mmengine - INFO - Epoch(train)  [5][450/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:04:10  time: 0.2617  data_time: 0.0043  memory: 5412  grad_norm: 0.5845  loss: 0.6045  loss_cls: 0.3982  loss_bbox: 0.2063
2025/05/12 16:17:16 - mmengine - INFO - Epoch(train)  [5][500/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:03:54  time: 0.2621  data_time: 0.0042  memory: 5350  grad_norm: 0.6534  loss: 0.6200  loss_cls: 0.4097  loss_bbox: 0.2103
2025/05/12 16:17:30 - mmengine - INFO - Epoch(train)  [5][550/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:03:40  time: 0.2699  data_time: 0.0041  memory: 5273  grad_norm: 0.5899  loss: 0.6283  loss_cls: 0.4093  loss_bbox: 0.2190
2025/05/12 16:17:33 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:17:38 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:17:39 - mmengine - INFO - bbox_mAP_copypaste: 0.131 0.257 0.121 -1.000 0.121 0.131
2025/05/12 16:17:39 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.1310  coco/bbox_mAP_50: 0.2570  coco/bbox_mAP_75: 0.1210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1210  coco/bbox_mAP_l: 0.1310  data_time: 0.0015  time: 0.0900
2025/05/12 16:17:39 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/12 16:17:40 - mmengine - INFO - The best checkpoint with 0.1310 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/12 16:17:54 - mmengine - INFO - Epoch(train)  [6][ 50/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:03:26  time: 0.2863  data_time: 0.0049  memory: 5459  grad_norm: 0.6148  loss: 0.5845  loss_cls: 0.3793  loss_bbox: 0.2052
2025/05/12 16:18:07 - mmengine - INFO - Epoch(train)  [6][100/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:03:10  time: 0.2642  data_time: 0.0042  memory: 5361  grad_norm: 0.6508  loss: 0.6021  loss_cls: 0.3937  loss_bbox: 0.2085
2025/05/12 16:18:20 - mmengine - INFO - Epoch(train)  [6][150/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:02:55  time: 0.2633  data_time: 0.0041  memory: 5319  grad_norm: 0.5620  loss: 0.5707  loss_cls: 0.3731  loss_bbox: 0.1976
2025/05/12 16:18:30 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:18:34 - mmengine - INFO - Epoch(train)  [6][200/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:02:41  time: 0.2707  data_time: 0.0043  memory: 5387  grad_norm: 0.6316  loss: 0.6004  loss_cls: 0.3977  loss_bbox: 0.2027
2025/05/12 16:18:48 - mmengine - INFO - Epoch(train)  [6][250/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:02:28  time: 0.2725  data_time: 0.0043  memory: 5283  grad_norm: 0.5682  loss: 0.5934  loss_cls: 0.3893  loss_bbox: 0.2042
2025/05/12 16:19:01 - mmengine - INFO - Epoch(train)  [6][300/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:02:13  time: 0.2629  data_time: 0.0041  memory: 5273  grad_norm: 0.6169  loss: 0.5915  loss_cls: 0.3908  loss_bbox: 0.2006
2025/05/12 16:19:14 - mmengine - INFO - Epoch(train)  [6][350/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:01:58  time: 0.2665  data_time: 0.0043  memory: 5247  grad_norm: 0.7383  loss: 0.6454  loss_cls: 0.4325  loss_bbox: 0.2129
2025/05/12 16:19:27 - mmengine - INFO - Epoch(train)  [6][400/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:01:42  time: 0.2581  data_time: 0.0042  memory: 5412  grad_norm: 0.6178  loss: 0.6313  loss_cls: 0.4042  loss_bbox: 0.2272
2025/05/12 16:19:41 - mmengine - INFO - Epoch(train)  [6][450/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:01:29  time: 0.2754  data_time: 0.0042  memory: 5407  grad_norm: 0.7530  loss: 0.5806  loss_cls: 0.3770  loss_bbox: 0.2036
2025/05/12 16:19:54 - mmengine - INFO - Epoch(train)  [6][500/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:01:14  time: 0.2613  data_time: 0.0043  memory: 5304  grad_norm: 0.6857  loss: 0.6440  loss_cls: 0.4221  loss_bbox: 0.2218
2025/05/12 16:20:07 - mmengine - INFO - Epoch(train)  [6][550/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:00:58  time: 0.2615  data_time: 0.0042  memory: 5402  grad_norm: 0.6350  loss: 0.6112  loss_cls: 0.4095  loss_bbox: 0.2017
2025/05/12 16:20:10 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:20:14 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:20:16 - mmengine - INFO - bbox_mAP_copypaste: 0.204 0.371 0.219 -1.000 0.138 0.216
2025/05/12 16:20:16 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.2040  coco/bbox_mAP_50: 0.3710  coco/bbox_mAP_75: 0.2190  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1380  coco/bbox_mAP_l: 0.2160  data_time: 0.0016  time: 0.0834
2025/05/12 16:20:16 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/12 16:20:17 - mmengine - INFO - The best checkpoint with 0.2040 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/12 16:20:31 - mmengine - INFO - Epoch(train)  [7][ 50/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:00:46  time: 0.2954  data_time: 0.0049  memory: 5387  grad_norm: 0.6076  loss: 0.5751  loss_cls: 0.3669  loss_bbox: 0.2082
2025/05/12 16:20:45 - mmengine - INFO - Epoch(train)  [7][100/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:00:33  time: 0.2754  data_time: 0.0042  memory: 5309  grad_norm: 0.6562  loss: 0.6044  loss_cls: 0.3815  loss_bbox: 0.2229
2025/05/12 16:20:58 - mmengine - INFO - Epoch(train)  [7][150/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:00:19  time: 0.2655  data_time: 0.0042  memory: 5319  grad_norm: 0.5746  loss: 0.5460  loss_cls: 0.3592  loss_bbox: 0.1868
2025/05/12 16:21:12 - mmengine - INFO - Epoch(train)  [7][200/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 1:00:03  time: 0.2605  data_time: 0.0043  memory: 5278  grad_norm: 0.6425  loss: 0.5903  loss_cls: 0.3872  loss_bbox: 0.2032
2025/05/12 16:21:25 - mmengine - INFO - Epoch(train)  [7][250/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 0:59:49  time: 0.2656  data_time: 0.0042  memory: 5278  grad_norm: 0.6081  loss: 0.5794  loss_cls: 0.3836  loss_bbox: 0.1958
2025/05/12 16:21:38 - mmengine - INFO - Epoch(train)  [7][300/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:59:34  time: 0.2633  data_time: 0.0042  memory: 5296  grad_norm: 0.6362  loss: 0.6292  loss_cls: 0.4048  loss_bbox: 0.2244
2025/05/12 16:21:52 - mmengine - INFO - Epoch(train)  [7][350/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:59:21  time: 0.2730  data_time: 0.0043  memory: 5397  grad_norm: 0.6629  loss: 0.6274  loss_cls: 0.4198  loss_bbox: 0.2076
2025/05/12 16:22:05 - mmengine - INFO - Epoch(train)  [7][400/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:59:06  time: 0.2619  data_time: 0.0042  memory: 5309  grad_norm: 0.5735  loss: 0.5418  loss_cls: 0.3510  loss_bbox: 0.1908
2025/05/12 16:22:18 - mmengine - INFO - Epoch(train)  [7][450/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:58:51  time: 0.2658  data_time: 0.0042  memory: 5381  grad_norm: 0.5775  loss: 0.5895  loss_cls: 0.3858  loss_bbox: 0.2037
2025/05/12 16:22:31 - mmengine - INFO - Epoch(train)  [7][500/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:58:37  time: 0.2658  data_time: 0.0043  memory: 5448  grad_norm: 0.5869  loss: 0.5754  loss_cls: 0.3868  loss_bbox: 0.1886
2025/05/12 16:22:45 - mmengine - INFO - Epoch(train)  [7][550/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:58:24  time: 0.2715  data_time: 0.0042  memory: 5397  grad_norm: 0.5937  loss: 0.5718  loss_cls: 0.3826  loss_bbox: 0.1892
2025/05/12 16:22:48 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:22:53 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:22:54 - mmengine - INFO - bbox_mAP_copypaste: 0.212 0.379 0.227 -1.000 0.186 0.216
2025/05/12 16:22:54 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.2120  coco/bbox_mAP_50: 0.3790  coco/bbox_mAP_75: 0.2270  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1860  coco/bbox_mAP_l: 0.2160  data_time: 0.0015  time: 0.0887
2025/05/12 16:22:54 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/12 16:22:55 - mmengine - INFO - The best checkpoint with 0.2120 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/12 16:23:10 - mmengine - INFO - Epoch(train)  [8][ 50/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:58:10  time: 0.2878  data_time: 0.0049  memory: 5350  grad_norm: 0.5747  loss: 0.5581  loss_cls: 0.3611  loss_bbox: 0.1970
2025/05/12 16:23:12 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:23:23 - mmengine - INFO - Epoch(train)  [8][100/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:57:55  time: 0.2664  data_time: 0.0043  memory: 5454  grad_norm: 0.5986  loss: 0.5567  loss_cls: 0.3736  loss_bbox: 0.1832
2025/05/12 16:23:36 - mmengine - INFO - Epoch(train)  [8][150/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:57:40  time: 0.2608  data_time: 0.0043  memory: 5402  grad_norm: 0.6014  loss: 0.5678  loss_cls: 0.3657  loss_bbox: 0.2020
2025/05/12 16:23:50 - mmengine - INFO - Epoch(train)  [8][200/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:57:27  time: 0.2738  data_time: 0.0042  memory: 5392  grad_norm: 0.5457  loss: 0.5597  loss_cls: 0.3717  loss_bbox: 0.1880
2025/05/12 16:24:03 - mmengine - INFO - Epoch(train)  [8][250/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:57:13  time: 0.2677  data_time: 0.0042  memory: 5325  grad_norm: 0.6088  loss: 0.5474  loss_cls: 0.3559  loss_bbox: 0.1916
2025/05/12 16:24:16 - mmengine - INFO - Epoch(train)  [8][300/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:56:59  time: 0.2670  data_time: 0.0042  memory: 5350  grad_norm: 0.5970  loss: 0.5616  loss_cls: 0.3515  loss_bbox: 0.2102
2025/05/12 16:24:29 - mmengine - INFO - Epoch(train)  [8][350/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:56:44  time: 0.2604  data_time: 0.0042  memory: 5428  grad_norm: 0.5977  loss: 0.5343  loss_cls: 0.3325  loss_bbox: 0.2019
2025/05/12 16:24:43 - mmengine - INFO - Epoch(train)  [8][400/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:56:30  time: 0.2657  data_time: 0.0042  memory: 5438  grad_norm: 0.7010  loss: 0.5882  loss_cls: 0.3939  loss_bbox: 0.1943
2025/05/12 16:24:56 - mmengine - INFO - Epoch(train)  [8][450/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:56:17  time: 0.2711  data_time: 0.0043  memory: 5376  grad_norm: 0.6268  loss: 0.6001  loss_cls: 0.4056  loss_bbox: 0.1946
2025/05/12 16:25:10 - mmengine - INFO - Epoch(train)  [8][500/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:56:03  time: 0.2694  data_time: 0.0043  memory: 5448  grad_norm: 0.6150  loss: 0.5572  loss_cls: 0.3683  loss_bbox: 0.1889
2025/05/12 16:25:23 - mmengine - INFO - Epoch(train)  [8][550/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:55:49  time: 0.2626  data_time: 0.0043  memory: 5299  grad_norm: 0.5464  loss: 0.5600  loss_cls: 0.3668  loss_bbox: 0.1932
2025/05/12 16:25:26 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:25:30 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:25:32 - mmengine - INFO - bbox_mAP_copypaste: 0.263 0.495 0.243 -1.000 0.215 0.274
2025/05/12 16:25:32 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.2630  coco/bbox_mAP_50: 0.4950  coco/bbox_mAP_75: 0.2430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2150  coco/bbox_mAP_l: 0.2740  data_time: 0.0015  time: 0.0804
2025/05/12 16:25:32 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/12 16:25:33 - mmengine - INFO - The best checkpoint with 0.2630 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/12 16:25:46 - mmengine - INFO - Epoch(train)  [9][ 50/563]  base_lr: 1.5978e-01 lr: 1.5978e-01  eta: 0:55:31  time: 0.2660  data_time: 0.0048  memory: 5361  grad_norm: 0.5365  loss: 0.5178  loss_cls: 0.3374  loss_bbox: 0.1804
2025/05/12 16:26:00 - mmengine - INFO - Epoch(train)  [9][100/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:55:18  time: 0.2761  data_time: 0.0043  memory: 5356  grad_norm: 0.5641  loss: 0.5521  loss_cls: 0.3626  loss_bbox: 0.1894
2025/05/12 16:26:13 - mmengine - INFO - Epoch(train)  [9][150/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:55:04  time: 0.2631  data_time: 0.0042  memory: 5330  grad_norm: 0.5815  loss: 0.5414  loss_cls: 0.3428  loss_bbox: 0.1986
2025/05/12 16:26:26 - mmengine - INFO - Epoch(train)  [9][200/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:54:49  time: 0.2617  data_time: 0.0043  memory: 5288  grad_norm: 0.5837  loss: 0.5357  loss_cls: 0.3413  loss_bbox: 0.1944
2025/05/12 16:26:39 - mmengine - INFO - Epoch(train)  [9][250/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:54:36  time: 0.2697  data_time: 0.0043  memory: 5469  grad_norm: 0.6101  loss: 0.5488  loss_cls: 0.3568  loss_bbox: 0.1920
2025/05/12 16:26:53 - mmengine - INFO - Epoch(train)  [9][300/563]  base_lr: 1.5975e-01 lr: 1.5975e-01  eta: 0:54:23  time: 0.2706  data_time: 0.0044  memory: 5479  grad_norm: 0.5363  loss: 0.5196  loss_cls: 0.3449  loss_bbox: 0.1746
2025/05/12 16:27:07 - mmengine - INFO - Epoch(train)  [9][350/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:54:10  time: 0.2762  data_time: 0.0042  memory: 5402  grad_norm: 0.6333  loss: 0.5176  loss_cls: 0.3385  loss_bbox: 0.1791
2025/05/12 16:27:20 - mmengine - INFO - Epoch(train)  [9][400/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:53:56  time: 0.2652  data_time: 0.0042  memory: 5366  grad_norm: 0.5725  loss: 0.5638  loss_cls: 0.3653  loss_bbox: 0.1984
2025/05/12 16:27:33 - mmengine - INFO - Epoch(train)  [9][450/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:53:42  time: 0.2658  data_time: 0.0042  memory: 5304  grad_norm: 0.5398  loss: 0.5508  loss_cls: 0.3640  loss_bbox: 0.1868
2025/05/12 16:27:46 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:27:47 - mmengine - INFO - Epoch(train)  [9][500/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:53:28  time: 0.2667  data_time: 0.0043  memory: 5402  grad_norm: 0.5513  loss: 0.5433  loss_cls: 0.3745  loss_bbox: 0.1688
2025/05/12 16:28:00 - mmengine - INFO - Epoch(train)  [9][550/563]  base_lr: 1.5972e-01 lr: 1.5972e-01  eta: 0:53:15  time: 0.2738  data_time: 0.0043  memory: 5296  grad_norm: 0.6097  loss: 0.5457  loss_cls: 0.3569  loss_bbox: 0.1888
2025/05/12 16:28:04 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:28:08 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:28:10 - mmengine - INFO - bbox_mAP_copypaste: 0.327 0.575 0.343 -1.000 0.247 0.343
2025/05/12 16:28:10 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.3270  coco/bbox_mAP_50: 0.5750  coco/bbox_mAP_75: 0.3430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2470  coco/bbox_mAP_l: 0.3430  data_time: 0.0016  time: 0.0839
2025/05/12 16:28:10 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/12 16:28:11 - mmengine - INFO - The best checkpoint with 0.3270 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/12 16:28:25 - mmengine - INFO - Epoch(train) [10][ 50/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:53:01  time: 0.2907  data_time: 0.0049  memory: 5476  grad_norm: 0.5768  loss: 0.5286  loss_cls: 0.3379  loss_bbox: 0.1907
2025/05/12 16:28:38 - mmengine - INFO - Epoch(train) [10][100/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:52:46  time: 0.2627  data_time: 0.0042  memory: 5278  grad_norm: 0.6076  loss: 0.5309  loss_cls: 0.3487  loss_bbox: 0.1822
2025/05/12 16:28:52 - mmengine - INFO - Epoch(train) [10][150/563]  base_lr: 1.5970e-01 lr: 1.5970e-01  eta: 0:52:32  time: 0.2654  data_time: 0.0042  memory: 5480  grad_norm: 0.5051  loss: 0.5264  loss_cls: 0.3516  loss_bbox: 0.1747
2025/05/12 16:29:05 - mmengine - INFO - Epoch(train) [10][200/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:52:19  time: 0.2691  data_time: 0.0043  memory: 5257  grad_norm: 0.6719  loss: 0.5528  loss_cls: 0.3770  loss_bbox: 0.1758
2025/05/12 16:29:18 - mmengine - INFO - Epoch(train) [10][250/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:52:05  time: 0.2685  data_time: 0.0042  memory: 5381  grad_norm: 0.7149  loss: 0.5738  loss_cls: 0.3657  loss_bbox: 0.2081
2025/05/12 16:29:32 - mmengine - INFO - Epoch(train) [10][300/563]  base_lr: 1.5968e-01 lr: 1.5968e-01  eta: 0:51:51  time: 0.2621  data_time: 0.0042  memory: 5381  grad_norm: 0.5832  loss: 0.5432  loss_cls: 0.3570  loss_bbox: 0.1862
2025/05/12 16:29:45 - mmengine - INFO - Epoch(train) [10][350/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:51:37  time: 0.2656  data_time: 0.0042  memory: 5227  grad_norm: 0.5758  loss: 0.5387  loss_cls: 0.3430  loss_bbox: 0.1957
2025/05/12 16:29:58 - mmengine - INFO - Epoch(train) [10][400/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:51:22  time: 0.2635  data_time: 0.0042  memory: 5376  grad_norm: 0.5665  loss: 0.5073  loss_cls: 0.3237  loss_bbox: 0.1837
2025/05/12 16:30:12 - mmengine - INFO - Epoch(train) [10][450/563]  base_lr: 1.5966e-01 lr: 1.5966e-01  eta: 0:51:10  time: 0.2786  data_time: 0.0042  memory: 5355  grad_norm: 0.7288  loss: 0.5923  loss_cls: 0.3880  loss_bbox: 0.2043
2025/05/12 16:30:25 - mmengine - INFO - Epoch(train) [10][500/563]  base_lr: 1.5965e-01 lr: 1.5965e-01  eta: 0:50:56  time: 0.2627  data_time: 0.0043  memory: 5288  grad_norm: 0.5709  loss: 0.5416  loss_cls: 0.3590  loss_bbox: 0.1826
2025/05/12 16:30:39 - mmengine - INFO - Epoch(train) [10][550/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:50:42  time: 0.2693  data_time: 0.0043  memory: 5397  grad_norm: 0.5020  loss: 0.4957  loss_cls: 0.3252  loss_bbox: 0.1706
2025/05/12 16:30:42 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:30:46 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:30:47 - mmengine - INFO - bbox_mAP_copypaste: 0.318 0.538 0.353 -1.000 0.254 0.336
2025/05/12 16:30:47 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.3180  coco/bbox_mAP_50: 0.5380  coco/bbox_mAP_75: 0.3530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2540  coco/bbox_mAP_l: 0.3360  data_time: 0.0015  time: 0.0782
2025/05/12 16:31:01 - mmengine - INFO - Epoch(train) [11][ 50/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:50:24  time: 0.2645  data_time: 0.0050  memory: 5423  grad_norm: 0.5570  loss: 0.5033  loss_cls: 0.3262  loss_bbox: 0.1771
2025/05/12 16:31:15 - mmengine - INFO - Epoch(train) [11][100/563]  base_lr: 1.5963e-01 lr: 1.5963e-01  eta: 0:50:12  time: 0.2784  data_time: 0.0043  memory: 5299  grad_norm: 0.6534  loss: 0.5458  loss_cls: 0.3565  loss_bbox: 0.1894
2025/05/12 16:31:28 - mmengine - INFO - Epoch(train) [11][150/563]  base_lr: 1.5962e-01 lr: 1.5962e-01  eta: 0:49:58  time: 0.2655  data_time: 0.0042  memory: 5381  grad_norm: 0.6460  loss: 0.5810  loss_cls: 0.3724  loss_bbox: 0.2086
2025/05/12 16:31:41 - mmengine - INFO - Epoch(train) [11][200/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:49:43  time: 0.2611  data_time: 0.0043  memory: 5402  grad_norm: 0.6683  loss: 0.6079  loss_cls: 0.4009  loss_bbox: 0.2070
2025/05/12 16:31:54 - mmengine - INFO - Epoch(train) [11][250/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:49:29  time: 0.2656  data_time: 0.0042  memory: 5314  grad_norm: 0.5803  loss: 0.5600  loss_cls: 0.3734  loss_bbox: 0.1866
2025/05/12 16:32:07 - mmengine - INFO - Epoch(train) [11][300/563]  base_lr: 1.5960e-01 lr: 1.5960e-01  eta: 0:49:15  time: 0.2592  data_time: 0.0042  memory: 5232  grad_norm: 0.6273  loss: 0.5730  loss_cls: 0.3811  loss_bbox: 0.1919
2025/05/12 16:32:21 - mmengine - INFO - Epoch(train) [11][350/563]  base_lr: 1.5959e-01 lr: 1.5959e-01  eta: 0:49:02  time: 0.2768  data_time: 0.0044  memory: 5345  grad_norm: 0.5819  loss: 0.5147  loss_cls: 0.3286  loss_bbox: 0.1861
2025/05/12 16:32:26 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:32:34 - mmengine - INFO - Epoch(train) [11][400/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:48:49  time: 0.2693  data_time: 0.0042  memory: 5402  grad_norm: 0.5600  loss: 0.5255  loss_cls: 0.3393  loss_bbox: 0.1861
2025/05/12 16:32:47 - mmengine - INFO - Epoch(train) [11][450/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:48:34  time: 0.2612  data_time: 0.0043  memory: 5314  grad_norm: 0.5851  loss: 0.5260  loss_cls: 0.3409  loss_bbox: 0.1852
2025/05/12 16:33:01 - mmengine - INFO - Epoch(train) [11][500/563]  base_lr: 1.5957e-01 lr: 1.5957e-01  eta: 0:48:20  time: 0.2615  data_time: 0.0042  memory: 5350  grad_norm: 0.5457  loss: 0.5038  loss_cls: 0.3270  loss_bbox: 0.1768
2025/05/12 16:33:14 - mmengine - INFO - Epoch(train) [11][550/563]  base_lr: 1.5956e-01 lr: 1.5956e-01  eta: 0:48:07  time: 0.2718  data_time: 0.0042  memory: 5464  grad_norm: 0.6302  loss: 0.5299  loss_cls: 0.3517  loss_bbox: 0.1782
2025/05/12 16:33:18 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:33:22 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:33:24 - mmengine - INFO - bbox_mAP_copypaste: 0.280 0.499 0.296 -1.000 0.226 0.289
2025/05/12 16:33:24 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.2800  coco/bbox_mAP_50: 0.4990  coco/bbox_mAP_75: 0.2960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2260  coco/bbox_mAP_l: 0.2890  data_time: 0.0016  time: 0.0844
2025/05/12 16:33:37 - mmengine - INFO - Epoch(train) [12][ 50/563]  base_lr: 1.5955e-01 lr: 1.5955e-01  eta: 0:47:50  time: 0.2610  data_time: 0.0049  memory: 5304  grad_norm: 0.5809  loss: 0.5262  loss_cls: 0.3469  loss_bbox: 0.1793
2025/05/12 16:33:50 - mmengine - INFO - Epoch(train) [12][100/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:47:36  time: 0.2641  data_time: 0.0042  memory: 5319  grad_norm: 0.5885  loss: 0.5045  loss_cls: 0.3221  loss_bbox: 0.1825
2025/05/12 16:34:03 - mmengine - INFO - Epoch(train) [12][150/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:47:21  time: 0.2591  data_time: 0.0042  memory: 5252  grad_norm: 0.5697  loss: 0.5098  loss_cls: 0.3318  loss_bbox: 0.1780
2025/05/12 16:34:16 - mmengine - INFO - Epoch(train) [12][200/563]  base_lr: 1.5953e-01 lr: 1.5953e-01  eta: 0:47:08  time: 0.2684  data_time: 0.0042  memory: 5428  grad_norm: 0.5383  loss: 0.5064  loss_cls: 0.3257  loss_bbox: 0.1806
2025/05/12 16:34:30 - mmengine - INFO - Epoch(train) [12][250/563]  base_lr: 1.5952e-01 lr: 1.5952e-01  eta: 0:46:55  time: 0.2806  data_time: 0.0042  memory: 5330  grad_norm: 0.5544  loss: 0.5003  loss_cls: 0.3177  loss_bbox: 0.1826
2025/05/12 16:34:44 - mmengine - INFO - Epoch(train) [12][300/563]  base_lr: 1.5951e-01 lr: 1.5951e-01  eta: 0:46:42  time: 0.2687  data_time: 0.0043  memory: 5464  grad_norm: 0.6030  loss: 0.5326  loss_cls: 0.3380  loss_bbox: 0.1946
2025/05/12 16:34:57 - mmengine - INFO - Epoch(train) [12][350/563]  base_lr: 1.5950e-01 lr: 1.5950e-01  eta: 0:46:28  time: 0.2644  data_time: 0.0042  memory: 5459  grad_norm: 0.5418  loss: 0.5135  loss_cls: 0.3369  loss_bbox: 0.1766
2025/05/12 16:35:10 - mmengine - INFO - Epoch(train) [12][400/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:46:14  time: 0.2654  data_time: 0.0043  memory: 5402  grad_norm: 0.5654  loss: 0.5119  loss_cls: 0.3237  loss_bbox: 0.1882
2025/05/12 16:35:23 - mmengine - INFO - Epoch(train) [12][450/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:46:00  time: 0.2658  data_time: 0.0042  memory: 5296  grad_norm: 0.6832  loss: 0.5949  loss_cls: 0.3874  loss_bbox: 0.2076
2025/05/12 16:35:37 - mmengine - INFO - Epoch(train) [12][500/563]  base_lr: 1.5948e-01 lr: 1.5948e-01  eta: 0:45:47  time: 0.2709  data_time: 0.0043  memory: 5283  grad_norm: 0.6107  loss: 0.5432  loss_cls: 0.3470  loss_bbox: 0.1962
2025/05/12 16:35:50 - mmengine - INFO - Epoch(train) [12][550/563]  base_lr: 1.5947e-01 lr: 1.5947e-01  eta: 0:45:33  time: 0.2624  data_time: 0.0043  memory: 5299  grad_norm: 0.5573  loss: 0.4963  loss_cls: 0.3187  loss_bbox: 0.1776
2025/05/12 16:35:54 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:35:58 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:35:59 - mmengine - INFO - bbox_mAP_copypaste: 0.324 0.596 0.324 -1.000 0.227 0.344
2025/05/12 16:35:59 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.3240  coco/bbox_mAP_50: 0.5960  coco/bbox_mAP_75: 0.3240  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.3440  data_time: 0.0016  time: 0.0796
2025/05/12 16:36:12 - mmengine - INFO - Epoch(train) [13][ 50/563]  base_lr: 1.5946e-01 lr: 1.5946e-01  eta: 0:45:16  time: 0.2624  data_time: 0.0049  memory: 5448  grad_norm: 0.5585  loss: 0.5166  loss_cls: 0.3385  loss_bbox: 0.1781
2025/05/12 16:36:26 - mmengine - INFO - Epoch(train) [13][100/563]  base_lr: 1.5945e-01 lr: 1.5945e-01  eta: 0:45:02  time: 0.2704  data_time: 0.0042  memory: 5428  grad_norm: 0.6178  loss: 0.5204  loss_cls: 0.3262  loss_bbox: 0.1942
2025/05/12 16:36:39 - mmengine - INFO - Epoch(train) [13][150/563]  base_lr: 1.5944e-01 lr: 1.5944e-01  eta: 0:44:49  time: 0.2713  data_time: 0.0044  memory: 5325  grad_norm: 0.5858  loss: 0.5099  loss_cls: 0.3403  loss_bbox: 0.1696
2025/05/12 16:36:53 - mmengine - INFO - Epoch(train) [13][200/563]  base_lr: 1.5943e-01 lr: 1.5943e-01  eta: 0:44:35  time: 0.2657  data_time: 0.0043  memory: 5476  grad_norm: 0.7621  loss: 0.5542  loss_cls: 0.3656  loss_bbox: 0.1887
2025/05/12 16:37:04 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:37:06 - mmengine - INFO - Epoch(train) [13][250/563]  base_lr: 1.5942e-01 lr: 1.5942e-01  eta: 0:44:21  time: 0.2651  data_time: 0.0043  memory: 5392  grad_norm: 0.6587  loss: 0.5373  loss_cls: 0.3504  loss_bbox: 0.1869
2025/05/12 16:37:19 - mmengine - INFO - Epoch(train) [13][300/563]  base_lr: 1.5941e-01 lr: 1.5941e-01  eta: 0:44:08  time: 0.2674  data_time: 0.0042  memory: 5448  grad_norm: 0.5327  loss: 0.5081  loss_cls: 0.3430  loss_bbox: 0.1651
2025/05/12 16:37:33 - mmengine - INFO - Epoch(train) [13][350/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:43:55  time: 0.2783  data_time: 0.0042  memory: 5397  grad_norm: 0.5972  loss: 0.5094  loss_cls: 0.3207  loss_bbox: 0.1886
2025/05/12 16:37:46 - mmengine - INFO - Epoch(train) [13][400/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:43:41  time: 0.2630  data_time: 0.0042  memory: 5443  grad_norm: 0.5700  loss: 0.5046  loss_cls: 0.3246  loss_bbox: 0.1800
2025/05/12 16:38:00 - mmengine - INFO - Epoch(train) [13][450/563]  base_lr: 1.5939e-01 lr: 1.5939e-01  eta: 0:43:27  time: 0.2628  data_time: 0.0043  memory: 5376  grad_norm: 0.5754  loss: 0.5006  loss_cls: 0.3274  loss_bbox: 0.1732
2025/05/12 16:38:13 - mmengine - INFO - Epoch(train) [13][500/563]  base_lr: 1.5938e-01 lr: 1.5938e-01  eta: 0:43:13  time: 0.2654  data_time: 0.0042  memory: 5345  grad_norm: 0.5537  loss: 0.5315  loss_cls: 0.3539  loss_bbox: 0.1776
2025/05/12 16:38:26 - mmengine - INFO - Epoch(train) [13][550/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 0:43:00  time: 0.2679  data_time: 0.0042  memory: 5402  grad_norm: 0.5952  loss: 0.5076  loss_cls: 0.3338  loss_bbox: 0.1738
2025/05/12 16:38:30 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:38:34 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:38:35 - mmengine - INFO - bbox_mAP_copypaste: 0.317 0.564 0.341 -1.000 0.208 0.338
2025/05/12 16:38:35 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.3170  coco/bbox_mAP_50: 0.5640  coco/bbox_mAP_75: 0.3410  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2080  coco/bbox_mAP_l: 0.3380  data_time: 0.0016  time: 0.0791
2025/05/12 16:38:49 - mmengine - INFO - Epoch(train) [14][ 50/563]  base_lr: 1.5936e-01 lr: 1.5936e-01  eta: 0:42:43  time: 0.2693  data_time: 0.0050  memory: 5381  grad_norm: 0.5892  loss: 0.5182  loss_cls: 0.3376  loss_bbox: 0.1806
2025/05/12 16:39:02 - mmengine - INFO - Epoch(train) [14][100/563]  base_lr: 1.5935e-01 lr: 1.5935e-01  eta: 0:42:29  time: 0.2642  data_time: 0.0042  memory: 5449  grad_norm: 0.5857  loss: 0.5144  loss_cls: 0.3430  loss_bbox: 0.1714
2025/05/12 16:39:15 - mmengine - INFO - Epoch(train) [14][150/563]  base_lr: 1.5934e-01 lr: 1.5934e-01  eta: 0:42:16  time: 0.2663  data_time: 0.0041  memory: 5263  grad_norm: 0.6226  loss: 0.5230  loss_cls: 0.3342  loss_bbox: 0.1888
2025/05/12 16:39:28 - mmengine - INFO - Epoch(train) [14][200/563]  base_lr: 1.5933e-01 lr: 1.5933e-01  eta: 0:42:02  time: 0.2604  data_time: 0.0042  memory: 5232  grad_norm: 0.6056  loss: 0.5212  loss_cls: 0.3450  loss_bbox: 0.1762
2025/05/12 16:39:42 - mmengine - INFO - Epoch(train) [14][250/563]  base_lr: 1.5932e-01 lr: 1.5932e-01  eta: 0:41:49  time: 0.2760  data_time: 0.0042  memory: 5296  grad_norm: 0.5658  loss: 0.4995  loss_cls: 0.3187  loss_bbox: 0.1809
2025/05/12 16:39:55 - mmengine - INFO - Epoch(train) [14][300/563]  base_lr: 1.5931e-01 lr: 1.5931e-01  eta: 0:41:35  time: 0.2645  data_time: 0.0042  memory: 5417  grad_norm: 0.5667  loss: 0.5040  loss_cls: 0.3243  loss_bbox: 0.1797
2025/05/12 16:40:08 - mmengine - INFO - Epoch(train) [14][350/563]  base_lr: 1.5930e-01 lr: 1.5930e-01  eta: 0:41:21  time: 0.2628  data_time: 0.0042  memory: 5309  grad_norm: 0.5874  loss: 0.5139  loss_cls: 0.3277  loss_bbox: 0.1862
2025/05/12 16:40:22 - mmengine - INFO - Epoch(train) [14][400/563]  base_lr: 1.5929e-01 lr: 1.5929e-01  eta: 0:41:07  time: 0.2621  data_time: 0.0042  memory: 5464  grad_norm: 0.6512  loss: 0.5526  loss_cls: 0.3499  loss_bbox: 0.2027
2025/05/12 16:40:35 - mmengine - INFO - Epoch(train) [14][450/563]  base_lr: 1.5928e-01 lr: 1.5928e-01  eta: 0:40:54  time: 0.2695  data_time: 0.0043  memory: 5469  grad_norm: 0.7338  loss: 0.5520  loss_cls: 0.3559  loss_bbox: 0.1962
2025/05/12 16:40:49 - mmengine - INFO - Epoch(train) [14][500/563]  base_lr: 1.5927e-01 lr: 1.5927e-01  eta: 0:40:41  time: 0.2782  data_time: 0.0042  memory: 5392  grad_norm: 0.5926  loss: 0.5403  loss_cls: 0.3389  loss_bbox: 0.2014
2025/05/12 16:41:02 - mmengine - INFO - Epoch(train) [14][550/563]  base_lr: 1.5926e-01 lr: 1.5926e-01  eta: 0:40:27  time: 0.2618  data_time: 0.0043  memory: 5366  grad_norm: 0.5141  loss: 0.4987  loss_cls: 0.3288  loss_bbox: 0.1699
2025/05/12 16:41:06 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:41:09 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:41:11 - mmengine - INFO - bbox_mAP_copypaste: 0.340 0.610 0.357 -1.000 0.235 0.360
2025/05/12 16:41:11 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.3400  coco/bbox_mAP_50: 0.6100  coco/bbox_mAP_75: 0.3570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2350  coco/bbox_mAP_l: 0.3600  data_time: 0.0015  time: 0.0776
2025/05/12 16:41:11 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/12 16:41:12 - mmengine - INFO - The best checkpoint with 0.3400 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/12 16:41:26 - mmengine - INFO - Epoch(train) [15][ 50/563]  base_lr: 1.5924e-01 lr: 1.5924e-01  eta: 0:40:11  time: 0.2893  data_time: 0.0049  memory: 5397  grad_norm: 0.6949  loss: 0.5689  loss_cls: 0.3825  loss_bbox: 0.1864
2025/05/12 16:41:40 - mmengine - INFO - Epoch(train) [15][100/563]  base_lr: 1.5923e-01 lr: 1.5923e-01  eta: 0:39:58  time: 0.2733  data_time: 0.0041  memory: 5211  grad_norm: 0.5802  loss: 0.6184  loss_cls: 0.4273  loss_bbox: 0.1910
2025/05/12 16:41:45 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:41:54 - mmengine - INFO - Epoch(train) [15][150/563]  base_lr: 1.5922e-01 lr: 1.5922e-01  eta: 0:39:45  time: 0.2737  data_time: 0.0043  memory: 5469  grad_norm: 0.5592  loss: 0.5242  loss_cls: 0.3476  loss_bbox: 0.1767
2025/05/12 16:42:07 - mmengine - INFO - Epoch(train) [15][200/563]  base_lr: 1.5921e-01 lr: 1.5921e-01  eta: 0:39:31  time: 0.2665  data_time: 0.0042  memory: 5476  grad_norm: 0.5974  loss: 0.5134  loss_cls: 0.3282  loss_bbox: 0.1852
2025/05/12 16:42:20 - mmengine - INFO - Epoch(train) [15][250/563]  base_lr: 1.5920e-01 lr: 1.5920e-01  eta: 0:39:17  time: 0.2668  data_time: 0.0043  memory: 5288  grad_norm: 0.5230  loss: 0.4790  loss_cls: 0.3096  loss_bbox: 0.1694
2025/05/12 16:42:33 - mmengine - INFO - Epoch(train) [15][300/563]  base_lr: 1.5919e-01 lr: 1.5919e-01  eta: 0:39:04  time: 0.2626  data_time: 0.0042  memory: 5371  grad_norm: 0.6422  loss: 0.5346  loss_cls: 0.3352  loss_bbox: 0.1994
2025/05/12 16:42:47 - mmengine - INFO - Epoch(train) [15][350/563]  base_lr: 1.5918e-01 lr: 1.5918e-01  eta: 0:38:51  time: 0.2758  data_time: 0.0042  memory: 5412  grad_norm: 0.5518  loss: 0.5205  loss_cls: 0.3332  loss_bbox: 0.1872
2025/05/12 16:43:00 - mmengine - INFO - Epoch(train) [15][400/563]  base_lr: 1.5917e-01 lr: 1.5917e-01  eta: 0:38:37  time: 0.2671  data_time: 0.0042  memory: 5381  grad_norm: 0.5085  loss: 0.4726  loss_cls: 0.3089  loss_bbox: 0.1637
2025/05/12 16:43:14 - mmengine - INFO - Epoch(train) [15][450/563]  base_lr: 1.5916e-01 lr: 1.5916e-01  eta: 0:38:23  time: 0.2615  data_time: 0.0042  memory: 5459  grad_norm: 0.6358  loss: 0.5188  loss_cls: 0.3375  loss_bbox: 0.1813
2025/05/12 16:43:27 - mmengine - INFO - Epoch(train) [15][500/563]  base_lr: 1.5915e-01 lr: 1.5915e-01  eta: 0:38:09  time: 0.2653  data_time: 0.0042  memory: 5283  grad_norm: 0.5839  loss: 0.5083  loss_cls: 0.3330  loss_bbox: 0.1753
2025/05/12 16:43:40 - mmengine - INFO - Epoch(train) [15][550/563]  base_lr: 1.5914e-01 lr: 1.5914e-01  eta: 0:37:55  time: 0.2577  data_time: 0.0042  memory: 5476  grad_norm: 0.6529  loss: 0.5389  loss_cls: 0.3386  loss_bbox: 0.2003
2025/05/12 16:43:43 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:43:48 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:43:49 - mmengine - INFO - bbox_mAP_copypaste: 0.333 0.591 0.360 -1.000 0.223 0.358
2025/05/12 16:43:49 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.3330  coco/bbox_mAP_50: 0.5910  coco/bbox_mAP_75: 0.3600  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2230  coco/bbox_mAP_l: 0.3580  data_time: 0.0015  time: 0.0850
2025/05/12 16:44:02 - mmengine - INFO - Epoch(train) [16][ 50/563]  base_lr: 1.5913e-01 lr: 1.5913e-01  eta: 0:37:38  time: 0.2687  data_time: 0.0048  memory: 5397  grad_norm: 0.5248  loss: 0.4759  loss_cls: 0.3140  loss_bbox: 0.1620
2025/05/12 16:44:16 - mmengine - INFO - Epoch(train) [16][100/563]  base_lr: 1.5911e-01 lr: 1.5911e-01  eta: 0:37:25  time: 0.2653  data_time: 0.0042  memory: 5381  grad_norm: 0.6131  loss: 0.5037  loss_cls: 0.3262  loss_bbox: 0.1774
2025/05/12 16:44:29 - mmengine - INFO - Epoch(train) [16][150/563]  base_lr: 1.5910e-01 lr: 1.5910e-01  eta: 0:37:11  time: 0.2654  data_time: 0.0041  memory: 5314  grad_norm: 0.6299  loss: 0.5397  loss_cls: 0.3310  loss_bbox: 0.2087
2025/05/12 16:44:42 - mmengine - INFO - Epoch(train) [16][200/563]  base_lr: 1.5909e-01 lr: 1.5909e-01  eta: 0:36:58  time: 0.2649  data_time: 0.0042  memory: 5283  grad_norm: 0.6647  loss: 0.5456  loss_cls: 0.3562  loss_bbox: 0.1894
2025/05/12 16:44:56 - mmengine - INFO - Epoch(train) [16][250/563]  base_lr: 1.5908e-01 lr: 1.5908e-01  eta: 0:36:45  time: 0.2806  data_time: 0.0042  memory: 5366  grad_norm: 0.5859  loss: 0.4955  loss_cls: 0.3193  loss_bbox: 0.1762
2025/05/12 16:45:09 - mmengine - INFO - Epoch(train) [16][300/563]  base_lr: 1.5907e-01 lr: 1.5907e-01  eta: 0:36:31  time: 0.2654  data_time: 0.0043  memory: 5433  grad_norm: 0.5458  loss: 0.4800  loss_cls: 0.3171  loss_bbox: 0.1629
2025/05/12 16:45:23 - mmengine - INFO - Epoch(train) [16][350/563]  base_lr: 1.5906e-01 lr: 1.5906e-01  eta: 0:36:17  time: 0.2668  data_time: 0.0044  memory: 5335  grad_norm: 0.5064  loss: 0.4607  loss_cls: 0.3031  loss_bbox: 0.1576
2025/05/12 16:45:36 - mmengine - INFO - Epoch(train) [16][400/563]  base_lr: 1.5905e-01 lr: 1.5905e-01  eta: 0:36:04  time: 0.2644  data_time: 0.0042  memory: 5459  grad_norm: 0.5320  loss: 0.4640  loss_cls: 0.3006  loss_bbox: 0.1634
2025/05/12 16:45:49 - mmengine - INFO - Epoch(train) [16][450/563]  base_lr: 1.5904e-01 lr: 1.5904e-01  eta: 0:35:50  time: 0.2602  data_time: 0.0042  memory: 5296  grad_norm: 0.6091  loss: 0.5130  loss_cls: 0.3230  loss_bbox: 0.1901
2025/05/12 16:46:03 - mmengine - INFO - Epoch(train) [16][500/563]  base_lr: 1.5902e-01 lr: 1.5902e-01  eta: 0:35:37  time: 0.2714  data_time: 0.0042  memory: 5278  grad_norm: 0.6497  loss: 0.5219  loss_cls: 0.3347  loss_bbox: 0.1872
2025/05/12 16:46:16 - mmengine - INFO - Epoch(train) [16][550/563]  base_lr: 1.5901e-01 lr: 1.5901e-01  eta: 0:35:23  time: 0.2660  data_time: 0.0043  memory: 5397  grad_norm: 0.6027  loss: 0.5311  loss_cls: 0.3436  loss_bbox: 0.1875
2025/05/12 16:46:17 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:46:19 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:46:23 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:46:24 - mmengine - INFO - bbox_mAP_copypaste: 0.359 0.624 0.388 -1.000 0.253 0.379
2025/05/12 16:46:25 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.3590  coco/bbox_mAP_50: 0.6240  coco/bbox_mAP_75: 0.3880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2530  coco/bbox_mAP_l: 0.3790  data_time: 0.0014  time: 0.0753
2025/05/12 16:46:25 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/12 16:46:25 - mmengine - INFO - The best checkpoint with 0.3590 coco/bbox_mAP at 16 epoch is saved to best_coco_bbox_mAP_epoch_16.pth.
2025/05/12 16:46:40 - mmengine - INFO - Epoch(train) [17][ 50/563]  base_lr: 1.5900e-01 lr: 1.5900e-01  eta: 0:35:07  time: 0.2914  data_time: 0.0048  memory: 5428  grad_norm: 0.6321  loss: 0.5229  loss_cls: 0.3427  loss_bbox: 0.1802
2025/05/12 16:46:54 - mmengine - INFO - Epoch(train) [17][100/563]  base_lr: 1.5899e-01 lr: 1.5899e-01  eta: 0:34:54  time: 0.2698  data_time: 0.0042  memory: 5438  grad_norm: 0.5593  loss: 0.5153  loss_cls: 0.3328  loss_bbox: 0.1825
2025/05/12 16:47:07 - mmengine - INFO - Epoch(train) [17][150/563]  base_lr: 1.5897e-01 lr: 1.5897e-01  eta: 0:34:40  time: 0.2718  data_time: 0.0042  memory: 5381  grad_norm: 0.5496  loss: 0.4715  loss_cls: 0.3029  loss_bbox: 0.1685
2025/05/12 16:47:20 - mmengine - INFO - Epoch(train) [17][200/563]  base_lr: 1.5896e-01 lr: 1.5896e-01  eta: 0:34:26  time: 0.2598  data_time: 0.0042  memory: 5335  grad_norm: 0.5809  loss: 0.4913  loss_cls: 0.3188  loss_bbox: 0.1725
2025/05/12 16:47:33 - mmengine - INFO - Epoch(train) [17][250/563]  base_lr: 1.5895e-01 lr: 1.5895e-01  eta: 0:34:13  time: 0.2635  data_time: 0.0043  memory: 5252  grad_norm: 0.5024  loss: 0.4466  loss_cls: 0.2965  loss_bbox: 0.1501
2025/05/12 16:47:46 - mmengine - INFO - Epoch(train) [17][300/563]  base_lr: 1.5894e-01 lr: 1.5894e-01  eta: 0:33:59  time: 0.2616  data_time: 0.0042  memory: 5443  grad_norm: 0.5838  loss: 0.5030  loss_cls: 0.3248  loss_bbox: 0.1782
2025/05/12 16:48:00 - mmengine - INFO - Epoch(train) [17][350/563]  base_lr: 1.5893e-01 lr: 1.5893e-01  eta: 0:33:46  time: 0.2710  data_time: 0.0043  memory: 5304  grad_norm: 0.5817  loss: 0.4983  loss_cls: 0.3260  loss_bbox: 0.1723
2025/05/12 16:48:13 - mmengine - INFO - Epoch(train) [17][400/563]  base_lr: 1.5891e-01 lr: 1.5891e-01  eta: 0:33:32  time: 0.2684  data_time: 0.0042  memory: 5226  grad_norm: 0.5893  loss: 0.4999  loss_cls: 0.3185  loss_bbox: 0.1814
2025/05/12 16:48:26 - mmengine - INFO - Epoch(train) [17][450/563]  base_lr: 1.5890e-01 lr: 1.5890e-01  eta: 0:33:18  time: 0.2622  data_time: 0.0042  memory: 5237  grad_norm: 0.5947  loss: 0.4972  loss_cls: 0.3104  loss_bbox: 0.1869
2025/05/12 16:48:40 - mmengine - INFO - Epoch(train) [17][500/563]  base_lr: 1.5889e-01 lr: 1.5889e-01  eta: 0:33:05  time: 0.2632  data_time: 0.0042  memory: 5366  grad_norm: 0.5975  loss: 0.4984  loss_cls: 0.3152  loss_bbox: 0.1831
2025/05/12 16:48:53 - mmengine - INFO - Epoch(train) [17][550/563]  base_lr: 1.5888e-01 lr: 1.5888e-01  eta: 0:32:51  time: 0.2617  data_time: 0.0044  memory: 5381  grad_norm: 0.6132  loss: 0.5007  loss_cls: 0.3092  loss_bbox: 0.1914
2025/05/12 16:48:56 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:49:00 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:49:02 - mmengine - INFO - bbox_mAP_copypaste: 0.367 0.659 0.387 -1.000 0.275 0.388
2025/05/12 16:49:02 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.3670  coco/bbox_mAP_50: 0.6590  coco/bbox_mAP_75: 0.3870  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2750  coco/bbox_mAP_l: 0.3880  data_time: 0.0015  time: 0.0846
2025/05/12 16:49:02 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_16.pth is removed
2025/05/12 16:49:03 - mmengine - INFO - The best checkpoint with 0.3670 coco/bbox_mAP at 17 epoch is saved to best_coco_bbox_mAP_epoch_17.pth.
2025/05/12 16:49:17 - mmengine - INFO - Epoch(train) [18][ 50/563]  base_lr: 1.5886e-01 lr: 1.5886e-01  eta: 0:32:35  time: 0.2931  data_time: 0.0049  memory: 5355  grad_norm: 0.6498  loss: 0.5291  loss_cls: 0.3365  loss_bbox: 0.1926
2025/05/12 16:49:31 - mmengine - INFO - Epoch(train) [18][100/563]  base_lr: 1.5885e-01 lr: 1.5885e-01  eta: 0:32:21  time: 0.2665  data_time: 0.0042  memory: 5417  grad_norm: 0.5478  loss: 0.4943  loss_cls: 0.3143  loss_bbox: 0.1800
2025/05/12 16:49:44 - mmengine - INFO - Epoch(train) [18][150/563]  base_lr: 1.5883e-01 lr: 1.5883e-01  eta: 0:32:08  time: 0.2626  data_time: 0.0044  memory: 5330  grad_norm: 0.5926  loss: 0.4833  loss_cls: 0.3097  loss_bbox: 0.1735
2025/05/12 16:49:57 - mmengine - INFO - Epoch(train) [18][200/563]  base_lr: 1.5882e-01 lr: 1.5882e-01  eta: 0:31:54  time: 0.2639  data_time: 0.0042  memory: 5412  grad_norm: 0.6518  loss: 0.4986  loss_cls: 0.3262  loss_bbox: 0.1724
2025/05/12 16:50:11 - mmengine - INFO - Epoch(train) [18][250/563]  base_lr: 1.5881e-01 lr: 1.5881e-01  eta: 0:31:41  time: 0.2756  data_time: 0.0043  memory: 5314  grad_norm: 0.6048  loss: 0.4931  loss_cls: 0.3185  loss_bbox: 0.1746
2025/05/12 16:50:24 - mmengine - INFO - Epoch(train) [18][300/563]  base_lr: 1.5880e-01 lr: 1.5880e-01  eta: 0:31:27  time: 0.2648  data_time: 0.0043  memory: 5428  grad_norm: 0.6150  loss: 0.4949  loss_cls: 0.3295  loss_bbox: 0.1654
2025/05/12 16:50:37 - mmengine - INFO - Epoch(train) [18][350/563]  base_lr: 1.5878e-01 lr: 1.5878e-01  eta: 0:31:13  time: 0.2612  data_time: 0.0042  memory: 5340  grad_norm: 0.5777  loss: 0.5009  loss_cls: 0.3269  loss_bbox: 0.1740
2025/05/12 16:50:50 - mmengine - INFO - Epoch(train) [18][400/563]  base_lr: 1.5877e-01 lr: 1.5877e-01  eta: 0:31:00  time: 0.2629  data_time: 0.0042  memory: 5232  grad_norm: 0.6639  loss: 0.5234  loss_cls: 0.3325  loss_bbox: 0.1910
2025/05/12 16:50:58 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:51:03 - mmengine - INFO - Epoch(train) [18][450/563]  base_lr: 1.5876e-01 lr: 1.5876e-01  eta: 0:30:46  time: 0.2630  data_time: 0.0043  memory: 5340  grad_norm: 0.5904  loss: 0.5037  loss_cls: 0.3187  loss_bbox: 0.1850
2025/05/12 16:51:17 - mmengine - INFO - Epoch(train) [18][500/563]  base_lr: 1.5874e-01 lr: 1.5874e-01  eta: 0:30:33  time: 0.2773  data_time: 0.0044  memory: 5345  grad_norm: 0.6183  loss: 0.4878  loss_cls: 0.2997  loss_bbox: 0.1881
2025/05/12 16:51:30 - mmengine - INFO - Epoch(train) [18][550/563]  base_lr: 1.5873e-01 lr: 1.5873e-01  eta: 0:30:19  time: 0.2620  data_time: 0.0042  memory: 5345  grad_norm: 0.6240  loss: 0.5474  loss_cls: 0.3485  loss_bbox: 0.1989
2025/05/12 16:51:34 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:51:38 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:51:39 - mmengine - INFO - bbox_mAP_copypaste: 0.385 0.671 0.414 -1.000 0.263 0.406
2025/05/12 16:51:39 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.3850  coco/bbox_mAP_50: 0.6710  coco/bbox_mAP_75: 0.4140  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2630  coco/bbox_mAP_l: 0.4060  data_time: 0.0017  time: 0.0776
2025/05/12 16:51:39 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_17.pth is removed
2025/05/12 16:51:40 - mmengine - INFO - The best checkpoint with 0.3850 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2025/05/12 16:51:54 - mmengine - INFO - Epoch(train) [19][ 50/563]  base_lr: 1.5871e-01 lr: 1.5871e-01  eta: 0:30:03  time: 0.2870  data_time: 0.0049  memory: 5381  grad_norm: 0.5781  loss: 0.4897  loss_cls: 0.3283  loss_bbox: 0.1614
2025/05/12 16:52:08 - mmengine - INFO - Epoch(train) [19][100/563]  base_lr: 1.5870e-01 lr: 1.5870e-01  eta: 0:29:50  time: 0.2700  data_time: 0.0043  memory: 5371  grad_norm: 0.5499  loss: 0.4762  loss_cls: 0.3076  loss_bbox: 0.1686
2025/05/12 16:52:22 - mmengine - INFO - Epoch(train) [19][150/563]  base_lr: 1.5869e-01 lr: 1.5869e-01  eta: 0:29:36  time: 0.2767  data_time: 0.0043  memory: 5402  grad_norm: 0.6236  loss: 0.5442  loss_cls: 0.3592  loss_bbox: 0.1851
2025/05/12 16:52:35 - mmengine - INFO - Epoch(train) [19][200/563]  base_lr: 1.5867e-01 lr: 1.5867e-01  eta: 0:29:23  time: 0.2664  data_time: 0.0043  memory: 5356  grad_norm: 0.5965  loss: 0.5077  loss_cls: 0.3214  loss_bbox: 0.1863
2025/05/12 16:52:48 - mmengine - INFO - Epoch(train) [19][250/563]  base_lr: 1.5866e-01 lr: 1.5866e-01  eta: 0:29:09  time: 0.2649  data_time: 0.0042  memory: 5371  grad_norm: 0.5227  loss: 0.4781  loss_cls: 0.3083  loss_bbox: 0.1698
2025/05/12 16:53:01 - mmengine - INFO - Epoch(train) [19][300/563]  base_lr: 1.5865e-01 lr: 1.5865e-01  eta: 0:28:56  time: 0.2604  data_time: 0.0042  memory: 5423  grad_norm: 0.6428  loss: 0.5005  loss_cls: 0.3298  loss_bbox: 0.1707
2025/05/12 16:53:15 - mmengine - INFO - Epoch(train) [19][350/563]  base_lr: 1.5863e-01 lr: 1.5863e-01  eta: 0:28:42  time: 0.2703  data_time: 0.0043  memory: 5304  grad_norm: 0.6006  loss: 0.5084  loss_cls: 0.3265  loss_bbox: 0.1819
2025/05/12 16:53:28 - mmengine - INFO - Epoch(train) [19][400/563]  base_lr: 1.5862e-01 lr: 1.5862e-01  eta: 0:28:29  time: 0.2710  data_time: 0.0044  memory: 5247  grad_norm: 0.5979  loss: 0.4985  loss_cls: 0.3206  loss_bbox: 0.1779
2025/05/12 16:53:42 - mmengine - INFO - Epoch(train) [19][450/563]  base_lr: 1.5861e-01 lr: 1.5861e-01  eta: 0:28:15  time: 0.2637  data_time: 0.0042  memory: 5397  grad_norm: 0.6249  loss: 0.5120  loss_cls: 0.3243  loss_bbox: 0.1877
2025/05/12 16:53:55 - mmengine - INFO - Epoch(train) [19][500/563]  base_lr: 1.5859e-01 lr: 1.5859e-01  eta: 0:28:02  time: 0.2630  data_time: 0.0042  memory: 5185  grad_norm: 0.5950  loss: 0.4786  loss_cls: 0.3039  loss_bbox: 0.1748
2025/05/12 16:54:08 - mmengine - INFO - Epoch(train) [19][550/563]  base_lr: 1.5858e-01 lr: 1.5858e-01  eta: 0:27:48  time: 0.2625  data_time: 0.0043  memory: 5309  grad_norm: 0.5817  loss: 0.5066  loss_cls: 0.3229  loss_bbox: 0.1837
2025/05/12 16:54:11 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:54:15 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:54:17 - mmengine - INFO - bbox_mAP_copypaste: 0.395 0.667 0.449 -1.000 0.266 0.418
2025/05/12 16:54:17 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.3950  coco/bbox_mAP_50: 0.6670  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2660  coco/bbox_mAP_l: 0.4180  data_time: 0.0016  time: 0.0852
2025/05/12 16:54:17 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_18.pth is removed
2025/05/12 16:54:18 - mmengine - INFO - The best checkpoint with 0.3950 coco/bbox_mAP at 19 epoch is saved to best_coco_bbox_mAP_epoch_19.pth.
2025/05/12 16:54:32 - mmengine - INFO - Epoch(train) [20][ 50/563]  base_lr: 1.5856e-01 lr: 1.5856e-01  eta: 0:27:32  time: 0.2913  data_time: 0.0049  memory: 5361  grad_norm: 0.5519  loss: 0.4575  loss_cls: 0.2989  loss_bbox: 0.1585
2025/05/12 16:54:46 - mmengine - INFO - Epoch(train) [20][100/563]  base_lr: 1.5855e-01 lr: 1.5855e-01  eta: 0:27:18  time: 0.2644  data_time: 0.0043  memory: 5268  grad_norm: 0.5787  loss: 0.4726  loss_cls: 0.2943  loss_bbox: 0.1784
2025/05/12 16:54:59 - mmengine - INFO - Epoch(train) [20][150/563]  base_lr: 1.5853e-01 lr: 1.5853e-01  eta: 0:27:04  time: 0.2662  data_time: 0.0042  memory: 5273  grad_norm: 0.5415  loss: 0.4687  loss_cls: 0.3001  loss_bbox: 0.1686
2025/05/12 16:55:12 - mmengine - INFO - Epoch(train) [20][200/563]  base_lr: 1.5852e-01 lr: 1.5852e-01  eta: 0:26:51  time: 0.2639  data_time: 0.0042  memory: 5438  grad_norm: 0.5901  loss: 0.4843  loss_cls: 0.3115  loss_bbox: 0.1728
2025/05/12 16:55:26 - mmengine - INFO - Epoch(train) [20][250/563]  base_lr: 1.5850e-01 lr: 1.5850e-01  eta: 0:26:38  time: 0.2802  data_time: 0.0042  memory: 5479  grad_norm: 0.5756  loss: 0.5071  loss_cls: 0.3307  loss_bbox: 0.1763
2025/05/12 16:55:39 - mmengine - INFO - Epoch(train) [20][300/563]  base_lr: 1.5849e-01 lr: 1.5849e-01  eta: 0:26:24  time: 0.2616  data_time: 0.0042  memory: 5237  grad_norm: 0.6034  loss: 0.4963  loss_cls: 0.3093  loss_bbox: 0.1870
2025/05/12 16:55:40 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:55:53 - mmengine - INFO - Epoch(train) [20][350/563]  base_lr: 1.5847e-01 lr: 1.5847e-01  eta: 0:26:11  time: 0.2681  data_time: 0.0043  memory: 5423  grad_norm: 0.6153  loss: 0.5093  loss_cls: 0.3180  loss_bbox: 0.1913
2025/05/12 16:56:06 - mmengine - INFO - Epoch(train) [20][400/563]  base_lr: 1.5846e-01 lr: 1.5846e-01  eta: 0:25:57  time: 0.2644  data_time: 0.0043  memory: 5438  grad_norm: 0.6069  loss: 0.4976  loss_cls: 0.3215  loss_bbox: 0.1761
2025/05/12 16:56:19 - mmengine - INFO - Epoch(train) [20][450/563]  base_lr: 1.5844e-01 lr: 1.5844e-01  eta: 0:25:44  time: 0.2691  data_time: 0.0042  memory: 5459  grad_norm: 0.6909  loss: 0.5568  loss_cls: 0.3640  loss_bbox: 0.1928
2025/05/12 16:56:33 - mmengine - INFO - Epoch(train) [20][500/563]  base_lr: 1.5843e-01 lr: 1.5843e-01  eta: 0:25:31  time: 0.2839  data_time: 0.0042  memory: 5397  grad_norm: 0.5443  loss: 0.5135  loss_cls: 0.3439  loss_bbox: 0.1696
2025/05/12 16:56:47 - mmengine - INFO - Epoch(train) [20][550/563]  base_lr: 1.5842e-01 lr: 1.5842e-01  eta: 0:25:17  time: 0.2653  data_time: 0.0042  memory: 5314  grad_norm: 0.6540  loss: 0.5176  loss_cls: 0.3308  loss_bbox: 0.1868
2025/05/12 16:56:50 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:56:54 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:56:55 - mmengine - INFO - bbox_mAP_copypaste: 0.385 0.678 0.414 -1.000 0.309 0.405
2025/05/12 16:56:56 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.3850  coco/bbox_mAP_50: 0.6780  coco/bbox_mAP_75: 0.4140  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3090  coco/bbox_mAP_l: 0.4050  data_time: 0.0016  time: 0.0773
2025/05/12 16:57:09 - mmengine - INFO - Epoch(train) [21][ 50/563]  base_lr: 1.5840e-01 lr: 1.5840e-01  eta: 0:25:00  time: 0.2703  data_time: 0.0049  memory: 5345  grad_norm: 0.5885  loss: 0.4984  loss_cls: 0.3162  loss_bbox: 0.1822
2025/05/12 16:57:22 - mmengine - INFO - Epoch(train) [21][100/563]  base_lr: 1.5838e-01 lr: 1.5838e-01  eta: 0:24:47  time: 0.2634  data_time: 0.0042  memory: 5319  grad_norm: 0.5850  loss: 0.4995  loss_cls: 0.3223  loss_bbox: 0.1772
2025/05/12 16:57:36 - mmengine - INFO - Epoch(train) [21][150/563]  base_lr: 1.5837e-01 lr: 1.5837e-01  eta: 0:24:33  time: 0.2773  data_time: 0.0042  memory: 5319  grad_norm: 0.6208  loss: 0.5037  loss_cls: 0.3258  loss_bbox: 0.1780
2025/05/12 16:57:49 - mmengine - INFO - Epoch(train) [21][200/563]  base_lr: 1.5835e-01 lr: 1.5835e-01  eta: 0:24:20  time: 0.2612  data_time: 0.0043  memory: 5309  grad_norm: 0.6292  loss: 0.4983  loss_cls: 0.3192  loss_bbox: 0.1791
2025/05/12 16:58:02 - mmengine - INFO - Epoch(train) [21][250/563]  base_lr: 1.5834e-01 lr: 1.5834e-01  eta: 0:24:06  time: 0.2622  data_time: 0.0042  memory: 5454  grad_norm: 0.6340  loss: 0.5191  loss_cls: 0.3425  loss_bbox: 0.1766
2025/05/12 16:58:15 - mmengine - INFO - Epoch(train) [21][300/563]  base_lr: 1.5832e-01 lr: 1.5832e-01  eta: 0:23:52  time: 0.2637  data_time: 0.0042  memory: 5288  grad_norm: 0.5868  loss: 0.4960  loss_cls: 0.3252  loss_bbox: 0.1708
2025/05/12 16:58:29 - mmengine - INFO - Epoch(train) [21][350/563]  base_lr: 1.5831e-01 lr: 1.5831e-01  eta: 0:23:39  time: 0.2734  data_time: 0.0043  memory: 5314  grad_norm: 0.5469  loss: 0.4725  loss_cls: 0.3026  loss_bbox: 0.1698
2025/05/12 16:58:43 - mmengine - INFO - Epoch(train) [21][400/563]  base_lr: 1.5829e-01 lr: 1.5829e-01  eta: 0:23:26  time: 0.2697  data_time: 0.0042  memory: 5268  grad_norm: 0.5404  loss: 0.4697  loss_cls: 0.3014  loss_bbox: 0.1683
2025/05/12 16:58:56 - mmengine - INFO - Epoch(train) [21][450/563]  base_lr: 1.5828e-01 lr: 1.5828e-01  eta: 0:23:12  time: 0.2681  data_time: 0.0042  memory: 5469  grad_norm: 0.5620  loss: 0.4595  loss_cls: 0.2921  loss_bbox: 0.1674
2025/05/12 16:59:09 - mmengine - INFO - Epoch(train) [21][500/563]  base_lr: 1.5826e-01 lr: 1.5826e-01  eta: 0:22:59  time: 0.2608  data_time: 0.0042  memory: 5397  grad_norm: 0.6502  loss: 0.5253  loss_cls: 0.3189  loss_bbox: 0.2064
2025/05/12 16:59:22 - mmengine - INFO - Epoch(train) [21][550/563]  base_lr: 1.5824e-01 lr: 1.5824e-01  eta: 0:22:45  time: 0.2664  data_time: 0.0043  memory: 5381  grad_norm: 0.6694  loss: 0.5221  loss_cls: 0.3259  loss_bbox: 0.1962
2025/05/12 16:59:26 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 16:59:30 - mmengine - INFO - Evaluating bbox...
2025/05/12 16:59:31 - mmengine - INFO - bbox_mAP_copypaste: 0.393 0.696 0.424 -1.000 0.289 0.415
2025/05/12 16:59:31 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.3930  coco/bbox_mAP_50: 0.6960  coco/bbox_mAP_75: 0.4240  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2890  coco/bbox_mAP_l: 0.4150  data_time: 0.0016  time: 0.0836
2025/05/12 16:59:45 - mmengine - INFO - Epoch(train) [22][ 50/563]  base_lr: 1.5822e-01 lr: 1.5822e-01  eta: 0:22:28  time: 0.2684  data_time: 0.0049  memory: 5454  grad_norm: 0.6167  loss: 0.5065  loss_cls: 0.3326  loss_bbox: 0.1739
2025/05/12 16:59:58 - mmengine - INFO - Epoch(train) [22][100/563]  base_lr: 1.5821e-01 lr: 1.5821e-01  eta: 0:22:15  time: 0.2631  data_time: 0.0042  memory: 5242  grad_norm: 0.6664  loss: 0.5419  loss_cls: 0.3553  loss_bbox: 0.1866
2025/05/12 17:00:11 - mmengine - INFO - Epoch(train) [22][150/563]  base_lr: 1.5819e-01 lr: 1.5819e-01  eta: 0:22:01  time: 0.2641  data_time: 0.0042  memory: 5402  grad_norm: 0.6465  loss: 0.5170  loss_cls: 0.3282  loss_bbox: 0.1888
2025/05/12 17:00:18 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:00:24 - mmengine - INFO - Epoch(train) [22][200/563]  base_lr: 1.5818e-01 lr: 1.5818e-01  eta: 0:21:48  time: 0.2637  data_time: 0.0042  memory: 5392  grad_norm: 0.5779  loss: 0.4907  loss_cls: 0.3215  loss_bbox: 0.1691
2025/05/12 17:00:38 - mmengine - INFO - Epoch(train) [22][250/563]  base_lr: 1.5816e-01 lr: 1.5816e-01  eta: 0:21:34  time: 0.2696  data_time: 0.0043  memory: 5438  grad_norm: 0.5656  loss: 0.4849  loss_cls: 0.3096  loss_bbox: 0.1753
2025/05/12 17:00:51 - mmengine - INFO - Epoch(train) [22][300/563]  base_lr: 1.5815e-01 lr: 1.5815e-01  eta: 0:21:21  time: 0.2676  data_time: 0.0043  memory: 5371  grad_norm: 0.5901  loss: 0.4878  loss_cls: 0.3184  loss_bbox: 0.1695
2025/05/12 17:01:04 - mmengine - INFO - Epoch(train) [22][350/563]  base_lr: 1.5813e-01 lr: 1.5813e-01  eta: 0:21:07  time: 0.2644  data_time: 0.0042  memory: 5350  grad_norm: 0.6290  loss: 0.5087  loss_cls: 0.3132  loss_bbox: 0.1954
2025/05/12 17:01:18 - mmengine - INFO - Epoch(train) [22][400/563]  base_lr: 1.5811e-01 lr: 1.5811e-01  eta: 0:20:54  time: 0.2667  data_time: 0.0042  memory: 5476  grad_norm: 0.6472  loss: 0.5093  loss_cls: 0.3085  loss_bbox: 0.2007
2025/05/12 17:01:31 - mmengine - INFO - Epoch(train) [22][450/563]  base_lr: 1.5810e-01 lr: 1.5810e-01  eta: 0:20:40  time: 0.2598  data_time: 0.0042  memory: 5237  grad_norm: 0.5452  loss: 0.4618  loss_cls: 0.2980  loss_bbox: 0.1637
2025/05/12 17:01:45 - mmengine - INFO - Epoch(train) [22][500/563]  base_lr: 1.5808e-01 lr: 1.5808e-01  eta: 0:20:27  time: 0.2783  data_time: 0.0043  memory: 5443  grad_norm: 0.5570  loss: 0.4648  loss_cls: 0.3003  loss_bbox: 0.1645
2025/05/12 17:01:58 - mmengine - INFO - Epoch(train) [22][550/563]  base_lr: 1.5807e-01 lr: 1.5807e-01  eta: 0:20:13  time: 0.2651  data_time: 0.0043  memory: 5397  grad_norm: 0.5720  loss: 0.4849  loss_cls: 0.3138  loss_bbox: 0.1711
2025/05/12 17:02:01 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:02:05 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:02:07 - mmengine - INFO - bbox_mAP_copypaste: 0.407 0.703 0.451 -1.000 0.288 0.429
2025/05/12 17:02:07 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.4070  coco/bbox_mAP_50: 0.7030  coco/bbox_mAP_75: 0.4510  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2880  coco/bbox_mAP_l: 0.4290  data_time: 0.0016  time: 0.0767
2025/05/12 17:02:07 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_19.pth is removed
2025/05/12 17:02:08 - mmengine - INFO - The best checkpoint with 0.4070 coco/bbox_mAP at 22 epoch is saved to best_coco_bbox_mAP_epoch_22.pth.
2025/05/12 17:02:22 - mmengine - INFO - Epoch(train) [23][ 50/563]  base_lr: 1.5804e-01 lr: 1.5804e-01  eta: 0:19:57  time: 0.2887  data_time: 0.0049  memory: 5448  grad_norm: 0.6257  loss: 0.5508  loss_cls: 0.3174  loss_bbox: 0.2335
2025/05/12 17:02:35 - mmengine - INFO - Epoch(train) [23][100/563]  base_lr: 1.5803e-01 lr: 1.5803e-01  eta: 0:19:43  time: 0.2685  data_time: 0.0043  memory: 5476  grad_norm: 0.5649  loss: 0.4712  loss_cls: 0.3023  loss_bbox: 0.1689
2025/05/12 17:02:49 - mmengine - INFO - Epoch(train) [23][150/563]  base_lr: 1.5801e-01 lr: 1.5801e-01  eta: 0:19:30  time: 0.2697  data_time: 0.0043  memory: 5252  grad_norm: 0.6508  loss: 0.4979  loss_cls: 0.3120  loss_bbox: 0.1860
2025/05/12 17:03:02 - mmengine - INFO - Epoch(train) [23][200/563]  base_lr: 1.5799e-01 lr: 1.5799e-01  eta: 0:19:16  time: 0.2635  data_time: 0.0042  memory: 5448  grad_norm: 0.6011  loss: 0.4816  loss_cls: 0.3014  loss_bbox: 0.1802
2025/05/12 17:03:15 - mmengine - INFO - Epoch(train) [23][250/563]  base_lr: 1.5798e-01 lr: 1.5798e-01  eta: 0:19:03  time: 0.2631  data_time: 0.0043  memory: 5355  grad_norm: 0.6277  loss: 0.4874  loss_cls: 0.3128  loss_bbox: 0.1746
2025/05/12 17:03:28 - mmengine - INFO - Epoch(train) [23][300/563]  base_lr: 1.5796e-01 lr: 1.5796e-01  eta: 0:18:49  time: 0.2627  data_time: 0.0044  memory: 5263  grad_norm: 0.7124  loss: 0.5306  loss_cls: 0.3632  loss_bbox: 0.1674
2025/05/12 17:03:42 - mmengine - INFO - Epoch(train) [23][350/563]  base_lr: 1.5794e-01 lr: 1.5794e-01  eta: 0:18:36  time: 0.2711  data_time: 0.0042  memory: 5350  grad_norm: 0.5810  loss: 0.4985  loss_cls: 0.3207  loss_bbox: 0.1778
2025/05/12 17:03:56 - mmengine - INFO - Epoch(train) [23][400/563]  base_lr: 1.5793e-01 lr: 1.5793e-01  eta: 0:18:22  time: 0.2710  data_time: 0.0043  memory: 5392  grad_norm: 0.5732  loss: 0.4852  loss_cls: 0.3005  loss_bbox: 0.1847
2025/05/12 17:04:09 - mmengine - INFO - Epoch(train) [23][450/563]  base_lr: 1.5791e-01 lr: 1.5791e-01  eta: 0:18:09  time: 0.2639  data_time: 0.0042  memory: 5428  grad_norm: 0.5696  loss: 0.4812  loss_cls: 0.3119  loss_bbox: 0.1694
2025/05/12 17:04:22 - mmengine - INFO - Epoch(train) [23][500/563]  base_lr: 1.5789e-01 lr: 1.5789e-01  eta: 0:17:55  time: 0.2629  data_time: 0.0042  memory: 5330  grad_norm: 0.6126  loss: 0.5220  loss_cls: 0.3343  loss_bbox: 0.1877
2025/05/12 17:04:35 - mmengine - INFO - Epoch(train) [23][550/563]  base_lr: 1.5788e-01 lr: 1.5788e-01  eta: 0:17:42  time: 0.2569  data_time: 0.0042  memory: 5371  grad_norm: 0.5901  loss: 0.4725  loss_cls: 0.2962  loss_bbox: 0.1763
2025/05/12 17:04:38 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:04:42 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:04:43 - mmengine - INFO - bbox_mAP_copypaste: 0.401 0.686 0.447 -1.000 0.261 0.425
2025/05/12 17:04:43 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.4010  coco/bbox_mAP_50: 0.6860  coco/bbox_mAP_75: 0.4470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2610  coco/bbox_mAP_l: 0.4250  data_time: 0.0015  time: 0.0751
2025/05/12 17:04:56 - mmengine - INFO - Epoch(train) [24][ 50/563]  base_lr: 1.5786e-01 lr: 1.5786e-01  eta: 0:17:25  time: 0.2624  data_time: 0.0049  memory: 5381  grad_norm: 0.5480  loss: 0.4582  loss_cls: 0.3036  loss_bbox: 0.1547
2025/05/12 17:04:57 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:05:09 - mmengine - INFO - Epoch(train) [24][100/563]  base_lr: 1.5784e-01 lr: 1.5784e-01  eta: 0:17:11  time: 0.2583  data_time: 0.0042  memory: 5397  grad_norm: 0.6548  loss: 0.4875  loss_cls: 0.3172  loss_bbox: 0.1703
2025/05/12 17:05:23 - mmengine - INFO - Epoch(train) [24][150/563]  base_lr: 1.5782e-01 lr: 1.5782e-01  eta: 0:16:58  time: 0.2623  data_time: 0.0043  memory: 5476  grad_norm: 0.5739  loss: 0.4889  loss_cls: 0.3015  loss_bbox: 0.1874
2025/05/12 17:05:35 - mmengine - INFO - Epoch(train) [24][200/563]  base_lr: 1.5780e-01 lr: 1.5780e-01  eta: 0:16:44  time: 0.2588  data_time: 0.0042  memory: 5381  grad_norm: 0.6073  loss: 0.4879  loss_cls: 0.3150  loss_bbox: 0.1729
2025/05/12 17:05:49 - mmengine - INFO - Epoch(train) [24][250/563]  base_lr: 1.5779e-01 lr: 1.5779e-01  eta: 0:16:31  time: 0.2616  data_time: 0.0043  memory: 5438  grad_norm: 0.6852  loss: 0.5217  loss_cls: 0.3315  loss_bbox: 0.1902
2025/05/12 17:06:01 - mmengine - INFO - Epoch(train) [24][300/563]  base_lr: 1.5777e-01 lr: 1.5777e-01  eta: 0:16:17  time: 0.2579  data_time: 0.0042  memory: 5273  grad_norm: 0.5660  loss: 0.4747  loss_cls: 0.2948  loss_bbox: 0.1800
2025/05/12 17:06:14 - mmengine - INFO - Epoch(train) [24][350/563]  base_lr: 1.5775e-01 lr: 1.5775e-01  eta: 0:16:03  time: 0.2609  data_time: 0.0043  memory: 5376  grad_norm: 0.5397  loss: 0.4720  loss_cls: 0.3058  loss_bbox: 0.1662
2025/05/12 17:06:27 - mmengine - INFO - Epoch(train) [24][400/563]  base_lr: 1.5773e-01 lr: 1.5773e-01  eta: 0:15:50  time: 0.2599  data_time: 0.0042  memory: 5479  grad_norm: 0.5364  loss: 0.4663  loss_cls: 0.3036  loss_bbox: 0.1627
2025/05/12 17:06:40 - mmengine - INFO - Epoch(train) [24][450/563]  base_lr: 1.5772e-01 lr: 1.5772e-01  eta: 0:15:36  time: 0.2603  data_time: 0.0043  memory: 5097  grad_norm: 0.5590  loss: 0.4653  loss_cls: 0.3024  loss_bbox: 0.1629
2025/05/12 17:06:53 - mmengine - INFO - Epoch(train) [24][500/563]  base_lr: 1.5770e-01 lr: 1.5770e-01  eta: 0:15:23  time: 0.2559  data_time: 0.0043  memory: 5278  grad_norm: 0.6163  loss: 0.4789  loss_cls: 0.3042  loss_bbox: 0.1747
2025/05/12 17:07:06 - mmengine - INFO - Epoch(train) [24][550/563]  base_lr: 1.5768e-01 lr: 1.5768e-01  eta: 0:15:09  time: 0.2594  data_time: 0.0042  memory: 5402  grad_norm: 0.6239  loss: 0.4974  loss_cls: 0.3230  loss_bbox: 0.1745
2025/05/12 17:07:10 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:07:13 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:07:15 - mmengine - INFO - bbox_mAP_copypaste: 0.402 0.699 0.442 -1.000 0.289 0.426
2025/05/12 17:07:15 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.4020  coco/bbox_mAP_50: 0.6990  coco/bbox_mAP_75: 0.4420  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2890  coco/bbox_mAP_l: 0.4260  data_time: 0.0015  time: 0.0748
2025/05/12 17:07:28 - mmengine - INFO - Epoch(train) [25][ 50/563]  base_lr: 1.5766e-01 lr: 1.5766e-01  eta: 0:14:52  time: 0.2588  data_time: 0.0048  memory: 5428  grad_norm: 0.5686  loss: 0.4636  loss_cls: 0.2942  loss_bbox: 0.1694
2025/05/12 17:07:41 - mmengine - INFO - Epoch(train) [25][100/563]  base_lr: 1.5764e-01 lr: 1.5764e-01  eta: 0:14:39  time: 0.2600  data_time: 0.0042  memory: 5371  grad_norm: 0.6081  loss: 0.4719  loss_cls: 0.3006  loss_bbox: 0.1714
2025/05/12 17:07:54 - mmengine - INFO - Epoch(train) [25][150/563]  base_lr: 1.5762e-01 lr: 1.5762e-01  eta: 0:14:25  time: 0.2605  data_time: 0.0042  memory: 5438  grad_norm: 0.5875  loss: 0.4595  loss_cls: 0.2831  loss_bbox: 0.1764
2025/05/12 17:08:07 - mmengine - INFO - Epoch(train) [25][200/563]  base_lr: 1.5760e-01 lr: 1.5760e-01  eta: 0:14:12  time: 0.2581  data_time: 0.0044  memory: 5335  grad_norm: 0.6093  loss: 0.4916  loss_cls: 0.3163  loss_bbox: 0.1753
2025/05/12 17:08:20 - mmengine - INFO - Epoch(train) [25][250/563]  base_lr: 1.5759e-01 lr: 1.5759e-01  eta: 0:13:58  time: 0.2617  data_time: 0.0042  memory: 5252  grad_norm: 0.5067  loss: 0.4452  loss_cls: 0.2866  loss_bbox: 0.1586
2025/05/12 17:08:33 - mmengine - INFO - Epoch(train) [25][300/563]  base_lr: 1.5757e-01 lr: 1.5757e-01  eta: 0:13:45  time: 0.2615  data_time: 0.0043  memory: 5361  grad_norm: 0.6395  loss: 0.4898  loss_cls: 0.3231  loss_bbox: 0.1667
2025/05/12 17:08:46 - mmengine - INFO - Epoch(train) [25][350/563]  base_lr: 1.5755e-01 lr: 1.5755e-01  eta: 0:13:31  time: 0.2617  data_time: 0.0042  memory: 5335  grad_norm: 0.5807  loss: 0.4717  loss_cls: 0.2998  loss_bbox: 0.1719
2025/05/12 17:08:59 - mmengine - INFO - Epoch(train) [25][400/563]  base_lr: 1.5753e-01 lr: 1.5753e-01  eta: 0:13:18  time: 0.2592  data_time: 0.0042  memory: 5443  grad_norm: 0.6947  loss: 0.5079  loss_cls: 0.3196  loss_bbox: 0.1883
2025/05/12 17:09:12 - mmengine - INFO - Epoch(train) [25][450/563]  base_lr: 1.5751e-01 lr: 1.5751e-01  eta: 0:13:04  time: 0.2613  data_time: 0.0042  memory: 5476  grad_norm: 0.6769  loss: 0.5039  loss_cls: 0.3283  loss_bbox: 0.1757
2025/05/12 17:09:22 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:09:25 - mmengine - INFO - Epoch(train) [25][500/563]  base_lr: 1.5749e-01 lr: 1.5749e-01  eta: 0:12:51  time: 0.2596  data_time: 0.0043  memory: 5335  grad_norm: 0.6103  loss: 0.4925  loss_cls: 0.3232  loss_bbox: 0.1693
2025/05/12 17:09:38 - mmengine - INFO - Epoch(train) [25][550/563]  base_lr: 1.5748e-01 lr: 1.5748e-01  eta: 0:12:37  time: 0.2640  data_time: 0.0043  memory: 5386  grad_norm: 0.6130  loss: 0.5208  loss_cls: 0.3383  loss_bbox: 0.1825
2025/05/12 17:09:42 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:09:45 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:09:47 - mmengine - INFO - bbox_mAP_copypaste: 0.402 0.703 0.440 -1.000 0.281 0.425
2025/05/12 17:09:47 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.4020  coco/bbox_mAP_50: 0.7030  coco/bbox_mAP_75: 0.4400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2810  coco/bbox_mAP_l: 0.4250  data_time: 0.0015  time: 0.0735
2025/05/12 17:10:00 - mmengine - INFO - Epoch(train) [26][ 50/563]  base_lr: 1.5745e-01 lr: 1.5745e-01  eta: 0:12:20  time: 0.2597  data_time: 0.0049  memory: 5464  grad_norm: 0.5895  loss: 0.4774  loss_cls: 0.3013  loss_bbox: 0.1761
2025/05/12 17:10:13 - mmengine - INFO - Epoch(train) [26][100/563]  base_lr: 1.5743e-01 lr: 1.5743e-01  eta: 0:12:07  time: 0.2601  data_time: 0.0043  memory: 5443  grad_norm: 0.5333  loss: 0.4596  loss_cls: 0.2973  loss_bbox: 0.1624
2025/05/12 17:10:26 - mmengine - INFO - Epoch(train) [26][150/563]  base_lr: 1.5741e-01 lr: 1.5741e-01  eta: 0:11:53  time: 0.2632  data_time: 0.0042  memory: 5469  grad_norm: 0.6037  loss: 0.4689  loss_cls: 0.3090  loss_bbox: 0.1599
2025/05/12 17:10:39 - mmengine - INFO - Epoch(train) [26][200/563]  base_lr: 1.5740e-01 lr: 1.5740e-01  eta: 0:11:40  time: 0.2612  data_time: 0.0041  memory: 5361  grad_norm: 0.6600  loss: 0.5513  loss_cls: 0.3712  loss_bbox: 0.1801
2025/05/12 17:10:52 - mmengine - INFO - Epoch(train) [26][250/563]  base_lr: 1.5738e-01 lr: 1.5738e-01  eta: 0:11:27  time: 0.2585  data_time: 0.0042  memory: 5412  grad_norm: 0.6114  loss: 0.5017  loss_cls: 0.3333  loss_bbox: 0.1684
2025/05/12 17:11:05 - mmengine - INFO - Epoch(train) [26][300/563]  base_lr: 1.5736e-01 lr: 1.5736e-01  eta: 0:11:13  time: 0.2651  data_time: 0.0042  memory: 5448  grad_norm: 0.5934  loss: 0.4889  loss_cls: 0.3129  loss_bbox: 0.1760
2025/05/12 17:11:18 - mmengine - INFO - Epoch(train) [26][350/563]  base_lr: 1.5734e-01 lr: 1.5734e-01  eta: 0:11:00  time: 0.2578  data_time: 0.0043  memory: 5257  grad_norm: 0.5405  loss: 0.4782  loss_cls: 0.3101  loss_bbox: 0.1680
2025/05/12 17:11:31 - mmengine - INFO - Epoch(train) [26][400/563]  base_lr: 1.5732e-01 lr: 1.5732e-01  eta: 0:10:46  time: 0.2625  data_time: 0.0043  memory: 5330  grad_norm: 0.7117  loss: 0.5374  loss_cls: 0.3404  loss_bbox: 0.1971
2025/05/12 17:11:44 - mmengine - INFO - Epoch(train) [26][450/563]  base_lr: 1.5730e-01 lr: 1.5730e-01  eta: 0:10:33  time: 0.2582  data_time: 0.0043  memory: 5296  grad_norm: 0.6449  loss: 0.5075  loss_cls: 0.3239  loss_bbox: 0.1836
2025/05/12 17:11:57 - mmengine - INFO - Epoch(train) [26][500/563]  base_lr: 1.5728e-01 lr: 1.5728e-01  eta: 0:10:19  time: 0.2638  data_time: 0.0043  memory: 5459  grad_norm: 0.5594  loss: 0.4670  loss_cls: 0.2960  loss_bbox: 0.1710
2025/05/12 17:12:10 - mmengine - INFO - Epoch(train) [26][550/563]  base_lr: 1.5726e-01 lr: 1.5726e-01  eta: 0:10:06  time: 0.2598  data_time: 0.0042  memory: 5335  grad_norm: 0.6433  loss: 0.4869  loss_cls: 0.3151  loss_bbox: 0.1718
2025/05/12 17:12:14 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:12:17 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:12:19 - mmengine - INFO - bbox_mAP_copypaste: 0.392 0.687 0.431 -1.000 0.255 0.415
2025/05/12 17:12:19 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.3920  coco/bbox_mAP_50: 0.6870  coco/bbox_mAP_75: 0.4310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2550  coco/bbox_mAP_l: 0.4150  data_time: 0.0015  time: 0.0748
2025/05/12 17:12:32 - mmengine - INFO - Epoch(train) [27][ 50/563]  base_lr: 1.5724e-01 lr: 1.5724e-01  eta: 0:09:49  time: 0.2629  data_time: 0.0048  memory: 5335  grad_norm: 0.6067  loss: 0.4528  loss_cls: 0.2875  loss_bbox: 0.1653
2025/05/12 17:12:45 - mmengine - INFO - Epoch(train) [27][100/563]  base_lr: 1.5722e-01 lr: 1.5722e-01  eta: 0:09:36  time: 0.2656  data_time: 0.0042  memory: 5283  grad_norm: 0.5719  loss: 0.4996  loss_cls: 0.3180  loss_bbox: 0.1816
2025/05/12 17:12:58 - mmengine - INFO - Epoch(train) [27][150/563]  base_lr: 1.5720e-01 lr: 1.5720e-01  eta: 0:09:22  time: 0.2600  data_time: 0.0042  memory: 5366  grad_norm: 0.6224  loss: 0.4819  loss_cls: 0.3136  loss_bbox: 0.1683
2025/05/12 17:13:12 - mmengine - INFO - Epoch(train) [27][200/563]  base_lr: 1.5718e-01 lr: 1.5718e-01  eta: 0:09:09  time: 0.2656  data_time: 0.0043  memory: 5288  grad_norm: 0.5162  loss: 0.4619  loss_cls: 0.3033  loss_bbox: 0.1586
2025/05/12 17:13:25 - mmengine - INFO - Epoch(train) [27][250/563]  base_lr: 1.5716e-01 lr: 1.5716e-01  eta: 0:08:55  time: 0.2642  data_time: 0.0043  memory: 5299  grad_norm: 0.5970  loss: 0.4454  loss_cls: 0.2969  loss_bbox: 0.1485
2025/05/12 17:13:38 - mmengine - INFO - Epoch(train) [27][300/563]  base_lr: 1.5714e-01 lr: 1.5714e-01  eta: 0:08:42  time: 0.2660  data_time: 0.0042  memory: 5433  grad_norm: 0.7413  loss: 0.5905  loss_cls: 0.3954  loss_bbox: 0.1952
2025/05/12 17:13:51 - mmengine - INFO - Epoch(train) [27][350/563]  base_lr: 1.5712e-01 lr: 1.5712e-01  eta: 0:08:28  time: 0.2616  data_time: 0.0042  memory: 5278  grad_norm: 0.5724  loss: 0.4936  loss_cls: 0.3111  loss_bbox: 0.1825
2025/05/12 17:13:54 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:14:04 - mmengine - INFO - Epoch(train) [27][400/563]  base_lr: 1.5710e-01 lr: 1.5710e-01  eta: 0:08:15  time: 0.2665  data_time: 0.0042  memory: 5433  grad_norm: 0.6481  loss: 0.5212  loss_cls: 0.3197  loss_bbox: 0.2015
2025/05/12 17:14:18 - mmengine - INFO - Epoch(train) [27][450/563]  base_lr: 1.5708e-01 lr: 1.5708e-01  eta: 0:08:02  time: 0.2649  data_time: 0.0042  memory: 5361  grad_norm: 0.5303  loss: 0.4804  loss_cls: 0.3147  loss_bbox: 0.1656
2025/05/12 17:14:31 - mmengine - INFO - Epoch(train) [27][500/563]  base_lr: 1.5706e-01 lr: 1.5706e-01  eta: 0:07:48  time: 0.2625  data_time: 0.0042  memory: 5283  grad_norm: 0.6741  loss: 0.5716  loss_cls: 0.3895  loss_bbox: 0.1821
2025/05/12 17:14:44 - mmengine - INFO - Epoch(train) [27][550/563]  base_lr: 1.5704e-01 lr: 1.5704e-01  eta: 0:07:35  time: 0.2645  data_time: 0.0043  memory: 5350  grad_norm: 0.5560  loss: 0.5080  loss_cls: 0.3359  loss_bbox: 0.1721
2025/05/12 17:14:47 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:14:51 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:14:53 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.692 0.439 -1.000 0.299 0.419
2025/05/12 17:14:53 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.6920  coco/bbox_mAP_75: 0.4390  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2990  coco/bbox_mAP_l: 0.4190  data_time: 0.0016  time: 0.0745
2025/05/12 17:15:06 - mmengine - INFO - Epoch(train) [28][ 50/563]  base_lr: 1.5701e-01 lr: 1.5701e-01  eta: 0:07:18  time: 0.2643  data_time: 0.0050  memory: 5412  grad_norm: 0.6482  loss: 0.4780  loss_cls: 0.3150  loss_bbox: 0.1630
2025/05/12 17:15:19 - mmengine - INFO - Epoch(train) [28][100/563]  base_lr: 1.5699e-01 lr: 1.5699e-01  eta: 0:07:05  time: 0.2658  data_time: 0.0043  memory: 5433  grad_norm: 0.5871  loss: 0.4863  loss_cls: 0.3095  loss_bbox: 0.1768
2025/05/12 17:15:32 - mmengine - INFO - Epoch(train) [28][150/563]  base_lr: 1.5697e-01 lr: 1.5697e-01  eta: 0:06:51  time: 0.2650  data_time: 0.0042  memory: 5459  grad_norm: 0.5342  loss: 0.4710  loss_cls: 0.2997  loss_bbox: 0.1713
2025/05/12 17:15:45 - mmengine - INFO - Epoch(train) [28][200/563]  base_lr: 1.5695e-01 lr: 1.5695e-01  eta: 0:06:38  time: 0.2609  data_time: 0.0042  memory: 5299  grad_norm: 0.5294  loss: 0.4547  loss_cls: 0.2839  loss_bbox: 0.1708
2025/05/12 17:15:59 - mmengine - INFO - Epoch(train) [28][250/563]  base_lr: 1.5693e-01 lr: 1.5693e-01  eta: 0:06:24  time: 0.2619  data_time: 0.0042  memory: 5319  grad_norm: 0.5642  loss: 0.4482  loss_cls: 0.2925  loss_bbox: 0.1557
2025/05/12 17:16:12 - mmengine - INFO - Epoch(train) [28][300/563]  base_lr: 1.5691e-01 lr: 1.5691e-01  eta: 0:06:11  time: 0.2598  data_time: 0.0042  memory: 5314  grad_norm: 0.5869  loss: 0.4611  loss_cls: 0.2889  loss_bbox: 0.1722
2025/05/12 17:16:25 - mmengine - INFO - Epoch(train) [28][350/563]  base_lr: 1.5689e-01 lr: 1.5689e-01  eta: 0:05:58  time: 0.2628  data_time: 0.0042  memory: 5433  grad_norm: 0.5772  loss: 0.4883  loss_cls: 0.3128  loss_bbox: 0.1755
2025/05/12 17:16:38 - mmengine - INFO - Epoch(train) [28][400/563]  base_lr: 1.5687e-01 lr: 1.5687e-01  eta: 0:05:44  time: 0.2600  data_time: 0.0041  memory: 5371  grad_norm: 0.6541  loss: 0.5113  loss_cls: 0.3201  loss_bbox: 0.1911
2025/05/12 17:16:51 - mmengine - INFO - Epoch(train) [28][450/563]  base_lr: 1.5685e-01 lr: 1.5685e-01  eta: 0:05:31  time: 0.2614  data_time: 0.0042  memory: 5288  grad_norm: 0.5392  loss: 0.4562  loss_cls: 0.2911  loss_bbox: 0.1650
2025/05/12 17:17:04 - mmengine - INFO - Epoch(train) [28][500/563]  base_lr: 1.5683e-01 lr: 1.5683e-01  eta: 0:05:17  time: 0.2593  data_time: 0.0042  memory: 5242  grad_norm: 0.5599  loss: 0.4905  loss_cls: 0.3100  loss_bbox: 0.1805
2025/05/12 17:17:17 - mmengine - INFO - Epoch(train) [28][550/563]  base_lr: 1.5681e-01 lr: 1.5681e-01  eta: 0:05:04  time: 0.2599  data_time: 0.0043  memory: 5376  grad_norm: 0.6095  loss: 0.4842  loss_cls: 0.3108  loss_bbox: 0.1733
2025/05/12 17:17:20 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:17:24 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:17:25 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.697 0.437 -1.000 0.290 0.421
2025/05/12 17:17:25 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.6970  coco/bbox_mAP_75: 0.4370  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2900  coco/bbox_mAP_l: 0.4210  data_time: 0.0014  time: 0.0744
2025/05/12 17:17:38 - mmengine - INFO - Epoch(train) [29][ 50/563]  base_lr: 1.5678e-01 lr: 1.5678e-01  eta: 0:04:47  time: 0.2614  data_time: 0.0049  memory: 5371  grad_norm: 0.6116  loss: 0.4709  loss_cls: 0.3021  loss_bbox: 0.1688
2025/05/12 17:17:51 - mmengine - INFO - Epoch(train) [29][100/563]  base_lr: 1.5676e-01 lr: 1.5676e-01  eta: 0:04:34  time: 0.2602  data_time: 0.0044  memory: 5299  grad_norm: 0.5900  loss: 0.4758  loss_cls: 0.3075  loss_bbox: 0.1683
2025/05/12 17:18:05 - mmengine - INFO - Epoch(train) [29][150/563]  base_lr: 1.5674e-01 lr: 1.5674e-01  eta: 0:04:20  time: 0.2620  data_time: 0.0041  memory: 5309  grad_norm: 0.5513  loss: 0.4526  loss_cls: 0.2864  loss_bbox: 0.1663
2025/05/12 17:18:17 - mmengine - INFO - Epoch(train) [29][200/563]  base_lr: 1.5672e-01 lr: 1.5672e-01  eta: 0:04:07  time: 0.2589  data_time: 0.0041  memory: 5340  grad_norm: 0.6033  loss: 0.4656  loss_cls: 0.3055  loss_bbox: 0.1600
2025/05/12 17:18:27 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:18:31 - mmengine - INFO - Epoch(train) [29][250/563]  base_lr: 1.5670e-01 lr: 1.5670e-01  eta: 0:03:54  time: 0.2628  data_time: 0.0043  memory: 5428  grad_norm: 0.6344  loss: 0.4822  loss_cls: 0.3201  loss_bbox: 0.1621
2025/05/12 17:18:44 - mmengine - INFO - Epoch(train) [29][300/563]  base_lr: 1.5668e-01 lr: 1.5668e-01  eta: 0:03:40  time: 0.2608  data_time: 0.0043  memory: 5371  grad_norm: 0.5545  loss: 0.4696  loss_cls: 0.3022  loss_bbox: 0.1673
2025/05/12 17:18:57 - mmengine - INFO - Epoch(train) [29][350/563]  base_lr: 1.5665e-01 lr: 1.5665e-01  eta: 0:03:27  time: 0.2602  data_time: 0.0043  memory: 5433  grad_norm: 0.5700  loss: 0.4832  loss_cls: 0.3139  loss_bbox: 0.1693
2025/05/12 17:19:10 - mmengine - INFO - Epoch(train) [29][400/563]  base_lr: 1.5663e-01 lr: 1.5663e-01  eta: 0:03:13  time: 0.2605  data_time: 0.0043  memory: 5283  grad_norm: 0.5653  loss: 0.4723  loss_cls: 0.3208  loss_bbox: 0.1515
2025/05/12 17:19:23 - mmengine - INFO - Epoch(train) [29][450/563]  base_lr: 1.5661e-01 lr: 1.5661e-01  eta: 0:03:00  time: 0.2603  data_time: 0.0042  memory: 5273  grad_norm: 0.5906  loss: 0.4640  loss_cls: 0.3089  loss_bbox: 0.1551
2025/05/12 17:19:36 - mmengine - INFO - Epoch(train) [29][500/563]  base_lr: 1.5659e-01 lr: 1.5659e-01  eta: 0:02:47  time: 0.2605  data_time: 0.0041  memory: 5356  grad_norm: 0.5677  loss: 0.4711  loss_cls: 0.2931  loss_bbox: 0.1780
2025/05/12 17:19:49 - mmengine - INFO - Epoch(train) [29][550/563]  base_lr: 1.5657e-01 lr: 1.5657e-01  eta: 0:02:33  time: 0.2611  data_time: 0.0042  memory: 5459  grad_norm: 0.5886  loss: 0.4849  loss_cls: 0.3170  loss_bbox: 0.1679
2025/05/12 17:19:52 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:19:56 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:19:57 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.700 0.434 -1.000 0.292 0.421
2025/05/12 17:19:57 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.7000  coco/bbox_mAP_75: 0.4340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2920  coco/bbox_mAP_l: 0.4210  data_time: 0.0015  time: 0.0744
2025/05/12 17:20:10 - mmengine - INFO - Epoch(train) [30][ 50/563]  base_lr: 1.5654e-01 lr: 1.5654e-01  eta: 0:02:17  time: 0.2595  data_time: 0.0049  memory: 5268  grad_norm: 0.5672  loss: 0.4596  loss_cls: 0.3042  loss_bbox: 0.1555
2025/05/12 17:20:23 - mmengine - INFO - Epoch(train) [30][100/563]  base_lr: 1.5652e-01 lr: 1.5652e-01  eta: 0:02:03  time: 0.2606  data_time: 0.0042  memory: 5397  grad_norm: 0.6361  loss: 0.4732  loss_cls: 0.3055  loss_bbox: 0.1676
2025/05/12 17:20:38 - mmengine - INFO - Epoch(train) [30][150/563]  base_lr: 1.5650e-01 lr: 1.5650e-01  eta: 0:01:50  time: 0.3000  data_time: 0.0043  memory: 5309  grad_norm: 0.6443  loss: 0.5122  loss_cls: 0.3416  loss_bbox: 0.1706
2025/05/12 17:20:52 - mmengine - INFO - Epoch(train) [30][200/563]  base_lr: 1.5648e-01 lr: 1.5648e-01  eta: 0:01:36  time: 0.2684  data_time: 0.0043  memory: 5438  grad_norm: 0.6163  loss: 0.4773  loss_cls: 0.3053  loss_bbox: 0.1720
2025/05/12 17:21:05 - mmengine - INFO - Epoch(train) [30][250/563]  base_lr: 1.5645e-01 lr: 1.5645e-01  eta: 0:01:23  time: 0.2643  data_time: 0.0042  memory: 5397  grad_norm: 0.6344  loss: 0.5064  loss_cls: 0.3071  loss_bbox: 0.1993
2025/05/12 17:21:18 - mmengine - INFO - Epoch(train) [30][300/563]  base_lr: 1.5643e-01 lr: 1.5643e-01  eta: 0:01:10  time: 0.2657  data_time: 0.0042  memory: 5433  grad_norm: 0.5803  loss: 0.4769  loss_cls: 0.2948  loss_bbox: 0.1821
2025/05/12 17:21:32 - mmengine - INFO - Epoch(train) [30][350/563]  base_lr: 1.5641e-01 lr: 1.5641e-01  eta: 0:00:56  time: 0.2707  data_time: 0.0043  memory: 5407  grad_norm: 0.6161  loss: 0.4694  loss_cls: 0.3029  loss_bbox: 0.1664
2025/05/12 17:21:46 - mmengine - INFO - Epoch(train) [30][400/563]  base_lr: 1.5639e-01 lr: 1.5639e-01  eta: 0:00:43  time: 0.2821  data_time: 0.0042  memory: 5397  grad_norm: 0.5328  loss: 0.4608  loss_cls: 0.3113  loss_bbox: 0.1496
2025/05/12 17:21:59 - mmengine - INFO - Epoch(train) [30][450/563]  base_lr: 1.5637e-01 lr: 1.5637e-01  eta: 0:00:30  time: 0.2611  data_time: 0.0044  memory: 5428  grad_norm: 0.5375  loss: 0.4528  loss_cls: 0.2925  loss_bbox: 0.1604
2025/05/12 17:22:12 - mmengine - INFO - Epoch(train) [30][500/563]  base_lr: 1.5634e-01 lr: 1.5634e-01  eta: 0:00:16  time: 0.2668  data_time: 0.0042  memory: 5258  grad_norm: 0.5370  loss: 0.4495  loss_cls: 0.2818  loss_bbox: 0.1676
2025/05/12 17:22:26 - mmengine - INFO - Epoch(train) [30][550/563]  base_lr: 1.5632e-01 lr: 1.5632e-01  eta: 0:00:03  time: 0.2644  data_time: 0.0043  memory: 5335  grad_norm: 0.6475  loss: 0.4898  loss_cls: 0.3268  loss_bbox: 0.1630
2025/05/12 17:22:29 - mmengine - INFO - Exp name: efficientdet_fs_bal_aff_20250512_160406
2025/05/12 17:22:29 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/12 17:22:34 - mmengine - INFO - Evaluating bbox...
2025/05/12 17:22:36 - mmengine - INFO - bbox_mAP_copypaste: 0.395 0.697 0.427 -1.000 0.260 0.419
2025/05/12 17:22:36 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.3950  coco/bbox_mAP_50: 0.6970  coco/bbox_mAP_75: 0.4270  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2600  coco/bbox_mAP_l: 0.4190  data_time: 0.0015  time: 0.0783
