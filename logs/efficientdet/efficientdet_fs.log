2025/05/10 21:44:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 237319037
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 237319037
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/10 21:44:34 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=128, enable=False)
backend_args = None
batch_augments = [
    dict(size=(
        896,
        896,
    ), type='BatchFixedSizePad'),
]
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=49,
        type='EMAHook',
        update_buffers=True),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'projects.EfficientDet.efficientdet',
    ])
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet',
        interval=0,
        save_best='coco/bbox_mAP',
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet', type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evalute_type = 'CocoMetric'
image_size = 896
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet', by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 300
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        arch='b3',
        conv_cfg=dict(type='Conv2dSamePadding'),
        drop_path_rate=0.3,
        frozen_stages=0,
        init_cfg=dict(
            checkpoint=
            'D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth',
            prefix='backbone',
            type='Pretrained'),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        norm_eval=False,
        out_indices=(
            3,
            4,
            5,
        ),
        type='EfficientNet'),
    bbox_head=dict(
        anchor_generator=dict(
            center_offset=0.5,
            octave_base_scale=4,
            ratios=[
                1.0,
                0.5,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=160,
        in_channels=160,
        loss_bbox=dict(beta=0.1, loss_weight=50, type='HuberLoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=1.5,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_classes=4,
        num_ins=5,
        stacked_convs=4,
        type='EfficientDetSepBNHead'),
    data_preprocessor=dict(
        batch_augments=[
            dict(size=(
                896,
                896,
            ), type='BatchFixedSizePad'),
        ],
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=896,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            48,
            136,
            384,
        ],
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_stages=6,
        out_channels=160,
        start_level=0,
        type='BiFPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(
            iou_threshold=0.3,
            method='gaussian',
            min_score=0.001,
            sigma=0.5,
            type='soft_nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            ignore_iof_thr=-1,
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler')),
    type='EfficientDet')
norm_cfg = dict(eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    _scope_='mmdet',
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.16, momentum=0.9, type='SGD', weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=917, start_factor=0.1, type='LinearLR'),
    dict(
        T_max=299,
        begin=1,
        by_epoch=True,
        convert_to_iter_based=True,
        end=300,
        eta_min=0.0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(_scope_='mmdet', type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(
    _scope_='mmdet', max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(_scope_='mmdet', type='AspectRatioBatchSampler'),
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(_scope_='mmdet', type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    _scope_='mmdet',
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '25-05-09/efficientdet'

2025/05/10 21:44:35 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/10 21:44:35 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.down_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.weight:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.cls_header.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:36 - mmengine - INFO - paramwise_options -- bbox_head.reg_header.pointwise_conv.bias:weight_decay=0.0
2025/05/10 21:44:37 - mmengine - INFO - load backbone in model from: D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth
2025/05/10 21:44:37 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layers.6.bn.running_var, layers.6.bn.running_mean, layers.6.bn.weight, layers.6.bn.bias, layers.6.conv.weight

Name of parameter - Initialization information

backbone.layers.0.conv.weight - torch.Size([40, 3, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.bias - torch.Size([10]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.conv.weight - torch.Size([24, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.weight - torch.Size([6, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.weight - torch.Size([24, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.weight - torch.Size([6, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.weight - torch.Size([144, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.conv.weight - torch.Size([288, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.conv.weight - torch.Size([96, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.conv.weight - torch.Size([576, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.conv.weight - torch.Size([136, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.conv.weight - torch.Size([232, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.conv.weight - torch.Size([1392, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.conv.weight - torch.Size([384, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.conv.weight - torch.Size([2304, 384, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.conv.weight - torch.Size([2304, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.weight - torch.Size([96, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.weight - torch.Size([2304, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.conv.weight - torch.Size([384, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

neck.bifpn.0.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.weight - torch.Size([160, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  
2025/05/10 21:44:37 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/10 21:44:37 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/10 21:44:37 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\efficientdet.
2025/05/10 21:44:57 - mmengine - INFO - Epoch(train)  [1][ 50/563]  base_lr: 2.3703e-02 lr: 2.3703e-02  eta: 1:50:47  time: 0.3947  data_time: 0.0894  memory: 5391  grad_norm: 3.2978  loss: 1.7170  loss_cls: 1.1126  loss_bbox: 0.6044
2025/05/10 21:45:12 - mmengine - INFO - Epoch(train)  [1][100/563]  base_lr: 3.1563e-02 lr: 3.1563e-02  eta: 1:36:14  time: 0.2931  data_time: 0.0041  memory: 5473  grad_norm: 0.9345  loss: 1.4983  loss_cls: 1.0240  loss_bbox: 0.4744
2025/05/10 21:45:25 - mmengine - INFO - Epoch(train)  [1][150/563]  base_lr: 3.9424e-02 lr: 3.9424e-02  eta: 1:29:08  time: 0.2707  data_time: 0.0040  memory: 5375  grad_norm: 1.3199  loss: 1.2606  loss_cls: 0.8138  loss_bbox: 0.4469
2025/05/10 21:45:39 - mmengine - INFO - Epoch(train)  [1][200/563]  base_lr: 4.7284e-02 lr: 4.7284e-02  eta: 1:26:40  time: 0.2877  data_time: 0.0040  memory: 5463  grad_norm: 1.2269  loss: 1.0014  loss_cls: 0.6555  loss_bbox: 0.3459
2025/05/10 21:45:53 - mmengine - INFO - Epoch(train)  [1][250/563]  base_lr: 5.5144e-02 lr: 5.5144e-02  eta: 1:24:01  time: 0.2687  data_time: 0.0040  memory: 5391  grad_norm: 1.0695  loss: 0.8334  loss_cls: 0.5428  loss_bbox: 0.2906
2025/05/10 21:46:07 - mmengine - INFO - Epoch(train)  [1][300/563]  base_lr: 6.3004e-02 lr: 6.3004e-02  eta: 1:22:27  time: 0.2743  data_time: 0.0041  memory: 5398  grad_norm: 1.1347  loss: 0.8549  loss_cls: 0.5728  loss_bbox: 0.2821
2025/05/10 21:46:22 - mmengine - INFO - Epoch(train)  [1][350/563]  base_lr: 7.0865e-02 lr: 7.0865e-02  eta: 1:22:41  time: 0.3104  data_time: 0.0041  memory: 5468  grad_norm: 1.1550  loss: 0.9018  loss_cls: 0.6334  loss_bbox: 0.2685
2025/05/10 21:46:36 - mmengine - INFO - Epoch(train)  [1][400/563]  base_lr: 7.8725e-02 lr: 7.8725e-02  eta: 1:21:24  time: 0.2701  data_time: 0.0040  memory: 5370  grad_norm: 0.8805  loss: 0.8033  loss_cls: 0.5560  loss_bbox: 0.2473
2025/05/10 21:46:49 - mmengine - INFO - Epoch(train)  [1][450/563]  base_lr: 8.6585e-02 lr: 8.6585e-02  eta: 1:20:19  time: 0.2685  data_time: 0.0040  memory: 5453  grad_norm: 0.9501  loss: 0.7290  loss_cls: 0.4982  loss_bbox: 0.2307
2025/05/10 21:47:04 - mmengine - INFO - Epoch(train)  [1][500/563]  base_lr: 9.4445e-02 lr: 9.4445e-02  eta: 1:20:03  time: 0.2923  data_time: 0.0040  memory: 5442  grad_norm: 1.0856  loss: 0.7858  loss_cls: 0.5445  loss_bbox: 0.2414
2025/05/10 21:47:18 - mmengine - INFO - Epoch(train)  [1][550/563]  base_lr: 1.0231e-01 lr: 1.0231e-01  eta: 1:19:24  time: 0.2768  data_time: 0.0042  memory: 5406  grad_norm: 1.1037  loss: 0.8498  loss_cls: 0.6219  loss_bbox: 0.2279
2025/05/10 21:47:21 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:47:37 - mmengine - INFO - Evaluating bbox...
2025/05/10 21:47:38 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 0.000 0.001
2025/05/10 21:47:38 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0010  data_time: 0.1670  time: 0.3153
2025/05/10 21:47:39 - mmengine - INFO - The best checkpoint with 0.0000 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/10 21:47:53 - mmengine - INFO - Epoch(train)  [2][ 50/563]  base_lr: 1.1221e-01 lr: 1.1221e-01  eta: 1:18:57  time: 0.2895  data_time: 0.0062  memory: 5468  grad_norm: 0.8055  loss: 0.7957  loss_cls: 0.5390  loss_bbox: 0.2567
2025/05/10 21:48:07 - mmengine - INFO - Epoch(train)  [2][100/563]  base_lr: 1.2007e-01 lr: 1.2007e-01  eta: 1:18:33  time: 0.2835  data_time: 0.0056  memory: 5473  grad_norm: 0.6834  loss: 0.7136  loss_cls: 0.5001  loss_bbox: 0.2135
2025/05/10 21:48:20 - mmengine - INFO - Epoch(train)  [2][150/563]  base_lr: 1.2793e-01 lr: 1.2793e-01  eta: 1:17:51  time: 0.2660  data_time: 0.0055  memory: 5308  grad_norm: 0.9921  loss: 0.7588  loss_cls: 0.5160  loss_bbox: 0.2428
2025/05/10 21:48:35 - mmengine - INFO - Epoch(train)  [2][200/563]  base_lr: 1.3579e-01 lr: 1.3579e-01  eta: 1:17:33  time: 0.2862  data_time: 0.0054  memory: 5458  grad_norm: 0.7127  loss: 0.7633  loss_cls: 0.5377  loss_bbox: 0.2256
2025/05/10 21:48:48 - mmengine - INFO - Epoch(train)  [2][250/563]  base_lr: 1.4365e-01 lr: 1.4365e-01  eta: 1:16:59  time: 0.2684  data_time: 0.0054  memory: 5386  grad_norm: 0.6065  loss: 0.6761  loss_cls: 0.4607  loss_bbox: 0.2154
2025/05/10 21:49:03 - mmengine - INFO - Epoch(train)  [2][300/563]  base_lr: 1.5151e-01 lr: 1.5151e-01  eta: 1:16:49  time: 0.2923  data_time: 0.0054  memory: 5375  grad_norm: 0.6942  loss: 0.7107  loss_cls: 0.4964  loss_bbox: 0.2143
2025/05/10 21:49:17 - mmengine - INFO - Epoch(train)  [2][350/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 1:16:24  time: 0.2751  data_time: 0.0056  memory: 5398  grad_norm: 0.6054  loss: 0.6289  loss_cls: 0.4292  loss_bbox: 0.1997
2025/05/10 21:49:30 - mmengine - INFO - Epoch(train)  [2][400/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:16:01  time: 0.2764  data_time: 0.0044  memory: 5453  grad_norm: 0.5814  loss: 0.6446  loss_cls: 0.4412  loss_bbox: 0.2034
2025/05/10 21:49:41 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:49:44 - mmengine - INFO - Epoch(train)  [2][450/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:15:39  time: 0.2772  data_time: 0.0044  memory: 5406  grad_norm: 0.6679  loss: 0.6654  loss_cls: 0.4731  loss_bbox: 0.1922
2025/05/10 21:49:59 - mmengine - INFO - Epoch(train)  [2][500/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:15:28  time: 0.2892  data_time: 0.0042  memory: 5453  grad_norm: 0.7250  loss: 0.6963  loss_cls: 0.4808  loss_bbox: 0.2154
2025/05/10 21:50:13 - mmengine - INFO - Epoch(train)  [2][550/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:15:07  time: 0.2777  data_time: 0.0043  memory: 5463  grad_norm: 0.8911  loss: 0.7272  loss_cls: 0.4902  loss_bbox: 0.2370
2025/05/10 21:50:16 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:50:22 - mmengine - INFO - Evaluating bbox...
2025/05/10 21:50:22 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 0.000 0.000
2025/05/10 21:50:22 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.0016  time: 0.1119
2025/05/10 21:50:36 - mmengine - INFO - Epoch(train)  [3][ 50/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:14:43  time: 0.2822  data_time: 0.0050  memory: 5375  grad_norm: 0.5628  loss: 0.6714  loss_cls: 0.4671  loss_bbox: 0.2044
2025/05/10 21:50:50 - mmengine - INFO - Epoch(train)  [3][100/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:14:15  time: 0.2642  data_time: 0.0042  memory: 5287  grad_norm: 0.5829  loss: 0.6452  loss_cls: 0.4382  loss_bbox: 0.2070
2025/05/10 21:51:04 - mmengine - INFO - Epoch(train)  [3][150/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:14:04  time: 0.2900  data_time: 0.0043  memory: 5391  grad_norm: 0.5616  loss: 0.6134  loss_cls: 0.4286  loss_bbox: 0.1848
2025/05/10 21:51:18 - mmengine - INFO - Epoch(train)  [3][200/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:13:46  time: 0.2776  data_time: 0.0045  memory: 5406  grad_norm: 0.6772  loss: 0.7029  loss_cls: 0.4942  loss_bbox: 0.2087
2025/05/10 21:51:31 - mmengine - INFO - Epoch(train)  [3][250/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:13:23  time: 0.2688  data_time: 0.0043  memory: 5398  grad_norm: 0.5680  loss: 0.6664  loss_cls: 0.4517  loss_bbox: 0.2147
2025/05/10 21:51:46 - mmengine - INFO - Epoch(train)  [3][300/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:13:14  time: 0.2932  data_time: 0.0042  memory: 5463  grad_norm: 0.5706  loss: 0.6302  loss_cls: 0.4333  loss_bbox: 0.1969
2025/05/10 21:51:59 - mmengine - INFO - Epoch(train)  [3][350/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:51  time: 0.2680  data_time: 0.0043  memory: 5453  grad_norm: 0.6002  loss: 0.6561  loss_cls: 0.4546  loss_bbox: 0.2015
2025/05/10 21:52:14 - mmengine - INFO - Epoch(train)  [3][400/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:36  time: 0.2827  data_time: 0.0044  memory: 5468  grad_norm: 0.5724  loss: 0.6351  loss_cls: 0.4397  loss_bbox: 0.1954
2025/05/10 21:52:27 - mmengine - INFO - Epoch(train)  [3][450/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:14  time: 0.2665  data_time: 0.0042  memory: 5375  grad_norm: 0.5286  loss: 0.6094  loss_cls: 0.4237  loss_bbox: 0.1857
2025/05/10 21:52:41 - mmengine - INFO - Epoch(train)  [3][500/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:11:55  time: 0.2728  data_time: 0.0044  memory: 5329  grad_norm: 0.5952  loss: 0.5878  loss_cls: 0.3978  loss_bbox: 0.1900
2025/05/10 21:52:54 - mmengine - INFO - Epoch(train)  [3][550/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:11:38  time: 0.2769  data_time: 0.0043  memory: 5473  grad_norm: 0.5375  loss: 0.5700  loss_cls: 0.3935  loss_bbox: 0.1765
2025/05/10 21:52:58 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:53:02 - mmengine - INFO - Evaluating bbox...
2025/05/10 21:53:04 - mmengine - INFO - bbox_mAP_copypaste: 0.108 0.200 0.108 -1.000 0.077 0.113
2025/05/10 21:53:04 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.1080  coco/bbox_mAP_50: 0.2000  coco/bbox_mAP_75: 0.1080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0770  coco/bbox_mAP_l: 0.1130  data_time: 0.0015  time: 0.0919
2025/05/10 21:53:04 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/10 21:53:05 - mmengine - INFO - The best checkpoint with 0.1080 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/10 21:53:19 - mmengine - INFO - Epoch(train)  [4][ 50/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:11:22  time: 0.2900  data_time: 0.0050  memory: 5398  grad_norm: 0.5645  loss: 0.5882  loss_cls: 0.4217  loss_bbox: 0.1664
2025/05/10 21:53:33 - mmengine - INFO - Epoch(train)  [4][100/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:11:02  time: 0.2668  data_time: 0.0043  memory: 5391  grad_norm: 0.5905  loss: 0.5677  loss_cls: 0.4010  loss_bbox: 0.1667
2025/05/10 21:53:48 - mmengine - INFO - Epoch(train)  [4][150/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:10:58  time: 0.3073  data_time: 0.0043  memory: 5458  grad_norm: 0.4927  loss: 0.5686  loss_cls: 0.3988  loss_bbox: 0.1698
2025/05/10 21:54:01 - mmengine - INFO - Epoch(train)  [4][200/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:10:36  time: 0.2642  data_time: 0.0043  memory: 5473  grad_norm: 0.5729  loss: 0.5515  loss_cls: 0.3835  loss_bbox: 0.1680
2025/05/10 21:54:15 - mmengine - INFO - Epoch(train)  [4][250/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:10:22  time: 0.2820  data_time: 0.0044  memory: 5453  grad_norm: 0.5641  loss: 0.5646  loss_cls: 0.3902  loss_bbox: 0.1745
2025/05/10 21:54:28 - mmengine - INFO - Epoch(train)  [4][300/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:10:00  time: 0.2630  data_time: 0.0045  memory: 5453  grad_norm: 0.5323  loss: 0.5617  loss_cls: 0.3977  loss_bbox: 0.1640
2025/05/10 21:54:32 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:54:42 - mmengine - INFO - Epoch(train)  [4][350/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:09:45  time: 0.2773  data_time: 0.0044  memory: 5442  grad_norm: 0.4881  loss: 0.5459  loss_cls: 0.3821  loss_bbox: 0.1637
2025/05/10 21:54:56 - mmengine - INFO - Epoch(train)  [4][400/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:09:26  time: 0.2698  data_time: 0.0043  memory: 5329  grad_norm: 0.5648  loss: 0.5601  loss_cls: 0.3934  loss_bbox: 0.1667
2025/05/10 21:55:11 - mmengine - INFO - Epoch(train)  [4][450/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:09:20  time: 0.3036  data_time: 0.0044  memory: 5468  grad_norm: 0.5157  loss: 0.5389  loss_cls: 0.3781  loss_bbox: 0.1608
2025/05/10 21:55:24 - mmengine - INFO - Epoch(train)  [4][500/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:09:00  time: 0.2646  data_time: 0.0043  memory: 5391  grad_norm: 0.4947  loss: 0.5064  loss_cls: 0.3528  loss_bbox: 0.1536
2025/05/10 21:55:38 - mmengine - INFO - Epoch(train)  [4][550/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:08:42  time: 0.2708  data_time: 0.0043  memory: 5463  grad_norm: 0.6106  loss: 0.5560  loss_cls: 0.3891  loss_bbox: 0.1669
2025/05/10 21:55:41 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:55:46 - mmengine - INFO - Evaluating bbox...
2025/05/10 21:55:47 - mmengine - INFO - bbox_mAP_copypaste: 0.144 0.257 0.148 -1.000 0.133 0.149
2025/05/10 21:55:47 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.1440  coco/bbox_mAP_50: 0.2570  coco/bbox_mAP_75: 0.1480  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1330  coco/bbox_mAP_l: 0.1490  data_time: 0.0016  time: 0.0874
2025/05/10 21:55:47 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/10 21:55:48 - mmengine - INFO - The best checkpoint with 0.1440 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/10 21:56:03 - mmengine - INFO - Epoch(train)  [5][ 50/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:08:29  time: 0.2992  data_time: 0.0049  memory: 5453  grad_norm: 0.5453  loss: 0.5432  loss_cls: 0.3860  loss_bbox: 0.1573
2025/05/10 21:56:17 - mmengine - INFO - Epoch(train)  [5][100/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:08:14  time: 0.2784  data_time: 0.0045  memory: 5391  grad_norm: 0.4878  loss: 0.5109  loss_cls: 0.3642  loss_bbox: 0.1467
2025/05/10 21:56:30 - mmengine - INFO - Epoch(train)  [5][150/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:07:54  time: 0.2639  data_time: 0.0043  memory: 5442  grad_norm: 0.5166  loss: 0.5159  loss_cls: 0.3734  loss_bbox: 0.1425
2025/05/10 21:56:43 - mmengine - INFO - Epoch(train)  [5][200/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:07:37  time: 0.2702  data_time: 0.0042  memory: 5458  grad_norm: 0.4693  loss: 0.4808  loss_cls: 0.3379  loss_bbox: 0.1429
2025/05/10 21:56:57 - mmengine - INFO - Epoch(train)  [5][250/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:07:23  time: 0.2796  data_time: 0.0043  memory: 5473  grad_norm: 0.5577  loss: 0.5344  loss_cls: 0.3821  loss_bbox: 0.1523
2025/05/10 21:57:12 - mmengine - INFO - Epoch(train)  [5][300/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:07:14  time: 0.2996  data_time: 0.0045  memory: 5398  grad_norm: 0.5010  loss: 0.5116  loss_cls: 0.3606  loss_bbox: 0.1510
2025/05/10 21:57:26 - mmengine - INFO - Epoch(train)  [5][350/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:07:01  time: 0.2849  data_time: 0.0049  memory: 5370  grad_norm: 0.4949  loss: 0.4821  loss_cls: 0.3367  loss_bbox: 0.1455
2025/05/10 21:57:40 - mmengine - INFO - Epoch(train)  [5][400/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:06:43  time: 0.2693  data_time: 0.0045  memory: 5453  grad_norm: 0.5144  loss: 0.5001  loss_cls: 0.3508  loss_bbox: 0.1494
2025/05/10 21:57:54 - mmengine - INFO - Epoch(train)  [5][450/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:06:28  time: 0.2768  data_time: 0.0044  memory: 5303  grad_norm: 0.5399  loss: 0.5051  loss_cls: 0.3616  loss_bbox: 0.1435
2025/05/10 21:58:07 - mmengine - INFO - Epoch(train)  [5][500/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:06:12  time: 0.2714  data_time: 0.0043  memory: 5422  grad_norm: 0.5689  loss: 0.5223  loss_cls: 0.3711  loss_bbox: 0.1512
2025/05/10 21:58:21 - mmengine - INFO - Epoch(train)  [5][550/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:05:54  time: 0.2671  data_time: 0.0043  memory: 5468  grad_norm: 0.5341  loss: 0.5293  loss_cls: 0.3606  loss_bbox: 0.1687
2025/05/10 21:58:24 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:58:28 - mmengine - INFO - Evaluating bbox...
2025/05/10 21:58:30 - mmengine - INFO - bbox_mAP_copypaste: 0.340 0.569 0.380 -1.000 0.239 0.362
2025/05/10 21:58:30 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.3400  coco/bbox_mAP_50: 0.5690  coco/bbox_mAP_75: 0.3800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2390  coco/bbox_mAP_l: 0.3620  data_time: 0.0016  time: 0.0789
2025/05/10 21:58:30 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/10 21:58:30 - mmengine - INFO - The best checkpoint with 0.3400 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/10 21:58:44 - mmengine - INFO - Epoch(train)  [6][ 50/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:05:33  time: 0.2709  data_time: 0.0051  memory: 5463  grad_norm: 0.5591  loss: 0.4944  loss_cls: 0.3597  loss_bbox: 0.1346
2025/05/10 21:58:57 - mmengine - INFO - Epoch(train)  [6][100/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:05:17  time: 0.2709  data_time: 0.0042  memory: 5442  grad_norm: 0.5060  loss: 0.4751  loss_cls: 0.3373  loss_bbox: 0.1377
2025/05/10 21:59:13 - mmengine - INFO - Epoch(train)  [6][150/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:05:08  time: 0.3006  data_time: 0.0044  memory: 5453  grad_norm: 0.5149  loss: 0.4750  loss_cls: 0.3433  loss_bbox: 0.1318
2025/05/10 21:59:22 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 21:59:26 - mmengine - INFO - Epoch(train)  [6][200/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:04:50  time: 0.2652  data_time: 0.0044  memory: 5334  grad_norm: 0.5117  loss: 0.4650  loss_cls: 0.3260  loss_bbox: 0.1390
2025/05/10 21:59:39 - mmengine - INFO - Epoch(train)  [6][250/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:04:33  time: 0.2681  data_time: 0.0044  memory: 5398  grad_norm: 0.5542  loss: 0.4733  loss_cls: 0.3254  loss_bbox: 0.1479
2025/05/10 21:59:52 - mmengine - INFO - Epoch(train)  [6][300/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:04:15  time: 0.2620  data_time: 0.0043  memory: 5391  grad_norm: 0.5114  loss: 0.4813  loss_cls: 0.3419  loss_bbox: 0.1394
2025/05/10 22:00:08 - mmengine - INFO - Epoch(train)  [6][350/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:04:07  time: 0.3074  data_time: 0.0043  memory: 5463  grad_norm: 0.5506  loss: 0.4904  loss_cls: 0.3374  loss_bbox: 0.1531
2025/05/10 22:00:21 - mmengine - INFO - Epoch(train)  [6][400/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:03:51  time: 0.2712  data_time: 0.0044  memory: 5473  grad_norm: 0.4829  loss: 0.4549  loss_cls: 0.3127  loss_bbox: 0.1422
2025/05/10 22:00:35 - mmengine - INFO - Epoch(train)  [6][450/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:03:34  time: 0.2661  data_time: 0.0044  memory: 5468  grad_norm: 0.6031  loss: 0.5033  loss_cls: 0.3456  loss_bbox: 0.1577
2025/05/10 22:00:48 - mmengine - INFO - Epoch(train)  [6][500/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:03:17  time: 0.2645  data_time: 0.0044  memory: 5398  grad_norm: 0.5607  loss: 0.4629  loss_cls: 0.3245  loss_bbox: 0.1384
2025/05/10 22:01:03 - mmengine - INFO - Epoch(train)  [6][550/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:03:09  time: 0.3095  data_time: 0.0042  memory: 5422  grad_norm: 0.6091  loss: 0.4864  loss_cls: 0.3395  loss_bbox: 0.1469
2025/05/10 22:01:08 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:01:12 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:01:13 - mmengine - INFO - bbox_mAP_copypaste: 0.327 0.552 0.368 -1.000 0.214 0.353
2025/05/10 22:01:13 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.3270  coco/bbox_mAP_50: 0.5520  coco/bbox_mAP_75: 0.3680  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2140  coco/bbox_mAP_l: 0.3530  data_time: 0.0017  time: 0.0795
2025/05/10 22:01:26 - mmengine - INFO - Epoch(train)  [7][ 50/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:02:51  time: 0.2634  data_time: 0.0048  memory: 5453  grad_norm: 0.5339  loss: 0.4491  loss_cls: 0.3092  loss_bbox: 0.1399
2025/05/10 22:01:41 - mmengine - INFO - Epoch(train)  [7][100/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:02:40  time: 0.2933  data_time: 0.0044  memory: 5473  grad_norm: 0.5065  loss: 0.4317  loss_cls: 0.3044  loss_bbox: 0.1273
2025/05/10 22:01:54 - mmengine - INFO - Epoch(train)  [7][150/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:02:23  time: 0.2639  data_time: 0.0042  memory: 5391  grad_norm: 0.5572  loss: 0.4458  loss_cls: 0.3118  loss_bbox: 0.1340
2025/05/10 22:02:08 - mmengine - INFO - Epoch(train)  [7][200/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 1:02:09  time: 0.2815  data_time: 0.0042  memory: 5463  grad_norm: 0.5949  loss: 0.4606  loss_cls: 0.3302  loss_bbox: 0.1304
2025/05/10 22:02:22 - mmengine - INFO - Epoch(train)  [7][250/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 1:01:53  time: 0.2681  data_time: 0.0044  memory: 5391  grad_norm: 0.5606  loss: 0.4498  loss_cls: 0.3105  loss_bbox: 0.1393
2025/05/10 22:02:35 - mmengine - INFO - Epoch(train)  [7][300/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:01:37  time: 0.2695  data_time: 0.0041  memory: 5468  grad_norm: 0.5748  loss: 0.4423  loss_cls: 0.3085  loss_bbox: 0.1338
2025/05/10 22:02:48 - mmengine - INFO - Epoch(train)  [7][350/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:01:20  time: 0.2644  data_time: 0.0043  memory: 5453  grad_norm: 0.5453  loss: 0.4501  loss_cls: 0.3130  loss_bbox: 0.1371
2025/05/10 22:03:02 - mmengine - INFO - Epoch(train)  [7][400/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:01:04  time: 0.2708  data_time: 0.0043  memory: 5398  grad_norm: 0.5179  loss: 0.4527  loss_cls: 0.3226  loss_bbox: 0.1301
2025/05/10 22:03:16 - mmengine - INFO - Epoch(train)  [7][450/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 1:00:50  time: 0.2757  data_time: 0.0044  memory: 5442  grad_norm: 0.5299  loss: 0.4677  loss_cls: 0.3335  loss_bbox: 0.1342
2025/05/10 22:03:29 - mmengine - INFO - Epoch(train)  [7][500/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 1:00:34  time: 0.2710  data_time: 0.0043  memory: 5406  grad_norm: 0.4980  loss: 0.4363  loss_cls: 0.3090  loss_bbox: 0.1273
2025/05/10 22:03:44 - mmengine - INFO - Epoch(train)  [7][550/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 1:00:22  time: 0.2915  data_time: 0.0042  memory: 5287  grad_norm: 0.5749  loss: 0.4443  loss_cls: 0.3105  loss_bbox: 0.1337
2025/05/10 22:03:47 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:03:51 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:03:53 - mmengine - INFO - bbox_mAP_copypaste: 0.364 0.591 0.419 -1.000 0.246 0.387
2025/05/10 22:03:53 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.3640  coco/bbox_mAP_50: 0.5910  coco/bbox_mAP_75: 0.4190  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2460  coco/bbox_mAP_l: 0.3870  data_time: 0.0016  time: 0.0772
2025/05/10 22:03:53 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/10 22:03:53 - mmengine - INFO - The best checkpoint with 0.3640 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/10 22:04:08 - mmengine - INFO - Epoch(train)  [8][ 50/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 1:00:08  time: 0.2982  data_time: 0.0052  memory: 5458  grad_norm: 0.5193  loss: 0.4088  loss_cls: 0.2880  loss_bbox: 0.1209
2025/05/10 22:04:11 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:04:23 - mmengine - INFO - Epoch(train)  [8][100/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:59:54  time: 0.2827  data_time: 0.0044  memory: 5391  grad_norm: 0.6020  loss: 0.4279  loss_cls: 0.3018  loss_bbox: 0.1261
2025/05/10 22:04:37 - mmengine - INFO - Epoch(train)  [8][150/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:59:41  time: 0.2842  data_time: 0.0044  memory: 5398  grad_norm: 0.5783  loss: 0.4348  loss_cls: 0.3045  loss_bbox: 0.1303
2025/05/10 22:04:50 - mmengine - INFO - Epoch(train)  [8][200/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:59:25  time: 0.2659  data_time: 0.0044  memory: 5473  grad_norm: 0.5927  loss: 0.4288  loss_cls: 0.3037  loss_bbox: 0.1252
2025/05/10 22:05:04 - mmengine - INFO - Epoch(train)  [8][250/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:59:10  time: 0.2747  data_time: 0.0045  memory: 5406  grad_norm: 0.5066  loss: 0.4062  loss_cls: 0.2865  loss_bbox: 0.1197
2025/05/10 22:05:18 - mmengine - INFO - Epoch(train)  [8][300/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:58:56  time: 0.2784  data_time: 0.0043  memory: 5375  grad_norm: 0.5123  loss: 0.4158  loss_cls: 0.2967  loss_bbox: 0.1192
2025/05/10 22:05:31 - mmengine - INFO - Epoch(train)  [8][350/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:58:40  time: 0.2693  data_time: 0.0043  memory: 5391  grad_norm: 0.5210  loss: 0.4138  loss_cls: 0.2972  loss_bbox: 0.1167
2025/05/10 22:05:45 - mmengine - INFO - Epoch(train)  [8][400/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:58:27  time: 0.2810  data_time: 0.0044  memory: 5463  grad_norm: 0.5763  loss: 0.4479  loss_cls: 0.3156  loss_bbox: 0.1323
2025/05/10 22:05:59 - mmengine - INFO - Epoch(train)  [8][450/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:58:11  time: 0.2680  data_time: 0.0044  memory: 5398  grad_norm: 0.5633  loss: 0.4256  loss_cls: 0.2946  loss_bbox: 0.1310
2025/05/10 22:06:12 - mmengine - INFO - Epoch(train)  [8][500/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:57:56  time: 0.2751  data_time: 0.0045  memory: 5308  grad_norm: 0.5294  loss: 0.4395  loss_cls: 0.3134  loss_bbox: 0.1261
2025/05/10 22:06:26 - mmengine - INFO - Epoch(train)  [8][550/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:57:42  time: 0.2781  data_time: 0.0044  memory: 5453  grad_norm: 0.5624  loss: 0.4287  loss_cls: 0.3061  loss_bbox: 0.1227
2025/05/10 22:06:30 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:06:34 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:06:35 - mmengine - INFO - bbox_mAP_copypaste: 0.349 0.575 0.399 -1.000 0.265 0.369
2025/05/10 22:06:35 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.3490  coco/bbox_mAP_50: 0.5750  coco/bbox_mAP_75: 0.3990  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2650  coco/bbox_mAP_l: 0.3690  data_time: 0.0016  time: 0.0803
2025/05/10 22:06:49 - mmengine - INFO - Epoch(train)  [9][ 50/563]  base_lr: 1.5978e-01 lr: 1.5978e-01  eta: 0:57:23  time: 0.2706  data_time: 0.0050  memory: 5468  grad_norm: 0.5445  loss: 0.3972  loss_cls: 0.2753  loss_bbox: 0.1219
2025/05/10 22:07:02 - mmengine - INFO - Epoch(train)  [9][100/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:57:08  time: 0.2706  data_time: 0.0044  memory: 5398  grad_norm: 0.5667  loss: 0.3954  loss_cls: 0.2833  loss_bbox: 0.1121
2025/05/10 22:07:16 - mmengine - INFO - Epoch(train)  [9][150/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:56:52  time: 0.2667  data_time: 0.0044  memory: 5453  grad_norm: 0.5613  loss: 0.4144  loss_cls: 0.2949  loss_bbox: 0.1195
2025/05/10 22:07:29 - mmengine - INFO - Epoch(train)  [9][200/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:56:38  time: 0.2745  data_time: 0.0043  memory: 5391  grad_norm: 0.5794  loss: 0.4042  loss_cls: 0.2834  loss_bbox: 0.1208
2025/05/10 22:07:43 - mmengine - INFO - Epoch(train)  [9][250/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:56:22  time: 0.2678  data_time: 0.0044  memory: 5453  grad_norm: 0.5818  loss: 0.4107  loss_cls: 0.2939  loss_bbox: 0.1168
2025/05/10 22:07:56 - mmengine - INFO - Epoch(train)  [9][300/563]  base_lr: 1.5975e-01 lr: 1.5975e-01  eta: 0:56:06  time: 0.2638  data_time: 0.0042  memory: 5422  grad_norm: 0.5706  loss: 0.4033  loss_cls: 0.2830  loss_bbox: 0.1202
2025/05/10 22:08:09 - mmengine - INFO - Epoch(train)  [9][350/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:55:51  time: 0.2662  data_time: 0.0044  memory: 5246  grad_norm: 0.5599  loss: 0.4123  loss_cls: 0.2895  loss_bbox: 0.1228
2025/05/10 22:08:23 - mmengine - INFO - Epoch(train)  [9][400/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:55:36  time: 0.2704  data_time: 0.0043  memory: 5473  grad_norm: 0.5240  loss: 0.4011  loss_cls: 0.2835  loss_bbox: 0.1176
2025/05/10 22:08:37 - mmengine - INFO - Epoch(train)  [9][450/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:55:24  time: 0.2956  data_time: 0.0044  memory: 5458  grad_norm: 0.5458  loss: 0.4165  loss_cls: 0.2955  loss_bbox: 0.1210
2025/05/10 22:08:50 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:08:51 - mmengine - INFO - Epoch(train)  [9][500/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:55:09  time: 0.2704  data_time: 0.0043  memory: 5463  grad_norm: 0.5350  loss: 0.3911  loss_cls: 0.2789  loss_bbox: 0.1122
2025/05/10 22:09:04 - mmengine - INFO - Epoch(train)  [9][550/563]  base_lr: 1.5972e-01 lr: 1.5972e-01  eta: 0:54:54  time: 0.2649  data_time: 0.0043  memory: 5324  grad_norm: 0.6345  loss: 0.4110  loss_cls: 0.2886  loss_bbox: 0.1223
2025/05/10 22:09:08 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:09:12 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:09:14 - mmengine - INFO - bbox_mAP_copypaste: 0.370 0.596 0.420 -1.000 0.273 0.392
2025/05/10 22:09:14 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.3700  coco/bbox_mAP_50: 0.5960  coco/bbox_mAP_75: 0.4200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2730  coco/bbox_mAP_l: 0.3920  data_time: 0.0016  time: 0.0777
2025/05/10 22:09:14 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/10 22:09:14 - mmengine - INFO - The best checkpoint with 0.3700 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/10 22:09:31 - mmengine - INFO - Epoch(train) [10][ 50/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:54:45  time: 0.3406  data_time: 0.0050  memory: 5468  grad_norm: 0.5518  loss: 0.3844  loss_cls: 0.2662  loss_bbox: 0.1182
2025/05/10 22:09:45 - mmengine - INFO - Epoch(train) [10][100/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:54:30  time: 0.2700  data_time: 0.0044  memory: 5453  grad_norm: 0.5888  loss: 0.3976  loss_cls: 0.2793  loss_bbox: 0.1183
2025/05/10 22:09:58 - mmengine - INFO - Epoch(train) [10][150/563]  base_lr: 1.5970e-01 lr: 1.5970e-01  eta: 0:54:14  time: 0.2656  data_time: 0.0043  memory: 5262  grad_norm: 0.5734  loss: 0.3682  loss_cls: 0.2627  loss_bbox: 0.1054
2025/05/10 22:10:13 - mmengine - INFO - Epoch(train) [10][200/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:54:02  time: 0.2970  data_time: 0.0045  memory: 5422  grad_norm: 0.5879  loss: 0.3673  loss_cls: 0.2634  loss_bbox: 0.1039
2025/05/10 22:10:26 - mmengine - INFO - Epoch(train) [10][250/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:53:47  time: 0.2673  data_time: 0.0043  memory: 5442  grad_norm: 0.6238  loss: 0.4209  loss_cls: 0.3024  loss_bbox: 0.1186
2025/05/10 22:10:42 - mmengine - INFO - Epoch(train) [10][300/563]  base_lr: 1.5968e-01 lr: 1.5968e-01  eta: 0:53:36  time: 0.3027  data_time: 0.0043  memory: 5391  grad_norm: 0.6051  loss: 0.4093  loss_cls: 0.2916  loss_bbox: 0.1176
2025/05/10 22:10:55 - mmengine - INFO - Epoch(train) [10][350/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:53:21  time: 0.2709  data_time: 0.0044  memory: 5468  grad_norm: 0.5884  loss: 0.4043  loss_cls: 0.2855  loss_bbox: 0.1189
2025/05/10 22:11:09 - mmengine - INFO - Epoch(train) [10][400/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:53:06  time: 0.2702  data_time: 0.0043  memory: 5298  grad_norm: 0.6054  loss: 0.3886  loss_cls: 0.2733  loss_bbox: 0.1153
2025/05/10 22:11:22 - mmengine - INFO - Epoch(train) [10][450/563]  base_lr: 1.5966e-01 lr: 1.5966e-01  eta: 0:52:51  time: 0.2659  data_time: 0.0044  memory: 5391  grad_norm: 0.6188  loss: 0.4015  loss_cls: 0.2792  loss_bbox: 0.1222
2025/05/10 22:11:38 - mmengine - INFO - Epoch(train) [10][500/563]  base_lr: 1.5965e-01 lr: 1.5965e-01  eta: 0:52:41  time: 0.3213  data_time: 0.0044  memory: 5473  grad_norm: 0.5539  loss: 0.4027  loss_cls: 0.2812  loss_bbox: 0.1214
2025/05/10 22:11:51 - mmengine - INFO - Epoch(train) [10][550/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:52:26  time: 0.2672  data_time: 0.0044  memory: 5398  grad_norm: 0.5384  loss: 0.4042  loss_cls: 0.2923  loss_bbox: 0.1119
2025/05/10 22:11:55 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:11:59 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:12:00 - mmengine - INFO - bbox_mAP_copypaste: 0.380 0.609 0.436 -1.000 0.308 0.401
2025/05/10 22:12:00 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.3800  coco/bbox_mAP_50: 0.6090  coco/bbox_mAP_75: 0.4360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3080  coco/bbox_mAP_l: 0.4010  data_time: 0.0016  time: 0.0763
2025/05/10 22:12:00 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/10 22:12:01 - mmengine - INFO - The best checkpoint with 0.3800 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2025/05/10 22:12:16 - mmengine - INFO - Epoch(train) [11][ 50/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:52:10  time: 0.2967  data_time: 0.0052  memory: 5468  grad_norm: 0.6879  loss: 0.3840  loss_cls: 0.2756  loss_bbox: 0.1083
2025/05/10 22:12:29 - mmengine - INFO - Epoch(train) [11][100/563]  base_lr: 1.5963e-01 lr: 1.5963e-01  eta: 0:51:54  time: 0.2622  data_time: 0.0042  memory: 5391  grad_norm: 0.6853  loss: 0.4103  loss_cls: 0.2759  loss_bbox: 0.1343
2025/05/10 22:12:43 - mmengine - INFO - Epoch(train) [11][150/563]  base_lr: 1.5962e-01 lr: 1.5962e-01  eta: 0:51:40  time: 0.2794  data_time: 0.0044  memory: 5458  grad_norm: 0.6501  loss: 0.3958  loss_cls: 0.2817  loss_bbox: 0.1141
2025/05/10 22:12:56 - mmengine - INFO - Epoch(train) [11][200/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:51:25  time: 0.2622  data_time: 0.0044  memory: 5334  grad_norm: 0.5793  loss: 0.3999  loss_cls: 0.2833  loss_bbox: 0.1166
2025/05/10 22:13:10 - mmengine - INFO - Epoch(train) [11][250/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:51:11  time: 0.2887  data_time: 0.0044  memory: 5453  grad_norm: 0.6080  loss: 0.3653  loss_cls: 0.2540  loss_bbox: 0.1113
2025/05/10 22:13:24 - mmengine - INFO - Epoch(train) [11][300/563]  base_lr: 1.5960e-01 lr: 1.5960e-01  eta: 0:50:56  time: 0.2642  data_time: 0.0042  memory: 5453  grad_norm: 0.5534  loss: 0.3834  loss_cls: 0.2662  loss_bbox: 0.1172
2025/05/10 22:13:38 - mmengine - INFO - Epoch(train) [11][350/563]  base_lr: 1.5959e-01 lr: 1.5959e-01  eta: 0:50:43  time: 0.2916  data_time: 0.0043  memory: 5473  grad_norm: 0.8206  loss: 0.4577  loss_cls: 0.3309  loss_bbox: 0.1268
2025/05/10 22:13:44 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:13:52 - mmengine - INFO - Epoch(train) [11][400/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:50:29  time: 0.2765  data_time: 0.0044  memory: 5463  grad_norm: 0.6052  loss: 0.4435  loss_cls: 0.3170  loss_bbox: 0.1265
2025/05/10 22:14:05 - mmengine - INFO - Epoch(train) [11][450/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:50:14  time: 0.2685  data_time: 0.0044  memory: 5442  grad_norm: 0.5412  loss: 0.3823  loss_cls: 0.2679  loss_bbox: 0.1144
2025/05/10 22:14:19 - mmengine - INFO - Epoch(train) [11][500/563]  base_lr: 1.5957e-01 lr: 1.5957e-01  eta: 0:50:00  time: 0.2707  data_time: 0.0044  memory: 5329  grad_norm: 0.5469  loss: 0.3672  loss_cls: 0.2573  loss_bbox: 0.1098
2025/05/10 22:14:32 - mmengine - INFO - Epoch(train) [11][550/563]  base_lr: 1.5956e-01 lr: 1.5956e-01  eta: 0:49:45  time: 0.2690  data_time: 0.0043  memory: 5391  grad_norm: 0.5580  loss: 0.3734  loss_cls: 0.2640  loss_bbox: 0.1094
2025/05/10 22:14:36 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:14:40 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:14:41 - mmengine - INFO - bbox_mAP_copypaste: 0.382 0.615 0.440 -1.000 0.313 0.406
2025/05/10 22:14:41 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.3820  coco/bbox_mAP_50: 0.6150  coco/bbox_mAP_75: 0.4400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3130  coco/bbox_mAP_l: 0.4060  data_time: 0.0016  time: 0.0820
2025/05/10 22:14:41 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_10.pth is removed
2025/05/10 22:14:42 - mmengine - INFO - The best checkpoint with 0.3820 coco/bbox_mAP at 11 epoch is saved to best_coco_bbox_mAP_epoch_11.pth.
2025/05/10 22:14:57 - mmengine - INFO - Epoch(train) [12][ 50/563]  base_lr: 1.5955e-01 lr: 1.5955e-01  eta: 0:49:29  time: 0.3038  data_time: 0.0050  memory: 5458  grad_norm: 0.5504  loss: 0.3431  loss_cls: 0.2412  loss_bbox: 0.1019
2025/05/10 22:15:11 - mmengine - INFO - Epoch(train) [12][100/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:49:15  time: 0.2797  data_time: 0.0045  memory: 5391  grad_norm: 0.5936  loss: 0.3162  loss_cls: 0.2301  loss_bbox: 0.0861
2025/05/10 22:15:25 - mmengine - INFO - Epoch(train) [12][150/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:49:00  time: 0.2646  data_time: 0.0044  memory: 5468  grad_norm: 0.6458  loss: 0.3578  loss_cls: 0.2540  loss_bbox: 0.1038
2025/05/10 22:15:39 - mmengine - INFO - Epoch(train) [12][200/563]  base_lr: 1.5953e-01 lr: 1.5953e-01  eta: 0:48:46  time: 0.2807  data_time: 0.0043  memory: 5453  grad_norm: 0.6150  loss: 0.3649  loss_cls: 0.2640  loss_bbox: 0.1009
2025/05/10 22:15:53 - mmengine - INFO - Epoch(train) [12][250/563]  base_lr: 1.5952e-01 lr: 1.5952e-01  eta: 0:48:33  time: 0.2800  data_time: 0.0043  memory: 5442  grad_norm: 0.5498  loss: 0.3868  loss_cls: 0.2771  loss_bbox: 0.1097
2025/05/10 22:16:06 - mmengine - INFO - Epoch(train) [12][300/563]  base_lr: 1.5951e-01 lr: 1.5951e-01  eta: 0:48:18  time: 0.2745  data_time: 0.0044  memory: 5398  grad_norm: 0.6233  loss: 0.3486  loss_cls: 0.2487  loss_bbox: 0.0999
2025/05/10 22:16:20 - mmengine - INFO - Epoch(train) [12][350/563]  base_lr: 1.5950e-01 lr: 1.5950e-01  eta: 0:48:04  time: 0.2694  data_time: 0.0045  memory: 5473  grad_norm: 0.5413  loss: 0.3592  loss_cls: 0.2580  loss_bbox: 0.1012
2025/05/10 22:16:33 - mmengine - INFO - Epoch(train) [12][400/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:47:49  time: 0.2676  data_time: 0.0043  memory: 5406  grad_norm: 0.5791  loss: 0.3648  loss_cls: 0.2609  loss_bbox: 0.1039
2025/05/10 22:16:47 - mmengine - INFO - Epoch(train) [12][450/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:47:34  time: 0.2715  data_time: 0.0043  memory: 5463  grad_norm: 0.6445  loss: 0.3854  loss_cls: 0.2753  loss_bbox: 0.1101
2025/05/10 22:17:01 - mmengine - INFO - Epoch(train) [12][500/563]  base_lr: 1.5948e-01 lr: 1.5948e-01  eta: 0:47:21  time: 0.2903  data_time: 0.0045  memory: 5422  grad_norm: 0.5290  loss: 0.3632  loss_cls: 0.2596  loss_bbox: 0.1037
2025/05/10 22:17:15 - mmengine - INFO - Epoch(train) [12][550/563]  base_lr: 1.5947e-01 lr: 1.5947e-01  eta: 0:47:07  time: 0.2734  data_time: 0.0044  memory: 5344  grad_norm: 0.5840  loss: 0.3719  loss_cls: 0.2649  loss_bbox: 0.1070
2025/05/10 22:17:19 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:17:23 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:17:24 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.639 0.449 -1.000 0.314 0.424
2025/05/10 22:17:24 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.6390  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3140  coco/bbox_mAP_l: 0.4240  data_time: 0.0016  time: 0.0773
2025/05/10 22:17:24 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_11.pth is removed
2025/05/10 22:17:25 - mmengine - INFO - The best checkpoint with 0.3960 coco/bbox_mAP at 12 epoch is saved to best_coco_bbox_mAP_epoch_12.pth.
2025/05/10 22:17:39 - mmengine - INFO - Epoch(train) [13][ 50/563]  base_lr: 1.5946e-01 lr: 1.5946e-01  eta: 0:46:50  time: 0.2870  data_time: 0.0049  memory: 5324  grad_norm: 0.6822  loss: 0.4088  loss_cls: 0.3047  loss_bbox: 0.1041
2025/05/10 22:17:53 - mmengine - INFO - Epoch(train) [13][100/563]  base_lr: 1.5945e-01 lr: 1.5945e-01  eta: 0:46:36  time: 0.2735  data_time: 0.0042  memory: 5375  grad_norm: 0.6161  loss: 0.3996  loss_cls: 0.2853  loss_bbox: 0.1143
2025/05/10 22:18:07 - mmengine - INFO - Epoch(train) [13][150/563]  base_lr: 1.5944e-01 lr: 1.5944e-01  eta: 0:46:22  time: 0.2806  data_time: 0.0044  memory: 5463  grad_norm: 0.5714  loss: 0.3349  loss_cls: 0.2378  loss_bbox: 0.0971
2025/05/10 22:18:20 - mmengine - INFO - Epoch(train) [13][200/563]  base_lr: 1.5943e-01 lr: 1.5943e-01  eta: 0:46:07  time: 0.2705  data_time: 0.0044  memory: 5473  grad_norm: 0.6080  loss: 0.3479  loss_cls: 0.2531  loss_bbox: 0.0949
2025/05/10 22:18:32 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:18:34 - mmengine - INFO - Epoch(train) [13][250/563]  base_lr: 1.5942e-01 lr: 1.5942e-01  eta: 0:45:52  time: 0.2624  data_time: 0.0044  memory: 5422  grad_norm: 0.5887  loss: 0.3368  loss_cls: 0.2366  loss_bbox: 0.1002
2025/05/10 22:18:47 - mmengine - INFO - Epoch(train) [13][300/563]  base_lr: 1.5941e-01 lr: 1.5941e-01  eta: 0:45:38  time: 0.2721  data_time: 0.0043  memory: 5406  grad_norm: 0.6218  loss: 0.3728  loss_cls: 0.2659  loss_bbox: 0.1069
2025/05/10 22:19:03 - mmengine - INFO - Epoch(train) [13][350/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:45:26  time: 0.3071  data_time: 0.0042  memory: 5453  grad_norm: 0.6913  loss: 0.3587  loss_cls: 0.2492  loss_bbox: 0.1095
2025/05/10 22:19:17 - mmengine - INFO - Epoch(train) [13][400/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:45:12  time: 0.2799  data_time: 0.0044  memory: 5398  grad_norm: 0.6967  loss: 0.3723  loss_cls: 0.2656  loss_bbox: 0.1067
2025/05/10 22:19:30 - mmengine - INFO - Epoch(train) [13][450/563]  base_lr: 1.5939e-01 lr: 1.5939e-01  eta: 0:44:57  time: 0.2634  data_time: 0.0043  memory: 5334  grad_norm: 0.6086  loss: 0.3723  loss_cls: 0.2677  loss_bbox: 0.1046
2025/05/10 22:19:43 - mmengine - INFO - Epoch(train) [13][500/563]  base_lr: 1.5938e-01 lr: 1.5938e-01  eta: 0:44:43  time: 0.2686  data_time: 0.0043  memory: 5458  grad_norm: 0.6287  loss: 0.3688  loss_cls: 0.2649  loss_bbox: 0.1039
2025/05/10 22:19:57 - mmengine - INFO - Epoch(train) [13][550/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 0:44:28  time: 0.2728  data_time: 0.0043  memory: 5391  grad_norm: 0.6682  loss: 0.3580  loss_cls: 0.2522  loss_bbox: 0.1058
2025/05/10 22:20:00 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:20:05 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:20:07 - mmengine - INFO - bbox_mAP_copypaste: 0.385 0.621 0.441 -1.000 0.318 0.406
2025/05/10 22:20:07 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.3850  coco/bbox_mAP_50: 0.6210  coco/bbox_mAP_75: 0.4410  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3180  coco/bbox_mAP_l: 0.4060  data_time: 0.0016  time: 0.0940
2025/05/10 22:20:20 - mmengine - INFO - Epoch(train) [14][ 50/563]  base_lr: 1.5936e-01 lr: 1.5936e-01  eta: 0:44:10  time: 0.2685  data_time: 0.0050  memory: 5406  grad_norm: 0.5392  loss: 0.3074  loss_cls: 0.2188  loss_bbox: 0.0886
2025/05/10 22:20:33 - mmengine - INFO - Epoch(train) [14][100/563]  base_lr: 1.5935e-01 lr: 1.5935e-01  eta: 0:43:55  time: 0.2676  data_time: 0.0044  memory: 5442  grad_norm: 0.6361  loss: 0.3142  loss_cls: 0.2220  loss_bbox: 0.0922
2025/05/10 22:20:47 - mmengine - INFO - Epoch(train) [14][150/563]  base_lr: 1.5934e-01 lr: 1.5934e-01  eta: 0:43:41  time: 0.2650  data_time: 0.0043  memory: 5375  grad_norm: 0.6272  loss: 0.3271  loss_cls: 0.2387  loss_bbox: 0.0884
2025/05/10 22:21:01 - mmengine - INFO - Epoch(train) [14][200/563]  base_lr: 1.5933e-01 lr: 1.5933e-01  eta: 0:43:28  time: 0.2907  data_time: 0.0044  memory: 5458  grad_norm: 0.6943  loss: 0.3633  loss_cls: 0.2605  loss_bbox: 0.1028
2025/05/10 22:21:15 - mmengine - INFO - Epoch(train) [14][250/563]  base_lr: 1.5932e-01 lr: 1.5932e-01  eta: 0:43:14  time: 0.2796  data_time: 0.0044  memory: 5339  grad_norm: 0.6284  loss: 0.3550  loss_cls: 0.2524  loss_bbox: 0.1026
2025/05/10 22:21:28 - mmengine - INFO - Epoch(train) [14][300/563]  base_lr: 1.5931e-01 lr: 1.5931e-01  eta: 0:42:59  time: 0.2646  data_time: 0.0043  memory: 5398  grad_norm: 0.7569  loss: 0.3669  loss_cls: 0.2709  loss_bbox: 0.0960
2025/05/10 22:21:43 - mmengine - INFO - Epoch(train) [14][350/563]  base_lr: 1.5930e-01 lr: 1.5930e-01  eta: 0:42:45  time: 0.2809  data_time: 0.0045  memory: 5267  grad_norm: 0.6912  loss: 0.3734  loss_cls: 0.2669  loss_bbox: 0.1064
2025/05/10 22:21:56 - mmengine - INFO - Epoch(train) [14][400/563]  base_lr: 1.5929e-01 lr: 1.5929e-01  eta: 0:42:31  time: 0.2689  data_time: 0.0044  memory: 5453  grad_norm: 0.5764  loss: 0.3552  loss_cls: 0.2546  loss_bbox: 0.1005
2025/05/10 22:22:11 - mmengine - INFO - Epoch(train) [14][450/563]  base_lr: 1.5928e-01 lr: 1.5928e-01  eta: 0:42:18  time: 0.2931  data_time: 0.0045  memory: 5422  grad_norm: 0.6211  loss: 0.3474  loss_cls: 0.2476  loss_bbox: 0.0998
2025/05/10 22:22:24 - mmengine - INFO - Epoch(train) [14][500/563]  base_lr: 1.5927e-01 lr: 1.5927e-01  eta: 0:42:03  time: 0.2700  data_time: 0.0044  memory: 5473  grad_norm: 0.5542  loss: 0.3666  loss_cls: 0.2634  loss_bbox: 0.1032
2025/05/10 22:22:37 - mmengine - INFO - Epoch(train) [14][550/563]  base_lr: 1.5926e-01 lr: 1.5926e-01  eta: 0:41:49  time: 0.2667  data_time: 0.0044  memory: 5463  grad_norm: 0.5861  loss: 0.3352  loss_cls: 0.2366  loss_bbox: 0.0986
2025/05/10 22:22:41 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:22:45 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:22:46 - mmengine - INFO - bbox_mAP_copypaste: 0.415 0.665 0.481 -1.000 0.335 0.436
2025/05/10 22:22:46 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.4150  coco/bbox_mAP_50: 0.6650  coco/bbox_mAP_75: 0.4810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3350  coco/bbox_mAP_l: 0.4360  data_time: 0.0016  time: 0.0746
2025/05/10 22:22:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_12.pth is removed
2025/05/10 22:22:47 - mmengine - INFO - The best checkpoint with 0.4150 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/10 22:23:02 - mmengine - INFO - Epoch(train) [15][ 50/563]  base_lr: 1.5924e-01 lr: 1.5924e-01  eta: 0:41:32  time: 0.2916  data_time: 0.0051  memory: 5468  grad_norm: 0.5611  loss: 0.3250  loss_cls: 0.2302  loss_bbox: 0.0948
2025/05/10 22:23:16 - mmengine - INFO - Epoch(train) [15][100/563]  base_lr: 1.5923e-01 lr: 1.5923e-01  eta: 0:41:18  time: 0.2797  data_time: 0.0043  memory: 5442  grad_norm: 0.7219  loss: 0.3105  loss_cls: 0.2235  loss_bbox: 0.0870
2025/05/10 22:23:20 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:23:29 - mmengine - INFO - Epoch(train) [15][150/563]  base_lr: 1.5922e-01 lr: 1.5922e-01  eta: 0:41:04  time: 0.2678  data_time: 0.0043  memory: 5473  grad_norm: 0.6250  loss: 0.3297  loss_cls: 0.2309  loss_bbox: 0.0988
2025/05/10 22:23:43 - mmengine - INFO - Epoch(train) [15][200/563]  base_lr: 1.5921e-01 lr: 1.5921e-01  eta: 0:40:50  time: 0.2875  data_time: 0.0043  memory: 5458  grad_norm: 0.6954  loss: 0.3578  loss_cls: 0.2537  loss_bbox: 0.1041
2025/05/10 22:23:57 - mmengine - INFO - Epoch(train) [15][250/563]  base_lr: 1.5920e-01 lr: 1.5920e-01  eta: 0:40:35  time: 0.2627  data_time: 0.0045  memory: 5277  grad_norm: 0.6912  loss: 0.3229  loss_cls: 0.2373  loss_bbox: 0.0856
2025/05/10 22:24:11 - mmengine - INFO - Epoch(train) [15][300/563]  base_lr: 1.5919e-01 lr: 1.5919e-01  eta: 0:40:22  time: 0.2827  data_time: 0.0045  memory: 5391  grad_norm: 0.6480  loss: 0.3626  loss_cls: 0.2640  loss_bbox: 0.0986
2025/05/10 22:24:24 - mmengine - INFO - Epoch(train) [15][350/563]  base_lr: 1.5918e-01 lr: 1.5918e-01  eta: 0:40:08  time: 0.2724  data_time: 0.0042  memory: 5398  grad_norm: 0.6592  loss: 0.3402  loss_cls: 0.2478  loss_bbox: 0.0924
2025/05/10 22:24:39 - mmengine - INFO - Epoch(train) [15][400/563]  base_lr: 1.5917e-01 lr: 1.5917e-01  eta: 0:39:55  time: 0.2946  data_time: 0.0043  memory: 5468  grad_norm: 0.7657  loss: 0.3983  loss_cls: 0.2962  loss_bbox: 0.1021
2025/05/10 22:24:53 - mmengine - INFO - Epoch(train) [15][450/563]  base_lr: 1.5916e-01 lr: 1.5916e-01  eta: 0:39:40  time: 0.2710  data_time: 0.0044  memory: 5453  grad_norm: 0.6375  loss: 0.3747  loss_cls: 0.2632  loss_bbox: 0.1115
2025/05/10 22:25:06 - mmengine - INFO - Epoch(train) [15][500/563]  base_lr: 1.5915e-01 lr: 1.5915e-01  eta: 0:39:26  time: 0.2630  data_time: 0.0043  memory: 5354  grad_norm: 0.6196  loss: 0.3516  loss_cls: 0.2499  loss_bbox: 0.1017
2025/05/10 22:25:20 - mmengine - INFO - Epoch(train) [15][550/563]  base_lr: 1.5914e-01 lr: 1.5914e-01  eta: 0:39:12  time: 0.2875  data_time: 0.0044  memory: 5463  grad_norm: 0.6180  loss: 0.3632  loss_cls: 0.2512  loss_bbox: 0.1119
2025/05/10 22:25:24 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:25:27 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:25:29 - mmengine - INFO - bbox_mAP_copypaste: 0.408 0.650 0.472 -1.000 0.315 0.433
2025/05/10 22:25:29 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.4080  coco/bbox_mAP_50: 0.6500  coco/bbox_mAP_75: 0.4720  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3150  coco/bbox_mAP_l: 0.4330  data_time: 0.0016  time: 0.0759
2025/05/10 22:25:43 - mmengine - INFO - Epoch(train) [16][ 50/563]  base_lr: 1.5913e-01 lr: 1.5913e-01  eta: 0:38:55  time: 0.2895  data_time: 0.0049  memory: 5308  grad_norm: 0.5537  loss: 0.2922  loss_cls: 0.2080  loss_bbox: 0.0842
2025/05/10 22:25:56 - mmengine - INFO - Epoch(train) [16][100/563]  base_lr: 1.5911e-01 lr: 1.5911e-01  eta: 0:38:40  time: 0.2624  data_time: 0.0043  memory: 5458  grad_norm: 0.6656  loss: 0.2936  loss_cls: 0.2141  loss_bbox: 0.0795
2025/05/10 22:26:10 - mmengine - INFO - Epoch(train) [16][150/563]  base_lr: 1.5910e-01 lr: 1.5910e-01  eta: 0:38:26  time: 0.2780  data_time: 0.0045  memory: 5391  grad_norm: 0.6679  loss: 0.3328  loss_cls: 0.2346  loss_bbox: 0.0983
2025/05/10 22:26:24 - mmengine - INFO - Epoch(train) [16][200/563]  base_lr: 1.5909e-01 lr: 1.5909e-01  eta: 0:38:12  time: 0.2756  data_time: 0.0044  memory: 5398  grad_norm: 0.6889  loss: 0.3583  loss_cls: 0.2506  loss_bbox: 0.1076
2025/05/10 22:26:39 - mmengine - INFO - Epoch(train) [16][250/563]  base_lr: 1.5908e-01 lr: 1.5908e-01  eta: 0:37:59  time: 0.2906  data_time: 0.0044  memory: 5453  grad_norm: 0.6249  loss: 0.3282  loss_cls: 0.2379  loss_bbox: 0.0903
2025/05/10 22:26:52 - mmengine - INFO - Epoch(train) [16][300/563]  base_lr: 1.5907e-01 lr: 1.5907e-01  eta: 0:37:45  time: 0.2648  data_time: 0.0043  memory: 5442  grad_norm: 0.6300  loss: 0.3191  loss_cls: 0.2259  loss_bbox: 0.0933
2025/05/10 22:27:05 - mmengine - INFO - Epoch(train) [16][350/563]  base_lr: 1.5906e-01 lr: 1.5906e-01  eta: 0:37:30  time: 0.2705  data_time: 0.0043  memory: 5473  grad_norm: 0.6606  loss: 0.3246  loss_cls: 0.2354  loss_bbox: 0.0891
2025/05/10 22:27:19 - mmengine - INFO - Epoch(train) [16][400/563]  base_lr: 1.5905e-01 lr: 1.5905e-01  eta: 0:37:16  time: 0.2759  data_time: 0.0043  memory: 5463  grad_norm: 0.6768  loss: 0.3291  loss_cls: 0.2358  loss_bbox: 0.0932
2025/05/10 22:27:33 - mmengine - INFO - Epoch(train) [16][450/563]  base_lr: 1.5904e-01 lr: 1.5904e-01  eta: 0:37:02  time: 0.2715  data_time: 0.0044  memory: 5391  grad_norm: 0.6798  loss: 0.3240  loss_cls: 0.2294  loss_bbox: 0.0946
2025/05/10 22:27:46 - mmengine - INFO - Epoch(train) [16][500/563]  base_lr: 1.5902e-01 lr: 1.5902e-01  eta: 0:36:48  time: 0.2640  data_time: 0.0044  memory: 5468  grad_norm: 0.6696  loss: 0.3371  loss_cls: 0.2384  loss_bbox: 0.0987
2025/05/10 22:27:59 - mmengine - INFO - Epoch(train) [16][550/563]  base_lr: 1.5901e-01 lr: 1.5901e-01  eta: 0:36:33  time: 0.2670  data_time: 0.0043  memory: 5339  grad_norm: 0.6425  loss: 0.3146  loss_cls: 0.2204  loss_bbox: 0.0942
2025/05/10 22:28:01 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:28:03 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:28:07 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:28:08 - mmengine - INFO - bbox_mAP_copypaste: 0.412 0.661 0.479 -1.000 0.313 0.437
2025/05/10 22:28:08 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.4120  coco/bbox_mAP_50: 0.6610  coco/bbox_mAP_75: 0.4790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3130  coco/bbox_mAP_l: 0.4370  data_time: 0.0016  time: 0.0755
2025/05/10 22:28:21 - mmengine - INFO - Epoch(train) [17][ 50/563]  base_lr: 1.5900e-01 lr: 1.5900e-01  eta: 0:36:15  time: 0.2672  data_time: 0.0050  memory: 5329  grad_norm: 0.6470  loss: 0.3031  loss_cls: 0.2180  loss_bbox: 0.0850
2025/05/10 22:28:36 - mmengine - INFO - Epoch(train) [17][100/563]  base_lr: 1.5899e-01 lr: 1.5899e-01  eta: 0:36:02  time: 0.2998  data_time: 0.0043  memory: 5473  grad_norm: 0.7050  loss: 0.3968  loss_cls: 0.3032  loss_bbox: 0.0936
2025/05/10 22:28:50 - mmengine - INFO - Epoch(train) [17][150/563]  base_lr: 1.5897e-01 lr: 1.5897e-01  eta: 0:35:48  time: 0.2654  data_time: 0.0043  memory: 5406  grad_norm: 0.5828  loss: 0.3301  loss_cls: 0.2411  loss_bbox: 0.0890
2025/05/10 22:29:03 - mmengine - INFO - Epoch(train) [17][200/563]  base_lr: 1.5896e-01 lr: 1.5896e-01  eta: 0:35:33  time: 0.2622  data_time: 0.0044  memory: 5375  grad_norm: 0.7083  loss: 0.3287  loss_cls: 0.2354  loss_bbox: 0.0933
2025/05/10 22:29:17 - mmengine - INFO - Epoch(train) [17][250/563]  base_lr: 1.5895e-01 lr: 1.5895e-01  eta: 0:35:19  time: 0.2762  data_time: 0.0045  memory: 5398  grad_norm: 0.6598  loss: 0.3308  loss_cls: 0.2342  loss_bbox: 0.0966
2025/05/10 22:29:31 - mmengine - INFO - Epoch(train) [17][300/563]  base_lr: 1.5894e-01 lr: 1.5894e-01  eta: 0:35:05  time: 0.2808  data_time: 0.0043  memory: 5463  grad_norm: 0.6123  loss: 0.3107  loss_cls: 0.2220  loss_bbox: 0.0887
2025/05/10 22:29:44 - mmengine - INFO - Epoch(train) [17][350/563]  base_lr: 1.5893e-01 lr: 1.5893e-01  eta: 0:34:51  time: 0.2655  data_time: 0.0045  memory: 5334  grad_norm: 0.6377  loss: 0.3026  loss_cls: 0.2127  loss_bbox: 0.0900
2025/05/10 22:29:57 - mmengine - INFO - Epoch(train) [17][400/563]  base_lr: 1.5891e-01 lr: 1.5891e-01  eta: 0:34:37  time: 0.2641  data_time: 0.0042  memory: 5391  grad_norm: 0.6638  loss: 0.3092  loss_cls: 0.2189  loss_bbox: 0.0903
2025/05/10 22:30:11 - mmengine - INFO - Epoch(train) [17][450/563]  base_lr: 1.5890e-01 lr: 1.5890e-01  eta: 0:34:23  time: 0.2783  data_time: 0.0045  memory: 5324  grad_norm: 0.7473  loss: 0.3231  loss_cls: 0.2356  loss_bbox: 0.0875
2025/05/10 22:30:25 - mmengine - INFO - Epoch(train) [17][500/563]  base_lr: 1.5889e-01 lr: 1.5889e-01  eta: 0:34:09  time: 0.2714  data_time: 0.0043  memory: 5442  grad_norm: 0.6256  loss: 0.3359  loss_cls: 0.2374  loss_bbox: 0.0985
2025/05/10 22:30:39 - mmengine - INFO - Epoch(train) [17][550/563]  base_lr: 1.5888e-01 lr: 1.5888e-01  eta: 0:33:55  time: 0.2870  data_time: 0.0043  memory: 5329  grad_norm: 0.7102  loss: 0.3500  loss_cls: 0.2520  loss_bbox: 0.0979
2025/05/10 22:30:42 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:30:46 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:30:48 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.630 0.455 -1.000 0.343 0.417
2025/05/10 22:30:48 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.6300  coco/bbox_mAP_75: 0.4550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3430  coco/bbox_mAP_l: 0.4170  data_time: 0.0016  time: 0.0750
2025/05/10 22:31:01 - mmengine - INFO - Epoch(train) [18][ 50/563]  base_lr: 1.5886e-01 lr: 1.5886e-01  eta: 0:33:37  time: 0.2622  data_time: 0.0049  memory: 5453  grad_norm: 0.6336  loss: 0.2712  loss_cls: 0.1977  loss_bbox: 0.0734
2025/05/10 22:31:15 - mmengine - INFO - Epoch(train) [18][100/563]  base_lr: 1.5885e-01 lr: 1.5885e-01  eta: 0:33:23  time: 0.2785  data_time: 0.0044  memory: 5463  grad_norm: 0.5824  loss: 0.2650  loss_cls: 0.1885  loss_bbox: 0.0764
2025/05/10 22:31:28 - mmengine - INFO - Epoch(train) [18][150/563]  base_lr: 1.5883e-01 lr: 1.5883e-01  eta: 0:33:09  time: 0.2702  data_time: 0.0044  memory: 5375  grad_norm: 0.6976  loss: 0.3100  loss_cls: 0.2160  loss_bbox: 0.0940
2025/05/10 22:31:42 - mmengine - INFO - Epoch(train) [18][200/563]  base_lr: 1.5882e-01 lr: 1.5882e-01  eta: 0:32:55  time: 0.2816  data_time: 0.0043  memory: 5468  grad_norm: 0.7498  loss: 0.3428  loss_cls: 0.2535  loss_bbox: 0.0893
2025/05/10 22:31:56 - mmengine - INFO - Epoch(train) [18][250/563]  base_lr: 1.5881e-01 lr: 1.5881e-01  eta: 0:32:41  time: 0.2662  data_time: 0.0043  memory: 5453  grad_norm: 0.6715  loss: 0.3517  loss_cls: 0.2601  loss_bbox: 0.0916
2025/05/10 22:32:09 - mmengine - INFO - Epoch(train) [18][300/563]  base_lr: 1.5880e-01 lr: 1.5880e-01  eta: 0:32:27  time: 0.2760  data_time: 0.0046  memory: 5385  grad_norm: 0.6775  loss: 0.3202  loss_cls: 0.2225  loss_bbox: 0.0977
2025/05/10 22:32:23 - mmengine - INFO - Epoch(train) [18][350/563]  base_lr: 1.5878e-01 lr: 1.5878e-01  eta: 0:32:13  time: 0.2659  data_time: 0.0044  memory: 5473  grad_norm: 0.6669  loss: 0.3298  loss_cls: 0.2360  loss_bbox: 0.0938
2025/05/10 22:32:39 - mmengine - INFO - Epoch(train) [18][400/563]  base_lr: 1.5877e-01 lr: 1.5877e-01  eta: 0:32:00  time: 0.3187  data_time: 0.0044  memory: 5370  grad_norm: 0.6465  loss: 0.3000  loss_cls: 0.2138  loss_bbox: 0.0862
2025/05/10 22:32:46 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:32:52 - mmengine - INFO - Epoch(train) [18][450/563]  base_lr: 1.5876e-01 lr: 1.5876e-01  eta: 0:31:46  time: 0.2646  data_time: 0.0044  memory: 5458  grad_norm: 0.5864  loss: 0.2914  loss_cls: 0.2094  loss_bbox: 0.0820
2025/05/10 22:33:05 - mmengine - INFO - Epoch(train) [18][500/563]  base_lr: 1.5874e-01 lr: 1.5874e-01  eta: 0:31:32  time: 0.2632  data_time: 0.0043  memory: 5398  grad_norm: 0.6591  loss: 0.3100  loss_cls: 0.2205  loss_bbox: 0.0894
2025/05/10 22:33:18 - mmengine - INFO - Epoch(train) [18][550/563]  base_lr: 1.5873e-01 lr: 1.5873e-01  eta: 0:31:17  time: 0.2591  data_time: 0.0043  memory: 5398  grad_norm: 0.7361  loss: 0.3215  loss_cls: 0.2363  loss_bbox: 0.0851
2025/05/10 22:33:22 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:33:25 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:33:27 - mmengine - INFO - bbox_mAP_copypaste: 0.421 0.668 0.496 -1.000 0.317 0.447
2025/05/10 22:33:27 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.4210  coco/bbox_mAP_50: 0.6680  coco/bbox_mAP_75: 0.4960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3170  coco/bbox_mAP_l: 0.4470  data_time: 0.0016  time: 0.0741
2025/05/10 22:33:27 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/10 22:33:28 - mmengine - INFO - The best checkpoint with 0.4210 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2025/05/10 22:33:43 - mmengine - INFO - Epoch(train) [19][ 50/563]  base_lr: 1.5871e-01 lr: 1.5871e-01  eta: 0:31:00  time: 0.3005  data_time: 0.0049  memory: 5422  grad_norm: 0.8245  loss: 0.3662  loss_cls: 0.2820  loss_bbox: 0.0843
2025/05/10 22:33:56 - mmengine - INFO - Epoch(train) [19][100/563]  base_lr: 1.5870e-01 lr: 1.5870e-01  eta: 0:30:46  time: 0.2634  data_time: 0.0043  memory: 5339  grad_norm: 0.6159  loss: 0.3540  loss_cls: 0.2635  loss_bbox: 0.0905
2025/05/10 22:34:10 - mmengine - INFO - Epoch(train) [19][150/563]  base_lr: 1.5869e-01 lr: 1.5869e-01  eta: 0:30:33  time: 0.2872  data_time: 0.0044  memory: 5398  grad_norm: 0.8075  loss: 0.3521  loss_cls: 0.2489  loss_bbox: 0.1033
2025/05/10 22:34:23 - mmengine - INFO - Epoch(train) [19][200/563]  base_lr: 1.5867e-01 lr: 1.5867e-01  eta: 0:30:18  time: 0.2655  data_time: 0.0043  memory: 5406  grad_norm: 0.7536  loss: 0.3867  loss_cls: 0.2868  loss_bbox: 0.1000
2025/05/10 22:34:38 - mmengine - INFO - Epoch(train) [19][250/563]  base_lr: 1.5866e-01 lr: 1.5866e-01  eta: 0:30:05  time: 0.2966  data_time: 0.0043  memory: 5398  grad_norm: 0.6776  loss: 0.3258  loss_cls: 0.2337  loss_bbox: 0.0920
2025/05/10 22:34:52 - mmengine - INFO - Epoch(train) [19][300/563]  base_lr: 1.5865e-01 lr: 1.5865e-01  eta: 0:29:51  time: 0.2778  data_time: 0.0043  memory: 5468  grad_norm: 0.6468  loss: 0.3398  loss_cls: 0.2378  loss_bbox: 0.1020
2025/05/10 22:35:05 - mmengine - INFO - Epoch(train) [19][350/563]  base_lr: 1.5863e-01 lr: 1.5863e-01  eta: 0:29:37  time: 0.2655  data_time: 0.0044  memory: 5398  grad_norm: 0.6493  loss: 0.3301  loss_cls: 0.2365  loss_bbox: 0.0936
2025/05/10 22:35:19 - mmengine - INFO - Epoch(train) [19][400/563]  base_lr: 1.5862e-01 lr: 1.5862e-01  eta: 0:29:23  time: 0.2757  data_time: 0.0044  memory: 5453  grad_norm: 0.6743  loss: 0.3016  loss_cls: 0.2201  loss_bbox: 0.0815
2025/05/10 22:35:33 - mmengine - INFO - Epoch(train) [19][450/563]  base_lr: 1.5861e-01 lr: 1.5861e-01  eta: 0:29:09  time: 0.2676  data_time: 0.0043  memory: 5473  grad_norm: 0.6658  loss: 0.3082  loss_cls: 0.2142  loss_bbox: 0.0940
2025/05/10 22:35:47 - mmengine - INFO - Epoch(train) [19][500/563]  base_lr: 1.5859e-01 lr: 1.5859e-01  eta: 0:28:56  time: 0.2960  data_time: 0.0044  memory: 5375  grad_norm: 0.7494  loss: 0.3225  loss_cls: 0.2266  loss_bbox: 0.0959
2025/05/10 22:36:01 - mmengine - INFO - Epoch(train) [19][550/563]  base_lr: 1.5858e-01 lr: 1.5858e-01  eta: 0:28:41  time: 0.2665  data_time: 0.0044  memory: 5463  grad_norm: 0.6358  loss: 0.3185  loss_cls: 0.2281  loss_bbox: 0.0904
2025/05/10 22:36:04 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:36:09 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:36:10 - mmengine - INFO - bbox_mAP_copypaste: 0.429 0.680 0.506 -1.000 0.319 0.453
2025/05/10 22:36:10 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.4290  coco/bbox_mAP_50: 0.6800  coco/bbox_mAP_75: 0.5060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3190  coco/bbox_mAP_l: 0.4530  data_time: 0.0018  time: 0.0882
2025/05/10 22:36:10 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_18.pth is removed
2025/05/10 22:36:11 - mmengine - INFO - The best checkpoint with 0.4290 coco/bbox_mAP at 19 epoch is saved to best_coco_bbox_mAP_epoch_19.pth.
2025/05/10 22:36:25 - mmengine - INFO - Epoch(train) [20][ 50/563]  base_lr: 1.5856e-01 lr: 1.5856e-01  eta: 0:28:24  time: 0.2836  data_time: 0.0050  memory: 5398  grad_norm: 0.6821  loss: 0.2640  loss_cls: 0.1893  loss_bbox: 0.0747
2025/05/10 22:36:40 - mmengine - INFO - Epoch(train) [20][100/563]  base_lr: 1.5855e-01 lr: 1.5855e-01  eta: 0:28:11  time: 0.2957  data_time: 0.0043  memory: 5468  grad_norm: 0.5857  loss: 0.2752  loss_cls: 0.1967  loss_bbox: 0.0785
2025/05/10 22:36:54 - mmengine - INFO - Epoch(train) [20][150/563]  base_lr: 1.5853e-01 lr: 1.5853e-01  eta: 0:27:57  time: 0.2781  data_time: 0.0044  memory: 5355  grad_norm: 0.6347  loss: 0.2654  loss_cls: 0.1894  loss_bbox: 0.0760
2025/05/10 22:37:08 - mmengine - INFO - Epoch(train) [20][200/563]  base_lr: 1.5852e-01 lr: 1.5852e-01  eta: 0:27:43  time: 0.2771  data_time: 0.0044  memory: 5375  grad_norm: 0.7231  loss: 0.2977  loss_cls: 0.2145  loss_bbox: 0.0832
2025/05/10 22:37:21 - mmengine - INFO - Epoch(train) [20][250/563]  base_lr: 1.5850e-01 lr: 1.5850e-01  eta: 0:27:29  time: 0.2657  data_time: 0.0043  memory: 5473  grad_norm: 0.6154  loss: 0.2959  loss_cls: 0.2146  loss_bbox: 0.0813
2025/05/10 22:37:34 - mmengine - INFO - Epoch(train) [20][300/563]  base_lr: 1.5849e-01 lr: 1.5849e-01  eta: 0:27:15  time: 0.2687  data_time: 0.0042  memory: 5453  grad_norm: 0.6091  loss: 0.2768  loss_cls: 0.1987  loss_bbox: 0.0781
2025/05/10 22:37:35 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:37:48 - mmengine - INFO - Epoch(train) [20][350/563]  base_lr: 1.5847e-01 lr: 1.5847e-01  eta: 0:27:00  time: 0.2704  data_time: 0.0043  memory: 5391  grad_norm: 0.6883  loss: 0.2969  loss_cls: 0.2143  loss_bbox: 0.0826
2025/05/10 22:38:01 - mmengine - INFO - Epoch(train) [20][400/563]  base_lr: 1.5846e-01 lr: 1.5846e-01  eta: 0:26:46  time: 0.2711  data_time: 0.0043  memory: 5344  grad_norm: 0.6655  loss: 0.2863  loss_cls: 0.2091  loss_bbox: 0.0772
2025/05/10 22:38:15 - mmengine - INFO - Epoch(train) [20][450/563]  base_lr: 1.5844e-01 lr: 1.5844e-01  eta: 0:26:32  time: 0.2662  data_time: 0.0044  memory: 5422  grad_norm: 0.6419  loss: 0.3127  loss_cls: 0.2168  loss_bbox: 0.0959
2025/05/10 22:38:28 - mmengine - INFO - Epoch(train) [20][500/563]  base_lr: 1.5843e-01 lr: 1.5843e-01  eta: 0:26:18  time: 0.2642  data_time: 0.0044  memory: 5406  grad_norm: 0.6935  loss: 0.3020  loss_cls: 0.2195  loss_bbox: 0.0825
2025/05/10 22:38:42 - mmengine - INFO - Epoch(train) [20][550/563]  base_lr: 1.5842e-01 lr: 1.5842e-01  eta: 0:26:04  time: 0.2851  data_time: 0.0044  memory: 5463  grad_norm: 0.8346  loss: 0.3539  loss_cls: 0.2562  loss_bbox: 0.0977
2025/05/10 22:38:46 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:38:50 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:38:51 - mmengine - INFO - bbox_mAP_copypaste: 0.419 0.669 0.488 -1.000 0.301 0.445
2025/05/10 22:38:51 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.4190  coco/bbox_mAP_50: 0.6690  coco/bbox_mAP_75: 0.4880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3010  coco/bbox_mAP_l: 0.4450  data_time: 0.0016  time: 0.0828
2025/05/10 22:39:05 - mmengine - INFO - Epoch(train) [21][ 50/563]  base_lr: 1.5840e-01 lr: 1.5840e-01  eta: 0:25:47  time: 0.2801  data_time: 0.0050  memory: 5453  grad_norm: 0.7623  loss: 0.3074  loss_cls: 0.2242  loss_bbox: 0.0832
2025/05/10 22:39:19 - mmengine - INFO - Epoch(train) [21][100/563]  base_lr: 1.5838e-01 lr: 1.5838e-01  eta: 0:25:33  time: 0.2730  data_time: 0.0044  memory: 5398  grad_norm: 0.6732  loss: 0.2871  loss_cls: 0.2038  loss_bbox: 0.0833
2025/05/10 22:39:32 - mmengine - INFO - Epoch(train) [21][150/563]  base_lr: 1.5837e-01 lr: 1.5837e-01  eta: 0:25:19  time: 0.2676  data_time: 0.0043  memory: 5453  grad_norm: 0.6248  loss: 0.2620  loss_cls: 0.1892  loss_bbox: 0.0728
2025/05/10 22:39:46 - mmengine - INFO - Epoch(train) [21][200/563]  base_lr: 1.5835e-01 lr: 1.5835e-01  eta: 0:25:05  time: 0.2656  data_time: 0.0044  memory: 5442  grad_norm: 0.7261  loss: 0.3021  loss_cls: 0.2172  loss_bbox: 0.0849
2025/05/10 22:40:00 - mmengine - INFO - Epoch(train) [21][250/563]  base_lr: 1.5834e-01 lr: 1.5834e-01  eta: 0:24:51  time: 0.2965  data_time: 0.0044  memory: 5391  grad_norm: 0.7121  loss: 0.2994  loss_cls: 0.2121  loss_bbox: 0.0873
2025/05/10 22:40:13 - mmengine - INFO - Epoch(train) [21][300/563]  base_lr: 1.5832e-01 lr: 1.5832e-01  eta: 0:24:37  time: 0.2618  data_time: 0.0044  memory: 5391  grad_norm: 0.7061  loss: 0.2962  loss_cls: 0.2131  loss_bbox: 0.0831
2025/05/10 22:40:27 - mmengine - INFO - Epoch(train) [21][350/563]  base_lr: 1.5831e-01 lr: 1.5831e-01  eta: 0:24:23  time: 0.2666  data_time: 0.0043  memory: 5391  grad_norm: 0.7163  loss: 0.3170  loss_cls: 0.2325  loss_bbox: 0.0846
2025/05/10 22:40:41 - mmengine - INFO - Epoch(train) [21][400/563]  base_lr: 1.5829e-01 lr: 1.5829e-01  eta: 0:24:09  time: 0.2753  data_time: 0.0043  memory: 5473  grad_norm: 0.6669  loss: 0.3130  loss_cls: 0.2186  loss_bbox: 0.0944
2025/05/10 22:40:54 - mmengine - INFO - Epoch(train) [21][450/563]  base_lr: 1.5828e-01 lr: 1.5828e-01  eta: 0:23:55  time: 0.2665  data_time: 0.0043  memory: 5354  grad_norm: 0.6680  loss: 0.3037  loss_cls: 0.2187  loss_bbox: 0.0851
2025/05/10 22:41:08 - mmengine - INFO - Epoch(train) [21][500/563]  base_lr: 1.5826e-01 lr: 1.5826e-01  eta: 0:23:41  time: 0.2902  data_time: 0.0044  memory: 5468  grad_norm: 0.6823  loss: 0.2960  loss_cls: 0.2084  loss_bbox: 0.0876
2025/05/10 22:41:22 - mmengine - INFO - Epoch(train) [21][550/563]  base_lr: 1.5824e-01 lr: 1.5824e-01  eta: 0:23:27  time: 0.2666  data_time: 0.0044  memory: 5398  grad_norm: 0.6712  loss: 0.3148  loss_cls: 0.2248  loss_bbox: 0.0900
2025/05/10 22:41:25 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:41:29 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:41:30 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.672 0.494 -1.000 0.322 0.449
2025/05/10 22:41:30 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.6720  coco/bbox_mAP_75: 0.4940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3220  coco/bbox_mAP_l: 0.4490  data_time: 0.0016  time: 0.0758
2025/05/10 22:41:45 - mmengine - INFO - Epoch(train) [22][ 50/563]  base_lr: 1.5822e-01 lr: 1.5822e-01  eta: 0:23:10  time: 0.2957  data_time: 0.0050  memory: 5398  grad_norm: 0.6023  loss: 0.2613  loss_cls: 0.1868  loss_bbox: 0.0745
2025/05/10 22:41:59 - mmengine - INFO - Epoch(train) [22][100/563]  base_lr: 1.5821e-01 lr: 1.5821e-01  eta: 0:22:56  time: 0.2691  data_time: 0.0044  memory: 5391  grad_norm: 0.6655  loss: 0.2566  loss_cls: 0.1845  loss_bbox: 0.0721
2025/05/10 22:42:13 - mmengine - INFO - Epoch(train) [22][150/563]  base_lr: 1.5819e-01 lr: 1.5819e-01  eta: 0:22:42  time: 0.2790  data_time: 0.0043  memory: 5463  grad_norm: 0.7254  loss: 0.2633  loss_cls: 0.1861  loss_bbox: 0.0772
2025/05/10 22:42:20 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:42:26 - mmengine - INFO - Epoch(train) [22][200/563]  base_lr: 1.5818e-01 lr: 1.5818e-01  eta: 0:22:28  time: 0.2645  data_time: 0.0044  memory: 5468  grad_norm: 0.7199  loss: 0.3016  loss_cls: 0.2188  loss_bbox: 0.0828
2025/05/10 22:42:39 - mmengine - INFO - Epoch(train) [22][250/563]  base_lr: 1.5816e-01 lr: 1.5816e-01  eta: 0:22:14  time: 0.2668  data_time: 0.0042  memory: 5391  grad_norm: 0.6521  loss: 0.2804  loss_cls: 0.1972  loss_bbox: 0.0832
2025/05/10 22:42:52 - mmengine - INFO - Epoch(train) [22][300/563]  base_lr: 1.5815e-01 lr: 1.5815e-01  eta: 0:22:00  time: 0.2633  data_time: 0.0043  memory: 5458  grad_norm: 0.6887  loss: 0.2788  loss_cls: 0.1985  loss_bbox: 0.0803
2025/05/10 22:43:06 - mmengine - INFO - Epoch(train) [22][350/563]  base_lr: 1.5813e-01 lr: 1.5813e-01  eta: 0:21:46  time: 0.2786  data_time: 0.0043  memory: 5406  grad_norm: 0.7038  loss: 0.3037  loss_cls: 0.2178  loss_bbox: 0.0859
2025/05/10 22:43:19 - mmengine - INFO - Epoch(train) [22][400/563]  base_lr: 1.5811e-01 lr: 1.5811e-01  eta: 0:21:32  time: 0.2620  data_time: 0.0043  memory: 5334  grad_norm: 0.8412  loss: 0.4191  loss_cls: 0.3160  loss_bbox: 0.1032
2025/05/10 22:43:33 - mmengine - INFO - Epoch(train) [22][450/563]  base_lr: 1.5810e-01 lr: 1.5810e-01  eta: 0:21:18  time: 0.2627  data_time: 0.0043  memory: 5375  grad_norm: 0.6869  loss: 0.3059  loss_cls: 0.2213  loss_bbox: 0.0846
2025/05/10 22:43:46 - mmengine - INFO - Epoch(train) [22][500/563]  base_lr: 1.5808e-01 lr: 1.5808e-01  eta: 0:21:04  time: 0.2768  data_time: 0.0044  memory: 5442  grad_norm: 0.6416  loss: 0.3125  loss_cls: 0.2232  loss_bbox: 0.0893
2025/05/10 22:44:00 - mmengine - INFO - Epoch(train) [22][550/563]  base_lr: 1.5807e-01 lr: 1.5807e-01  eta: 0:20:50  time: 0.2678  data_time: 0.0043  memory: 5473  grad_norm: 0.6546  loss: 0.3019  loss_cls: 0.2110  loss_bbox: 0.0909
2025/05/10 22:44:04 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:44:08 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:44:09 - mmengine - INFO - bbox_mAP_copypaste: 0.413 0.657 0.484 -1.000 0.305 0.438
2025/05/10 22:44:09 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.4130  coco/bbox_mAP_50: 0.6570  coco/bbox_mAP_75: 0.4840  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3050  coco/bbox_mAP_l: 0.4380  data_time: 0.0017  time: 0.0855
2025/05/10 22:44:22 - mmengine - INFO - Epoch(train) [23][ 50/563]  base_lr: 1.5804e-01 lr: 1.5804e-01  eta: 0:20:32  time: 0.2620  data_time: 0.0049  memory: 5453  grad_norm: 0.6479  loss: 0.2626  loss_cls: 0.1873  loss_bbox: 0.0752
2025/05/10 22:44:37 - mmengine - INFO - Epoch(train) [23][100/563]  base_lr: 1.5803e-01 lr: 1.5803e-01  eta: 0:20:19  time: 0.2861  data_time: 0.0044  memory: 5458  grad_norm: 0.5990  loss: 0.2532  loss_cls: 0.1825  loss_bbox: 0.0706
2025/05/10 22:44:50 - mmengine - INFO - Epoch(train) [23][150/563]  base_lr: 1.5801e-01 lr: 1.5801e-01  eta: 0:20:05  time: 0.2641  data_time: 0.0043  memory: 5473  grad_norm: 0.6717  loss: 0.2548  loss_cls: 0.1819  loss_bbox: 0.0729
2025/05/10 22:45:03 - mmengine - INFO - Epoch(train) [23][200/563]  base_lr: 1.5799e-01 lr: 1.5799e-01  eta: 0:19:51  time: 0.2659  data_time: 0.0044  memory: 5463  grad_norm: 0.6865  loss: 0.2688  loss_cls: 0.1918  loss_bbox: 0.0770
2025/05/10 22:45:18 - mmengine - INFO - Epoch(train) [23][250/563]  base_lr: 1.5798e-01 lr: 1.5798e-01  eta: 0:19:37  time: 0.2964  data_time: 0.0044  memory: 5453  grad_norm: 0.6767  loss: 0.2591  loss_cls: 0.1802  loss_bbox: 0.0789
2025/05/10 22:45:31 - mmengine - INFO - Epoch(train) [23][300/563]  base_lr: 1.5796e-01 lr: 1.5796e-01  eta: 0:19:23  time: 0.2685  data_time: 0.0043  memory: 5391  grad_norm: 0.7804  loss: 0.3034  loss_cls: 0.2160  loss_bbox: 0.0874
2025/05/10 22:45:45 - mmengine - INFO - Epoch(train) [23][350/563]  base_lr: 1.5794e-01 lr: 1.5794e-01  eta: 0:19:09  time: 0.2828  data_time: 0.0044  memory: 5375  grad_norm: 0.6383  loss: 0.2871  loss_cls: 0.1992  loss_bbox: 0.0880
2025/05/10 22:45:59 - mmengine - INFO - Epoch(train) [23][400/563]  base_lr: 1.5793e-01 lr: 1.5793e-01  eta: 0:18:55  time: 0.2667  data_time: 0.0044  memory: 5453  grad_norm: 0.7322  loss: 0.2701  loss_cls: 0.1891  loss_bbox: 0.0811
2025/05/10 22:46:13 - mmengine - INFO - Epoch(train) [23][450/563]  base_lr: 1.5791e-01 lr: 1.5791e-01  eta: 0:18:42  time: 0.2846  data_time: 0.0046  memory: 5468  grad_norm: 0.7075  loss: 0.2918  loss_cls: 0.2114  loss_bbox: 0.0804
2025/05/10 22:46:26 - mmengine - INFO - Epoch(train) [23][500/563]  base_lr: 1.5789e-01 lr: 1.5789e-01  eta: 0:18:28  time: 0.2645  data_time: 0.0043  memory: 5398  grad_norm: 0.6927  loss: 0.2705  loss_cls: 0.1924  loss_bbox: 0.0781
2025/05/10 22:46:39 - mmengine - INFO - Epoch(train) [23][550/563]  base_lr: 1.5788e-01 lr: 1.5788e-01  eta: 0:18:14  time: 0.2589  data_time: 0.0043  memory: 5329  grad_norm: 0.7597  loss: 0.2847  loss_cls: 0.2013  loss_bbox: 0.0833
2025/05/10 22:46:43 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:46:47 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:46:48 - mmengine - INFO - bbox_mAP_copypaste: 0.417 0.665 0.484 -1.000 0.311 0.448
2025/05/10 22:46:48 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.4170  coco/bbox_mAP_50: 0.6650  coco/bbox_mAP_75: 0.4840  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3110  coco/bbox_mAP_l: 0.4480  data_time: 0.0016  time: 0.0800
2025/05/10 22:47:01 - mmengine - INFO - Epoch(train) [24][ 50/563]  base_lr: 1.5786e-01 lr: 1.5786e-01  eta: 0:17:56  time: 0.2613  data_time: 0.0049  memory: 5473  grad_norm: 0.6994  loss: 0.2697  loss_cls: 0.1900  loss_bbox: 0.0797
2025/05/10 22:47:01 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:47:15 - mmengine - INFO - Epoch(train) [24][100/563]  base_lr: 1.5784e-01 lr: 1.5784e-01  eta: 0:17:42  time: 0.2705  data_time: 0.0044  memory: 5251  grad_norm: 0.6967  loss: 0.2488  loss_cls: 0.1736  loss_bbox: 0.0752
2025/05/10 22:47:28 - mmengine - INFO - Epoch(train) [24][150/563]  base_lr: 1.5782e-01 lr: 1.5782e-01  eta: 0:17:28  time: 0.2597  data_time: 0.0043  memory: 5442  grad_norm: 0.7003  loss: 0.2722  loss_cls: 0.1936  loss_bbox: 0.0785
2025/05/10 22:47:41 - mmengine - INFO - Epoch(train) [24][200/563]  base_lr: 1.5780e-01 lr: 1.5780e-01  eta: 0:17:14  time: 0.2666  data_time: 0.0043  memory: 5468  grad_norm: 0.6676  loss: 0.2699  loss_cls: 0.1916  loss_bbox: 0.0782
2025/05/10 22:47:54 - mmengine - INFO - Epoch(train) [24][250/563]  base_lr: 1.5779e-01 lr: 1.5779e-01  eta: 0:17:00  time: 0.2621  data_time: 0.0043  memory: 5453  grad_norm: 0.7043  loss: 0.2630  loss_cls: 0.1861  loss_bbox: 0.0769
2025/05/10 22:48:07 - mmengine - INFO - Epoch(train) [24][300/563]  base_lr: 1.5777e-01 lr: 1.5777e-01  eta: 0:16:46  time: 0.2663  data_time: 0.0043  memory: 5422  grad_norm: 0.6749  loss: 0.2715  loss_cls: 0.1901  loss_bbox: 0.0814
2025/05/10 22:48:21 - mmengine - INFO - Epoch(train) [24][350/563]  base_lr: 1.5775e-01 lr: 1.5775e-01  eta: 0:16:32  time: 0.2636  data_time: 0.0043  memory: 5391  grad_norm: 0.7029  loss: 0.2768  loss_cls: 0.1952  loss_bbox: 0.0816
2025/05/10 22:48:34 - mmengine - INFO - Epoch(train) [24][400/563]  base_lr: 1.5773e-01 lr: 1.5773e-01  eta: 0:16:18  time: 0.2610  data_time: 0.0043  memory: 5375  grad_norm: 0.6781  loss: 0.2541  loss_cls: 0.1804  loss_bbox: 0.0738
2025/05/10 22:48:47 - mmengine - INFO - Epoch(train) [24][450/563]  base_lr: 1.5772e-01 lr: 1.5772e-01  eta: 0:16:04  time: 0.2703  data_time: 0.0043  memory: 5398  grad_norm: 0.7003  loss: 0.2666  loss_cls: 0.1912  loss_bbox: 0.0754
2025/05/10 22:49:00 - mmengine - INFO - Epoch(train) [24][500/563]  base_lr: 1.5770e-01 lr: 1.5770e-01  eta: 0:15:50  time: 0.2610  data_time: 0.0044  memory: 5463  grad_norm: 0.7603  loss: 0.2793  loss_cls: 0.1986  loss_bbox: 0.0806
2025/05/10 22:49:13 - mmengine - INFO - Epoch(train) [24][550/563]  base_lr: 1.5768e-01 lr: 1.5768e-01  eta: 0:15:36  time: 0.2648  data_time: 0.0044  memory: 5391  grad_norm: 0.7010  loss: 0.2895  loss_cls: 0.2025  loss_bbox: 0.0870
2025/05/10 22:49:17 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:49:21 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:49:22 - mmengine - INFO - bbox_mAP_copypaste: 0.422 0.669 0.494 -1.000 0.303 0.451
2025/05/10 22:49:22 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.4220  coco/bbox_mAP_50: 0.6690  coco/bbox_mAP_75: 0.4940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3030  coco/bbox_mAP_l: 0.4510  data_time: 0.0016  time: 0.0759
2025/05/10 22:49:35 - mmengine - INFO - Epoch(train) [25][ 50/563]  base_lr: 1.5766e-01 lr: 1.5766e-01  eta: 0:15:18  time: 0.2593  data_time: 0.0051  memory: 5391  grad_norm: 0.6998  loss: 0.2448  loss_cls: 0.1731  loss_bbox: 0.0717
2025/05/10 22:49:48 - mmengine - INFO - Epoch(train) [25][100/563]  base_lr: 1.5764e-01 lr: 1.5764e-01  eta: 0:15:04  time: 0.2613  data_time: 0.0043  memory: 5398  grad_norm: 0.6648  loss: 0.2451  loss_cls: 0.1759  loss_bbox: 0.0692
2025/05/10 22:50:01 - mmengine - INFO - Epoch(train) [25][150/563]  base_lr: 1.5762e-01 lr: 1.5762e-01  eta: 0:14:50  time: 0.2636  data_time: 0.0044  memory: 5473  grad_norm: 0.6655  loss: 0.2458  loss_cls: 0.1804  loss_bbox: 0.0653
2025/05/10 22:50:15 - mmengine - INFO - Epoch(train) [25][200/563]  base_lr: 1.5760e-01 lr: 1.5760e-01  eta: 0:14:37  time: 0.2654  data_time: 0.0044  memory: 5453  grad_norm: 0.7565  loss: 0.2844  loss_cls: 0.2043  loss_bbox: 0.0801
2025/05/10 22:50:28 - mmengine - INFO - Epoch(train) [25][250/563]  base_lr: 1.5759e-01 lr: 1.5759e-01  eta: 0:14:23  time: 0.2607  data_time: 0.0042  memory: 5391  grad_norm: 0.6941  loss: 0.2637  loss_cls: 0.1875  loss_bbox: 0.0762
2025/05/10 22:50:41 - mmengine - INFO - Epoch(train) [25][300/563]  base_lr: 1.5757e-01 lr: 1.5757e-01  eta: 0:14:09  time: 0.2668  data_time: 0.0044  memory: 5398  grad_norm: 0.7311  loss: 0.2663  loss_cls: 0.1845  loss_bbox: 0.0818
2025/05/10 22:50:54 - mmengine - INFO - Epoch(train) [25][350/563]  base_lr: 1.5755e-01 lr: 1.5755e-01  eta: 0:13:55  time: 0.2620  data_time: 0.0043  memory: 5339  grad_norm: 0.7488  loss: 0.2502  loss_cls: 0.1794  loss_bbox: 0.0707
2025/05/10 22:51:08 - mmengine - INFO - Epoch(train) [25][400/563]  base_lr: 1.5753e-01 lr: 1.5753e-01  eta: 0:13:41  time: 0.2720  data_time: 0.0044  memory: 5468  grad_norm: 0.7705  loss: 0.2907  loss_cls: 0.2037  loss_bbox: 0.0870
2025/05/10 22:51:21 - mmengine - INFO - Epoch(train) [25][450/563]  base_lr: 1.5751e-01 lr: 1.5751e-01  eta: 0:13:27  time: 0.2651  data_time: 0.0043  memory: 5406  grad_norm: 0.6595  loss: 0.2927  loss_cls: 0.2056  loss_bbox: 0.0871
2025/05/10 22:51:31 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:51:34 - mmengine - INFO - Epoch(train) [25][500/563]  base_lr: 1.5749e-01 lr: 1.5749e-01  eta: 0:13:13  time: 0.2604  data_time: 0.0043  memory: 5463  grad_norm: 0.6526  loss: 0.2624  loss_cls: 0.1874  loss_bbox: 0.0750
2025/05/10 22:51:48 - mmengine - INFO - Epoch(train) [25][550/563]  base_lr: 1.5748e-01 lr: 1.5748e-01  eta: 0:12:59  time: 0.2841  data_time: 0.0043  memory: 5458  grad_norm: 0.6975  loss: 0.2633  loss_cls: 0.1849  loss_bbox: 0.0784
2025/05/10 22:51:52 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:51:55 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:51:57 - mmengine - INFO - bbox_mAP_copypaste: 0.421 0.667 0.495 -1.000 0.297 0.449
2025/05/10 22:51:57 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.4210  coco/bbox_mAP_50: 0.6670  coco/bbox_mAP_75: 0.4950  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2970  coco/bbox_mAP_l: 0.4490  data_time: 0.0016  time: 0.0714
2025/05/10 22:52:10 - mmengine - INFO - Epoch(train) [26][ 50/563]  base_lr: 1.5745e-01 lr: 1.5745e-01  eta: 0:12:42  time: 0.2708  data_time: 0.0050  memory: 5375  grad_norm: 0.6235  loss: 0.2184  loss_cls: 0.1512  loss_bbox: 0.0672
2025/05/10 22:52:23 - mmengine - INFO - Epoch(train) [26][100/563]  base_lr: 1.5743e-01 lr: 1.5743e-01  eta: 0:12:28  time: 0.2604  data_time: 0.0043  memory: 5398  grad_norm: 0.6937  loss: 0.2367  loss_cls: 0.1693  loss_bbox: 0.0674
2025/05/10 22:52:36 - mmengine - INFO - Epoch(train) [26][150/563]  base_lr: 1.5741e-01 lr: 1.5741e-01  eta: 0:12:14  time: 0.2645  data_time: 0.0043  memory: 5406  grad_norm: 0.7068  loss: 0.2431  loss_cls: 0.1732  loss_bbox: 0.0698
2025/05/10 22:52:49 - mmengine - INFO - Epoch(train) [26][200/563]  base_lr: 1.5740e-01 lr: 1.5740e-01  eta: 0:12:00  time: 0.2594  data_time: 0.0043  memory: 5468  grad_norm: 0.7982  loss: 0.3047  loss_cls: 0.2214  loss_bbox: 0.0833
2025/05/10 22:53:02 - mmengine - INFO - Epoch(train) [26][250/563]  base_lr: 1.5738e-01 lr: 1.5738e-01  eta: 0:11:46  time: 0.2634  data_time: 0.0043  memory: 5391  grad_norm: 0.7461  loss: 0.2719  loss_cls: 0.2014  loss_bbox: 0.0705
2025/05/10 22:53:16 - mmengine - INFO - Epoch(train) [26][300/563]  base_lr: 1.5736e-01 lr: 1.5736e-01  eta: 0:11:32  time: 0.2622  data_time: 0.0043  memory: 5370  grad_norm: 0.7660  loss: 0.3112  loss_cls: 0.2275  loss_bbox: 0.0838
2025/05/10 22:53:29 - mmengine - INFO - Epoch(train) [26][350/563]  base_lr: 1.5734e-01 lr: 1.5734e-01  eta: 0:11:18  time: 0.2645  data_time: 0.0042  memory: 5422  grad_norm: 0.6630  loss: 0.2850  loss_cls: 0.2026  loss_bbox: 0.0824
2025/05/10 22:53:42 - mmengine - INFO - Epoch(train) [26][400/563]  base_lr: 1.5732e-01 lr: 1.5732e-01  eta: 0:11:05  time: 0.2706  data_time: 0.0043  memory: 5324  grad_norm: 0.7182  loss: 0.2780  loss_cls: 0.1991  loss_bbox: 0.0789
2025/05/10 22:53:55 - mmengine - INFO - Epoch(train) [26][450/563]  base_lr: 1.5730e-01 lr: 1.5730e-01  eta: 0:10:51  time: 0.2614  data_time: 0.0043  memory: 5329  grad_norm: 0.6991  loss: 0.2601  loss_cls: 0.1818  loss_bbox: 0.0783
2025/05/10 22:54:09 - mmengine - INFO - Epoch(train) [26][500/563]  base_lr: 1.5728e-01 lr: 1.5728e-01  eta: 0:10:37  time: 0.2712  data_time: 0.0044  memory: 5473  grad_norm: 0.8524  loss: 0.2844  loss_cls: 0.1938  loss_bbox: 0.0906
2025/05/10 22:54:22 - mmengine - INFO - Epoch(train) [26][550/563]  base_lr: 1.5726e-01 lr: 1.5726e-01  eta: 0:10:23  time: 0.2651  data_time: 0.0043  memory: 5463  grad_norm: 0.6909  loss: 0.2717  loss_cls: 0.1941  loss_bbox: 0.0776
2025/05/10 22:54:26 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:54:29 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:54:31 - mmengine - INFO - bbox_mAP_copypaste: 0.422 0.670 0.496 -1.000 0.300 0.451
2025/05/10 22:54:31 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.4220  coco/bbox_mAP_50: 0.6700  coco/bbox_mAP_75: 0.4960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3000  coco/bbox_mAP_l: 0.4510  data_time: 0.0015  time: 0.0726
2025/05/10 22:54:45 - mmengine - INFO - Epoch(train) [27][ 50/563]  base_lr: 1.5724e-01 lr: 1.5724e-01  eta: 0:10:06  time: 0.2748  data_time: 0.0049  memory: 5453  grad_norm: 0.6803  loss: 0.2398  loss_cls: 0.1670  loss_bbox: 0.0728
2025/05/10 22:54:58 - mmengine - INFO - Epoch(train) [27][100/563]  base_lr: 1.5722e-01 lr: 1.5722e-01  eta: 0:09:52  time: 0.2630  data_time: 0.0043  memory: 5473  grad_norm: 0.6654  loss: 0.2598  loss_cls: 0.1844  loss_bbox: 0.0754
2025/05/10 22:55:11 - mmengine - INFO - Epoch(train) [27][150/563]  base_lr: 1.5720e-01 lr: 1.5720e-01  eta: 0:09:38  time: 0.2719  data_time: 0.0043  memory: 5398  grad_norm: 0.6955  loss: 0.2352  loss_cls: 0.1681  loss_bbox: 0.0671
2025/05/10 22:55:25 - mmengine - INFO - Epoch(train) [27][200/563]  base_lr: 1.5718e-01 lr: 1.5718e-01  eta: 0:09:24  time: 0.2653  data_time: 0.0044  memory: 5339  grad_norm: 0.9885  loss: 0.3238  loss_cls: 0.2389  loss_bbox: 0.0848
2025/05/10 22:55:39 - mmengine - INFO - Epoch(train) [27][250/563]  base_lr: 1.5716e-01 lr: 1.5716e-01  eta: 0:09:11  time: 0.2794  data_time: 0.0043  memory: 5354  grad_norm: 0.6887  loss: 0.4436  loss_cls: 0.3369  loss_bbox: 0.1067
2025/05/10 22:55:52 - mmengine - INFO - Epoch(train) [27][300/563]  base_lr: 1.5714e-01 lr: 1.5714e-01  eta: 0:08:57  time: 0.2624  data_time: 0.0043  memory: 5386  grad_norm: 0.7413  loss: 0.3274  loss_cls: 0.2416  loss_bbox: 0.0858
2025/05/10 22:56:05 - mmengine - INFO - Epoch(train) [27][350/563]  base_lr: 1.5712e-01 lr: 1.5712e-01  eta: 0:08:43  time: 0.2658  data_time: 0.0044  memory: 5375  grad_norm: 0.7650  loss: 0.3299  loss_cls: 0.2411  loss_bbox: 0.0888
2025/05/10 22:56:09 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:56:19 - mmengine - INFO - Epoch(train) [27][400/563]  base_lr: 1.5710e-01 lr: 1.5710e-01  eta: 0:08:29  time: 0.2762  data_time: 0.0046  memory: 5453  grad_norm: 0.7413  loss: 0.3191  loss_cls: 0.2301  loss_bbox: 0.0891
2025/05/10 22:56:32 - mmengine - INFO - Epoch(train) [27][450/563]  base_lr: 1.5708e-01 lr: 1.5708e-01  eta: 0:08:15  time: 0.2649  data_time: 0.0044  memory: 5422  grad_norm: 0.7260  loss: 0.2892  loss_cls: 0.2095  loss_bbox: 0.0797
2025/05/10 22:56:45 - mmengine - INFO - Epoch(train) [27][500/563]  base_lr: 1.5706e-01 lr: 1.5706e-01  eta: 0:08:02  time: 0.2661  data_time: 0.0042  memory: 5468  grad_norm: 0.7471  loss: 0.2872  loss_cls: 0.2062  loss_bbox: 0.0810
2025/05/10 22:56:59 - mmengine - INFO - Epoch(train) [27][550/563]  base_lr: 1.5704e-01 lr: 1.5704e-01  eta: 0:07:48  time: 0.2657  data_time: 0.0043  memory: 5463  grad_norm: 0.7265  loss: 0.2835  loss_cls: 0.2009  loss_bbox: 0.0827
2025/05/10 22:57:03 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:57:07 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:57:08 - mmengine - INFO - bbox_mAP_copypaste: 0.410 0.650 0.486 -1.000 0.299 0.438
2025/05/10 22:57:08 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.4100  coco/bbox_mAP_50: 0.6500  coco/bbox_mAP_75: 0.4860  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2990  coco/bbox_mAP_l: 0.4380  data_time: 0.0017  time: 0.0855
2025/05/10 22:57:22 - mmengine - INFO - Epoch(train) [28][ 50/563]  base_lr: 1.5701e-01 lr: 1.5701e-01  eta: 0:07:30  time: 0.2624  data_time: 0.0049  memory: 5468  grad_norm: 0.7164  loss: 0.2822  loss_cls: 0.2025  loss_bbox: 0.0798
2025/05/10 22:57:35 - mmengine - INFO - Epoch(train) [28][100/563]  base_lr: 1.5699e-01 lr: 1.5699e-01  eta: 0:07:17  time: 0.2778  data_time: 0.0049  memory: 5375  grad_norm: 0.6289  loss: 0.2427  loss_cls: 0.1687  loss_bbox: 0.0740
2025/05/10 22:57:49 - mmengine - INFO - Epoch(train) [28][150/563]  base_lr: 1.5697e-01 lr: 1.5697e-01  eta: 0:07:03  time: 0.2674  data_time: 0.0043  memory: 5463  grad_norm: 0.6563  loss: 0.2468  loss_cls: 0.1720  loss_bbox: 0.0748
2025/05/10 22:58:02 - mmengine - INFO - Epoch(train) [28][200/563]  base_lr: 1.5695e-01 lr: 1.5695e-01  eta: 0:06:49  time: 0.2654  data_time: 0.0042  memory: 5458  grad_norm: 0.6619  loss: 0.2471  loss_cls: 0.1793  loss_bbox: 0.0678
2025/05/10 22:58:15 - mmengine - INFO - Epoch(train) [28][250/563]  base_lr: 1.5693e-01 lr: 1.5693e-01  eta: 0:06:35  time: 0.2604  data_time: 0.0044  memory: 5406  grad_norm: 0.6885  loss: 0.2598  loss_cls: 0.1826  loss_bbox: 0.0772
2025/05/10 22:58:28 - mmengine - INFO - Epoch(train) [28][300/563]  base_lr: 1.5691e-01 lr: 1.5691e-01  eta: 0:06:21  time: 0.2651  data_time: 0.0042  memory: 5375  grad_norm: 0.8759  loss: 0.3799  loss_cls: 0.2918  loss_bbox: 0.0881
2025/05/10 22:58:41 - mmengine - INFO - Epoch(train) [28][350/563]  base_lr: 1.5689e-01 lr: 1.5689e-01  eta: 0:06:08  time: 0.2549  data_time: 0.0043  memory: 5323  grad_norm: 0.8977  loss: 0.3632  loss_cls: 0.2729  loss_bbox: 0.0903
2025/05/10 22:58:54 - mmengine - INFO - Epoch(train) [28][400/563]  base_lr: 1.5687e-01 lr: 1.5687e-01  eta: 0:05:54  time: 0.2660  data_time: 0.0043  memory: 5473  grad_norm: 0.6491  loss: 0.3096  loss_cls: 0.2245  loss_bbox: 0.0851
2025/05/10 22:59:08 - mmengine - INFO - Epoch(train) [28][450/563]  base_lr: 1.5685e-01 lr: 1.5685e-01  eta: 0:05:40  time: 0.2774  data_time: 0.0045  memory: 5398  grad_norm: 0.7002  loss: 0.2741  loss_cls: 0.1865  loss_bbox: 0.0877
2025/05/10 22:59:22 - mmengine - INFO - Epoch(train) [28][500/563]  base_lr: 1.5683e-01 lr: 1.5683e-01  eta: 0:05:26  time: 0.2643  data_time: 0.0043  memory: 5344  grad_norm: 0.6936  loss: 0.2918  loss_cls: 0.2098  loss_bbox: 0.0820
2025/05/10 22:59:34 - mmengine - INFO - Epoch(train) [28][550/563]  base_lr: 1.5681e-01 lr: 1.5681e-01  eta: 0:05:12  time: 0.2585  data_time: 0.0043  memory: 5262  grad_norm: 0.7442  loss: 0.2807  loss_cls: 0.2043  loss_bbox: 0.0764
2025/05/10 22:59:38 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 22:59:42 - mmengine - INFO - Evaluating bbox...
2025/05/10 22:59:43 - mmengine - INFO - bbox_mAP_copypaste: 0.406 0.646 0.479 -1.000 0.302 0.433
2025/05/10 22:59:43 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.4060  coco/bbox_mAP_50: 0.6460  coco/bbox_mAP_75: 0.4790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3020  coco/bbox_mAP_l: 0.4330  data_time: 0.0015  time: 0.0744
2025/05/10 22:59:56 - mmengine - INFO - Epoch(train) [29][ 50/563]  base_lr: 1.5678e-01 lr: 1.5678e-01  eta: 0:04:55  time: 0.2635  data_time: 0.0049  memory: 5473  grad_norm: 0.6586  loss: 0.2402  loss_cls: 0.1702  loss_bbox: 0.0700
2025/05/10 23:00:09 - mmengine - INFO - Epoch(train) [29][100/563]  base_lr: 1.5676e-01 lr: 1.5676e-01  eta: 0:04:41  time: 0.2630  data_time: 0.0044  memory: 5453  grad_norm: 0.7253  loss: 0.2583  loss_cls: 0.1827  loss_bbox: 0.0757
2025/05/10 23:00:22 - mmengine - INFO - Epoch(train) [29][150/563]  base_lr: 1.5674e-01 lr: 1.5674e-01  eta: 0:04:28  time: 0.2614  data_time: 0.0043  memory: 5334  grad_norm: 0.6585  loss: 0.2388  loss_cls: 0.1706  loss_bbox: 0.0682
2025/05/10 23:00:36 - mmengine - INFO - Epoch(train) [29][200/563]  base_lr: 1.5672e-01 lr: 1.5672e-01  eta: 0:04:14  time: 0.2744  data_time: 0.0044  memory: 5453  grad_norm: 0.6509  loss: 0.2623  loss_cls: 0.1888  loss_bbox: 0.0735
2025/05/10 23:00:46 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 23:00:49 - mmengine - INFO - Epoch(train) [29][250/563]  base_lr: 1.5670e-01 lr: 1.5670e-01  eta: 0:04:00  time: 0.2620  data_time: 0.0043  memory: 5398  grad_norm: 0.6508  loss: 0.2276  loss_cls: 0.1628  loss_bbox: 0.0648
2025/05/10 23:01:02 - mmengine - INFO - Epoch(train) [29][300/563]  base_lr: 1.5668e-01 lr: 1.5668e-01  eta: 0:03:46  time: 0.2623  data_time: 0.0043  memory: 5468  grad_norm: 0.6930  loss: 0.2661  loss_cls: 0.1883  loss_bbox: 0.0778
2025/05/10 23:01:16 - mmengine - INFO - Epoch(train) [29][350/563]  base_lr: 1.5665e-01 lr: 1.5665e-01  eta: 0:03:33  time: 0.2716  data_time: 0.0043  memory: 5463  grad_norm: 0.7580  loss: 0.2700  loss_cls: 0.1947  loss_bbox: 0.0753
2025/05/10 23:01:29 - mmengine - INFO - Epoch(train) [29][400/563]  base_lr: 1.5663e-01 lr: 1.5663e-01  eta: 0:03:19  time: 0.2620  data_time: 0.0043  memory: 5398  grad_norm: 0.6808  loss: 0.2661  loss_cls: 0.1876  loss_bbox: 0.0785
2025/05/10 23:01:43 - mmengine - INFO - Epoch(train) [29][450/563]  base_lr: 1.5661e-01 lr: 1.5661e-01  eta: 0:03:05  time: 0.2785  data_time: 0.0043  memory: 5391  grad_norm: 0.8034  loss: 0.2824  loss_cls: 0.1901  loss_bbox: 0.0923
2025/05/10 23:01:56 - mmengine - INFO - Epoch(train) [29][500/563]  base_lr: 1.5659e-01 lr: 1.5659e-01  eta: 0:02:51  time: 0.2693  data_time: 0.0043  memory: 5458  grad_norm: 0.6950  loss: 0.2761  loss_cls: 0.1934  loss_bbox: 0.0827
2025/05/10 23:02:10 - mmengine - INFO - Epoch(train) [29][550/563]  base_lr: 1.5657e-01 lr: 1.5657e-01  eta: 0:02:38  time: 0.2696  data_time: 0.0045  memory: 5329  grad_norm: 0.7311  loss: 0.2663  loss_cls: 0.1824  loss_bbox: 0.0839
2025/05/10 23:02:13 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 23:02:17 - mmengine - INFO - Evaluating bbox...
2025/05/10 23:02:18 - mmengine - INFO - bbox_mAP_copypaste: 0.411 0.654 0.476 -1.000 0.300 0.441
2025/05/10 23:02:18 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.4110  coco/bbox_mAP_50: 0.6540  coco/bbox_mAP_75: 0.4760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3000  coco/bbox_mAP_l: 0.4410  data_time: 0.0016  time: 0.0713
2025/05/10 23:02:32 - mmengine - INFO - Epoch(train) [30][ 50/563]  base_lr: 1.5654e-01 lr: 1.5654e-01  eta: 0:02:20  time: 0.2626  data_time: 0.0049  memory: 5398  grad_norm: 0.7074  loss: 0.2420  loss_cls: 0.1760  loss_bbox: 0.0660
2025/05/10 23:02:45 - mmengine - INFO - Epoch(train) [30][100/563]  base_lr: 1.5652e-01 lr: 1.5652e-01  eta: 0:02:07  time: 0.2664  data_time: 0.0044  memory: 5398  grad_norm: 0.6469  loss: 0.2350  loss_cls: 0.1687  loss_bbox: 0.0663
2025/05/10 23:02:58 - mmengine - INFO - Epoch(train) [30][150/563]  base_lr: 1.5650e-01 lr: 1.5650e-01  eta: 0:01:53  time: 0.2681  data_time: 0.0044  memory: 5463  grad_norm: 0.7648  loss: 0.2531  loss_cls: 0.1785  loss_bbox: 0.0746
2025/05/10 23:03:11 - mmengine - INFO - Epoch(train) [30][200/563]  base_lr: 1.5648e-01 lr: 1.5648e-01  eta: 0:01:39  time: 0.2613  data_time: 0.0043  memory: 5354  grad_norm: 0.6472  loss: 0.2344  loss_cls: 0.1643  loss_bbox: 0.0701
2025/05/10 23:03:25 - mmengine - INFO - Epoch(train) [30][250/563]  base_lr: 1.5645e-01 lr: 1.5645e-01  eta: 0:01:25  time: 0.2677  data_time: 0.0042  memory: 5385  grad_norm: 0.6887  loss: 0.2445  loss_cls: 0.1701  loss_bbox: 0.0744
2025/05/10 23:03:38 - mmengine - INFO - Epoch(train) [30][300/563]  base_lr: 1.5643e-01 lr: 1.5643e-01  eta: 0:01:12  time: 0.2708  data_time: 0.0045  memory: 5329  grad_norm: 0.6742  loss: 0.2477  loss_cls: 0.1760  loss_bbox: 0.0717
2025/05/10 23:03:51 - mmengine - INFO - Epoch(train) [30][350/563]  base_lr: 1.5641e-01 lr: 1.5641e-01  eta: 0:00:58  time: 0.2616  data_time: 0.0044  memory: 5344  grad_norm: 0.7303  loss: 0.2509  loss_cls: 0.1703  loss_bbox: 0.0806
2025/05/10 23:04:04 - mmengine - INFO - Epoch(train) [30][400/563]  base_lr: 1.5639e-01 lr: 1.5639e-01  eta: 0:00:44  time: 0.2618  data_time: 0.0044  memory: 5406  grad_norm: 0.7467  loss: 0.2464  loss_cls: 0.1757  loss_bbox: 0.0708
2025/05/10 23:04:19 - mmengine - INFO - Epoch(train) [30][450/563]  base_lr: 1.5637e-01 lr: 1.5637e-01  eta: 0:00:30  time: 0.2809  data_time: 0.0045  memory: 5473  grad_norm: 0.7327  loss: 0.2609  loss_cls: 0.1877  loss_bbox: 0.0732
2025/05/10 23:04:31 - mmengine - INFO - Epoch(train) [30][500/563]  base_lr: 1.5634e-01 lr: 1.5634e-01  eta: 0:00:17  time: 0.2588  data_time: 0.0043  memory: 5370  grad_norm: 0.6841  loss: 0.2567  loss_cls: 0.1776  loss_bbox: 0.0791
2025/05/10 23:04:45 - mmengine - INFO - Epoch(train) [30][550/563]  base_lr: 1.5632e-01 lr: 1.5632e-01  eta: 0:00:03  time: 0.2764  data_time: 0.0043  memory: 5453  grad_norm: 0.6451  loss: 0.2569  loss_cls: 0.1825  loss_bbox: 0.0744
2025/05/10 23:04:49 - mmengine - INFO - Exp name: efficientdet_fs_20250510_214430
2025/05/10 23:04:49 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/10 23:04:54 - mmengine - INFO - Evaluating bbox...
2025/05/10 23:04:55 - mmengine - INFO - bbox_mAP_copypaste: 0.416 0.660 0.480 -1.000 0.296 0.446
2025/05/10 23:04:55 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.4160  coco/bbox_mAP_50: 0.6600  coco/bbox_mAP_75: 0.4800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2960  coco/bbox_mAP_l: 0.4460  data_time: 0.0015  time: 0.0732
