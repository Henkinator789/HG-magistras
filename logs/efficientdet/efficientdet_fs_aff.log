2025/05/12 13:25:26 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 762184217
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 762184217
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/12 13:25:26 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=128, enable=False)
backend_args = None
batch_augments = [
    dict(size=(
        896,
        896,
    ), type='BatchFixedSizePad'),
]
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=49,
        type='EMAHook',
        update_buffers=True),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'projects.EfficientDet.efficientdet',
    ])
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet',
        interval=0,
        save_best='coco/bbox_mAP',
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet', type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evalute_type = 'CocoMetric'
image_size = 896
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet', by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 300
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        arch='b3',
        conv_cfg=dict(type='Conv2dSamePadding'),
        drop_path_rate=0.3,
        frozen_stages=0,
        init_cfg=dict(
            checkpoint=
            'D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth',
            prefix='backbone',
            type='Pretrained'),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        norm_eval=False,
        out_indices=(
            3,
            4,
            5,
        ),
        type='EfficientNet'),
    bbox_head=dict(
        anchor_generator=dict(
            center_offset=0.5,
            octave_base_scale=4,
            ratios=[
                1.0,
                0.5,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=160,
        in_channels=160,
        loss_bbox=dict(beta=0.1, loss_weight=50, type='HuberLoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=1.5,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_classes=4,
        num_ins=5,
        stacked_convs=4,
        type='EfficientDetSepBNHead'),
    data_preprocessor=dict(
        batch_augments=[
            dict(size=(
                896,
                896,
            ), type='BatchFixedSizePad'),
        ],
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=896,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            48,
            136,
            384,
        ],
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_stages=6,
        out_channels=160,
        start_level=0,
        type='BiFPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(
            iou_threshold=0.3,
            method='gaussian',
            min_score=0.001,
            sigma=0.5,
            type='soft_nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            ignore_iof_thr=-1,
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler')),
    type='EfficientDet')
norm_cfg = dict(eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    _scope_='mmdet',
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.16, momentum=0.9, type='SGD', weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=917, start_factor=0.1, type='LinearLR'),
    dict(
        T_max=299,
        begin=1,
        by_epoch=True,
        convert_to_iter_based=True,
        end=300,
        eta_min=0.0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(_scope_='mmdet', type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(
    _scope_='mmdet', max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(_scope_='mmdet', type='AspectRatioBatchSampler'),
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='RandomAffine'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(_scope_='mmdet', type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    _scope_='mmdet',
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '25-05-09/efficientdet'

2025/05/12 13:25:27 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/12 13:25:27 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.cls_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:28 - mmengine - INFO - paramwise_options -- bbox_head.reg_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 13:25:29 - mmengine - INFO - load backbone in model from: D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth
2025/05/12 13:25:29 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layers.6.bn.running_var, layers.6.bn.running_mean, layers.6.bn.weight, layers.6.bn.bias, layers.6.conv.weight

Name of parameter - Initialization information

backbone.layers.0.conv.weight - torch.Size([40, 3, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.bias - torch.Size([10]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.conv.weight - torch.Size([24, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.weight - torch.Size([6, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.weight - torch.Size([24, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.weight - torch.Size([6, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.weight - torch.Size([144, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.conv.weight - torch.Size([288, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.conv.weight - torch.Size([96, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.conv.weight - torch.Size([576, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.conv.weight - torch.Size([136, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.conv.weight - torch.Size([232, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.conv.weight - torch.Size([1392, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.conv.weight - torch.Size([384, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.conv.weight - torch.Size([2304, 384, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.conv.weight - torch.Size([2304, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.weight - torch.Size([96, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.weight - torch.Size([2304, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.conv.weight - torch.Size([384, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

neck.bifpn.0.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.weight - torch.Size([160, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  
2025/05/12 13:25:29 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/12 13:25:29 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/12 13:25:29 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\efficientdet.
2025/05/12 13:25:48 - mmengine - INFO - Epoch(train)  [1][ 50/563]  base_lr: 2.3703e-02 lr: 2.3703e-02  eta: 1:45:52  time: 0.3772  data_time: 0.0905  memory: 5471  grad_norm: 3.6254  loss: 1.7678  loss_cls: 1.1166  loss_bbox: 0.6511
2025/05/12 13:26:01 - mmengine - INFO - Epoch(train)  [1][100/563]  base_lr: 3.1563e-02 lr: 3.1563e-02  eta: 1:28:38  time: 0.2563  data_time: 0.0039  memory: 5466  grad_norm: 1.1341  loss: 1.5211  loss_cls: 1.0078  loss_bbox: 0.5133
2025/05/12 13:26:13 - mmengine - INFO - Epoch(train)  [1][150/563]  base_lr: 3.9424e-02 lr: 3.9424e-02  eta: 1:22:13  time: 0.2506  data_time: 0.0040  memory: 5233  grad_norm: 1.5593  loss: 1.3346  loss_cls: 0.8335  loss_bbox: 0.5010
2025/05/12 13:26:26 - mmengine - INFO - Epoch(train)  [1][200/563]  base_lr: 4.7284e-02 lr: 4.7284e-02  eta: 1:18:58  time: 0.2516  data_time: 0.0040  memory: 5352  grad_norm: 1.4842  loss: 1.2850  loss_cls: 0.7859  loss_bbox: 0.4990
2025/05/12 13:26:39 - mmengine - INFO - Epoch(train)  [1][250/563]  base_lr: 5.5144e-02 lr: 5.5144e-02  eta: 1:17:03  time: 0.2537  data_time: 0.0039  memory: 5368  grad_norm: 1.2557  loss: 1.1579  loss_cls: 0.6918  loss_bbox: 0.4660
2025/05/12 13:26:51 - mmengine - INFO - Epoch(train)  [1][300/563]  base_lr: 6.3004e-02 lr: 6.3004e-02  eta: 1:15:40  time: 0.2528  data_time: 0.0040  memory: 5404  grad_norm: 1.1033  loss: 0.9864  loss_cls: 0.6084  loss_bbox: 0.3780
2025/05/12 13:27:04 - mmengine - INFO - Epoch(train)  [1][350/563]  base_lr: 7.0865e-02 lr: 7.0865e-02  eta: 1:14:34  time: 0.2514  data_time: 0.0040  memory: 5295  grad_norm: 1.2239  loss: 1.0019  loss_cls: 0.6532  loss_bbox: 0.3486
2025/05/12 13:27:16 - mmengine - INFO - Epoch(train)  [1][400/563]  base_lr: 7.8725e-02 lr: 7.8725e-02  eta: 1:13:44  time: 0.2529  data_time: 0.0039  memory: 5404  grad_norm: 0.9565  loss: 1.0391  loss_cls: 0.7026  loss_bbox: 0.3365
2025/05/12 13:27:29 - mmengine - INFO - Epoch(train)  [1][450/563]  base_lr: 8.6585e-02 lr: 8.6585e-02  eta: 1:12:56  time: 0.2496  data_time: 0.0039  memory: 5398  grad_norm: 1.0212  loss: 1.0719  loss_cls: 0.7429  loss_bbox: 0.3290
2025/05/12 13:27:42 - mmengine - INFO - Epoch(train)  [1][500/563]  base_lr: 9.4445e-02 lr: 9.4445e-02  eta: 1:12:20  time: 0.2520  data_time: 0.0039  memory: 5213  grad_norm: 0.6449  loss: 1.1197  loss_cls: 0.8142  loss_bbox: 0.3055
2025/05/12 13:27:54 - mmengine - INFO - Epoch(train)  [1][550/563]  base_lr: 1.0231e-01 lr: 1.0231e-01  eta: 1:11:46  time: 0.2510  data_time: 0.0040  memory: 5280  grad_norm: 0.7964  loss: 0.9044  loss_cls: 0.6104  loss_bbox: 0.2940
2025/05/12 13:27:57 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:28:10 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:28:11 - mmengine - INFO - bbox_mAP_copypaste: 0.086 0.172 0.067 -1.000 0.046 0.091
2025/05/12 13:28:11 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0860  coco/bbox_mAP_50: 0.1720  coco/bbox_mAP_75: 0.0670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0460  coco/bbox_mAP_l: 0.0910  data_time: 0.1662  time: 0.2592
2025/05/12 13:28:12 - mmengine - INFO - The best checkpoint with 0.0860 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/12 13:28:25 - mmengine - INFO - Epoch(train)  [2][ 50/563]  base_lr: 1.1221e-01 lr: 1.1221e-01  eta: 1:11:13  time: 0.2537  data_time: 0.0060  memory: 5352  grad_norm: 0.8028  loss: 1.0004  loss_cls: 0.7087  loss_bbox: 0.2917
2025/05/12 13:28:38 - mmengine - INFO - Epoch(train)  [2][100/563]  base_lr: 1.2007e-01 lr: 1.2007e-01  eta: 1:10:49  time: 0.2541  data_time: 0.0055  memory: 5306  grad_norm: 0.7880  loss: 0.8380  loss_cls: 0.5530  loss_bbox: 0.2850
2025/05/12 13:28:50 - mmengine - INFO - Epoch(train)  [2][150/563]  base_lr: 1.2793e-01 lr: 1.2793e-01  eta: 1:10:25  time: 0.2519  data_time: 0.0053  memory: 5378  grad_norm: 0.7419  loss: 0.8171  loss_cls: 0.5544  loss_bbox: 0.2627
2025/05/12 13:29:03 - mmengine - INFO - Epoch(train)  [2][200/563]  base_lr: 1.3579e-01 lr: 1.3579e-01  eta: 1:10:04  time: 0.2542  data_time: 0.0054  memory: 5383  grad_norm: 0.7164  loss: 0.8434  loss_cls: 0.5540  loss_bbox: 0.2895
2025/05/12 13:29:16 - mmengine - INFO - Epoch(train)  [2][250/563]  base_lr: 1.4365e-01 lr: 1.4365e-01  eta: 1:09:40  time: 0.2493  data_time: 0.0054  memory: 5280  grad_norm: 0.7244  loss: 0.8145  loss_cls: 0.5403  loss_bbox: 0.2742
2025/05/12 13:29:28 - mmengine - INFO - Epoch(train)  [2][300/563]  base_lr: 1.5151e-01 lr: 1.5151e-01  eta: 1:09:24  time: 0.2563  data_time: 0.0054  memory: 5316  grad_norm: 0.7232  loss: 0.8368  loss_cls: 0.5669  loss_bbox: 0.2699
2025/05/12 13:29:41 - mmengine - INFO - Epoch(train)  [2][350/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 1:09:02  time: 0.2501  data_time: 0.0053  memory: 5352  grad_norm: 0.6736  loss: 0.7653  loss_cls: 0.5092  loss_bbox: 0.2561
2025/05/12 13:29:54 - mmengine - INFO - Epoch(train)  [2][400/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:47  time: 0.2562  data_time: 0.0043  memory: 5398  grad_norm: 0.5912  loss: 0.7630  loss_cls: 0.5115  loss_bbox: 0.2515
2025/05/12 13:30:03 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:30:06 - mmengine - INFO - Epoch(train)  [2][450/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:27  time: 0.2503  data_time: 0.0044  memory: 5316  grad_norm: 0.6513  loss: 0.7810  loss_cls: 0.5155  loss_bbox: 0.2656
2025/05/12 13:30:19 - mmengine - INFO - Epoch(train)  [2][500/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:09  time: 0.2528  data_time: 0.0043  memory: 5456  grad_norm: 0.6075  loss: 0.7556  loss_cls: 0.4985  loss_bbox: 0.2571
2025/05/12 13:30:31 - mmengine - INFO - Epoch(train)  [2][550/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:07:53  time: 0.2528  data_time: 0.0042  memory: 5280  grad_norm: 0.5582  loss: 0.7144  loss_cls: 0.4764  loss_bbox: 0.2380
2025/05/12 13:30:35 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:30:39 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:30:40 - mmengine - INFO - bbox_mAP_copypaste: 0.056 0.138 0.028 -1.000 0.011 0.060
2025/05/12 13:30:40 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0560  coco/bbox_mAP_50: 0.1380  coco/bbox_mAP_75: 0.0280  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0110  coco/bbox_mAP_l: 0.0600  data_time: 0.0017  time: 0.0838
2025/05/12 13:30:53 - mmengine - INFO - Epoch(train)  [3][ 50/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:07:31  time: 0.2514  data_time: 0.0047  memory: 5264  grad_norm: 0.6833  loss: 0.7905  loss_cls: 0.5117  loss_bbox: 0.2788
2025/05/12 13:31:05 - mmengine - INFO - Epoch(train)  [3][100/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:07:14  time: 0.2525  data_time: 0.0042  memory: 5295  grad_norm: 0.6167  loss: 0.7575  loss_cls: 0.5101  loss_bbox: 0.2474
2025/05/12 13:31:18 - mmengine - INFO - Epoch(train)  [3][150/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:59  time: 0.2530  data_time: 0.0042  memory: 5306  grad_norm: 0.6819  loss: 0.7391  loss_cls: 0.4921  loss_bbox: 0.2470
2025/05/12 13:31:31 - mmengine - INFO - Epoch(train)  [3][200/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:43  time: 0.2529  data_time: 0.0042  memory: 5352  grad_norm: 0.6700  loss: 0.7843  loss_cls: 0.5170  loss_bbox: 0.2673
2025/05/12 13:31:43 - mmengine - INFO - Epoch(train)  [3][250/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:26  time: 0.2496  data_time: 0.0043  memory: 5460  grad_norm: 0.6249  loss: 0.7236  loss_cls: 0.4877  loss_bbox: 0.2359
2025/05/12 13:31:56 - mmengine - INFO - Epoch(train)  [3][300/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:11  time: 0.2522  data_time: 0.0042  memory: 5326  grad_norm: 0.5795  loss: 0.7058  loss_cls: 0.4830  loss_bbox: 0.2227
2025/05/12 13:32:08 - mmengine - INFO - Epoch(train)  [3][350/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:53  time: 0.2479  data_time: 0.0043  memory: 5430  grad_norm: 0.5967  loss: 0.6993  loss_cls: 0.4700  loss_bbox: 0.2293
2025/05/12 13:32:21 - mmengine - INFO - Epoch(train)  [3][400/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:38  time: 0.2531  data_time: 0.0041  memory: 5461  grad_norm: 0.6184  loss: 0.7123  loss_cls: 0.4660  loss_bbox: 0.2463
2025/05/12 13:32:34 - mmengine - INFO - Epoch(train)  [3][450/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:25  time: 0.2550  data_time: 0.0043  memory: 5290  grad_norm: 0.6258  loss: 0.7040  loss_cls: 0.4684  loss_bbox: 0.2357
2025/05/12 13:32:46 - mmengine - INFO - Epoch(train)  [3][500/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:05:10  time: 0.2520  data_time: 0.0043  memory: 5460  grad_norm: 0.6322  loss: 0.6641  loss_cls: 0.4463  loss_bbox: 0.2178
2025/05/12 13:32:59 - mmengine - INFO - Epoch(train)  [3][550/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:55  time: 0.2518  data_time: 0.0043  memory: 5471  grad_norm: 0.5761  loss: 0.6786  loss_cls: 0.4559  loss_bbox: 0.2227
2025/05/12 13:33:02 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:33:06 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:33:07 - mmengine - INFO - bbox_mAP_copypaste: 0.143 0.265 0.141 -1.000 0.084 0.151
2025/05/12 13:33:08 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.1430  coco/bbox_mAP_50: 0.2650  coco/bbox_mAP_75: 0.1410  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0840  coco/bbox_mAP_l: 0.1510  data_time: 0.0016  time: 0.0775
2025/05/12 13:33:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/12 13:33:08 - mmengine - INFO - The best checkpoint with 0.1430 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/12 13:33:21 - mmengine - INFO - Epoch(train)  [4][ 50/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:41  time: 0.2606  data_time: 0.0049  memory: 5280  grad_norm: 0.6218  loss: 0.6803  loss_cls: 0.4356  loss_bbox: 0.2447
2025/05/12 13:33:34 - mmengine - INFO - Epoch(train)  [4][100/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:25  time: 0.2488  data_time: 0.0042  memory: 5383  grad_norm: 0.6159  loss: 0.6617  loss_cls: 0.4290  loss_bbox: 0.2327
2025/05/12 13:33:46 - mmengine - INFO - Epoch(train)  [4][150/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:10  time: 0.2505  data_time: 0.0043  memory: 5414  grad_norm: 0.6295  loss: 0.6414  loss_cls: 0.4217  loss_bbox: 0.2197
2025/05/12 13:33:59 - mmengine - INFO - Epoch(train)  [4][200/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:03:55  time: 0.2499  data_time: 0.0042  memory: 5404  grad_norm: 0.6146  loss: 0.6429  loss_cls: 0.4210  loss_bbox: 0.2219
2025/05/12 13:34:11 - mmengine - INFO - Epoch(train)  [4][250/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:03:40  time: 0.2517  data_time: 0.0042  memory: 5316  grad_norm: 0.6571  loss: 0.6695  loss_cls: 0.4487  loss_bbox: 0.2208
2025/05/12 13:34:24 - mmengine - INFO - Epoch(train)  [4][300/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:03:28  time: 0.2568  data_time: 0.0043  memory: 5269  grad_norm: 0.5894  loss: 0.6749  loss_cls: 0.4527  loss_bbox: 0.2222
2025/05/12 13:34:27 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:34:37 - mmengine - INFO - Epoch(train)  [4][350/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:03:13  time: 0.2501  data_time: 0.0042  memory: 5306  grad_norm: 0.6608  loss: 0.6681  loss_cls: 0.4215  loss_bbox: 0.2466
2025/05/12 13:34:49 - mmengine - INFO - Epoch(train)  [4][400/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:02:59  time: 0.2504  data_time: 0.0041  memory: 5478  grad_norm: 0.6493  loss: 0.6708  loss_cls: 0.4275  loss_bbox: 0.2433
2025/05/12 13:35:02 - mmengine - INFO - Epoch(train)  [4][450/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:02:45  time: 0.2525  data_time: 0.0043  memory: 5399  grad_norm: 0.6647  loss: 0.6840  loss_cls: 0.4409  loss_bbox: 0.2431
2025/05/12 13:35:15 - mmengine - INFO - Epoch(train)  [4][500/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:02:32  time: 0.2537  data_time: 0.0043  memory: 5466  grad_norm: 0.5573  loss: 0.6011  loss_cls: 0.3998  loss_bbox: 0.2013
2025/05/12 13:35:27 - mmengine - INFO - Epoch(train)  [4][550/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:02:19  time: 0.2542  data_time: 0.0043  memory: 5414  grad_norm: 0.6329  loss: 0.6484  loss_cls: 0.4402  loss_bbox: 0.2082
2025/05/12 13:35:31 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:35:35 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:35:36 - mmengine - INFO - bbox_mAP_copypaste: 0.193 0.354 0.194 -1.000 0.138 0.201
2025/05/12 13:35:36 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.1930  coco/bbox_mAP_50: 0.3540  coco/bbox_mAP_75: 0.1940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1380  coco/bbox_mAP_l: 0.2010  data_time: 0.0016  time: 0.0784
2025/05/12 13:35:36 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/12 13:35:37 - mmengine - INFO - The best checkpoint with 0.1930 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/12 13:35:49 - mmengine - INFO - Epoch(train)  [5][ 50/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:02:02  time: 0.2540  data_time: 0.0048  memory: 5373  grad_norm: 0.7411  loss: 0.6627  loss_cls: 0.4459  loss_bbox: 0.2168
2025/05/12 13:36:02 - mmengine - INFO - Epoch(train)  [5][100/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:01:48  time: 0.2517  data_time: 0.0043  memory: 5316  grad_norm: 0.6612  loss: 0.7874  loss_cls: 0.5527  loss_bbox: 0.2347
2025/05/12 13:36:15 - mmengine - INFO - Epoch(train)  [5][150/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:01:36  time: 0.2581  data_time: 0.0042  memory: 5301  grad_norm: 0.5704  loss: 0.6615  loss_cls: 0.4448  loss_bbox: 0.2167
2025/05/12 13:36:28 - mmengine - INFO - Epoch(train)  [5][200/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:01:24  time: 0.2561  data_time: 0.0042  memory: 5399  grad_norm: 0.6067  loss: 0.6504  loss_cls: 0.4321  loss_bbox: 0.2183
2025/05/12 13:36:40 - mmengine - INFO - Epoch(train)  [5][250/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:01:10  time: 0.2511  data_time: 0.0041  memory: 5264  grad_norm: 0.6574  loss: 0.6659  loss_cls: 0.4395  loss_bbox: 0.2265
2025/05/12 13:36:53 - mmengine - INFO - Epoch(train)  [5][300/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:57  time: 0.2538  data_time: 0.0042  memory: 5450  grad_norm: 0.6826  loss: 0.6236  loss_cls: 0.4085  loss_bbox: 0.2151
2025/05/12 13:37:06 - mmengine - INFO - Epoch(train)  [5][350/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:43  time: 0.2523  data_time: 0.0044  memory: 5342  grad_norm: 0.5701  loss: 0.6096  loss_cls: 0.4033  loss_bbox: 0.2063
2025/05/12 13:37:18 - mmengine - INFO - Epoch(train)  [5][400/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:30  time: 0.2520  data_time: 0.0042  memory: 5409  grad_norm: 0.6007  loss: 0.6136  loss_cls: 0.4165  loss_bbox: 0.1971
2025/05/12 13:37:31 - mmengine - INFO - Epoch(train)  [5][450/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:19  time: 0.2614  data_time: 0.0042  memory: 5357  grad_norm: 0.6032  loss: 0.6496  loss_cls: 0.4387  loss_bbox: 0.2109
2025/05/12 13:37:44 - mmengine - INFO - Epoch(train)  [5][500/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:00:05  time: 0.2505  data_time: 0.0042  memory: 5440  grad_norm: 0.6102  loss: 0.6217  loss_cls: 0.4144  loss_bbox: 0.2073
2025/05/12 13:37:57 - mmengine - INFO - Epoch(train)  [5][550/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 0:59:52  time: 0.2555  data_time: 0.0043  memory: 5388  grad_norm: 0.5340  loss: 0.6011  loss_cls: 0.4007  loss_bbox: 0.2004
2025/05/12 13:38:00 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:38:04 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:38:05 - mmengine - INFO - bbox_mAP_copypaste: 0.048 0.111 0.030 -1.000 0.125 0.045
2025/05/12 13:38:05 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.0480  coco/bbox_mAP_50: 0.1110  coco/bbox_mAP_75: 0.0300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1250  coco/bbox_mAP_l: 0.0450  data_time: 0.0016  time: 0.0806
2025/05/12 13:38:18 - mmengine - INFO - Epoch(train)  [6][ 50/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 0:59:36  time: 0.2550  data_time: 0.0048  memory: 5399  grad_norm: 0.6072  loss: 0.6509  loss_cls: 0.4326  loss_bbox: 0.2183
2025/05/12 13:38:31 - mmengine - INFO - Epoch(train)  [6][100/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:59:24  time: 0.2557  data_time: 0.0042  memory: 5466  grad_norm: 0.6141  loss: 0.6124  loss_cls: 0.3893  loss_bbox: 0.2231
2025/05/12 13:38:43 - mmengine - INFO - Epoch(train)  [6][150/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:59:11  time: 0.2574  data_time: 0.0043  memory: 5306  grad_norm: 0.5933  loss: 0.5762  loss_cls: 0.3724  loss_bbox: 0.2039
2025/05/12 13:38:52 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:38:56 - mmengine - INFO - Epoch(train)  [6][200/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:58:58  time: 0.2533  data_time: 0.0042  memory: 5368  grad_norm: 0.5972  loss: 0.6108  loss_cls: 0.4082  loss_bbox: 0.2026
2025/05/12 13:39:09 - mmengine - INFO - Epoch(train)  [6][250/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:58:45  time: 0.2512  data_time: 0.0043  memory: 5218  grad_norm: 0.6412  loss: 0.6132  loss_cls: 0.4050  loss_bbox: 0.2081
2025/05/12 13:39:21 - mmengine - INFO - Epoch(train)  [6][300/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:58:31  time: 0.2499  data_time: 0.0042  memory: 5383  grad_norm: 0.5858  loss: 0.5947  loss_cls: 0.3916  loss_bbox: 0.2031
2025/05/12 13:39:34 - mmengine - INFO - Epoch(train)  [6][350/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:58:18  time: 0.2564  data_time: 0.0043  memory: 5460  grad_norm: 0.5670  loss: 0.5804  loss_cls: 0.3734  loss_bbox: 0.2070
2025/05/12 13:39:47 - mmengine - INFO - Epoch(train)  [6][400/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 0:58:05  time: 0.2513  data_time: 0.0043  memory: 5394  grad_norm: 0.5896  loss: 0.5798  loss_cls: 0.3659  loss_bbox: 0.2139
2025/05/12 13:39:59 - mmengine - INFO - Epoch(train)  [6][450/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 0:57:52  time: 0.2551  data_time: 0.0044  memory: 5316  grad_norm: 0.5697  loss: 0.5797  loss_cls: 0.3829  loss_bbox: 0.1968
2025/05/12 13:40:12 - mmengine - INFO - Epoch(train)  [6][500/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:57:38  time: 0.2489  data_time: 0.0042  memory: 5275  grad_norm: 0.6097  loss: 0.6132  loss_cls: 0.4070  loss_bbox: 0.2062
2025/05/12 13:40:25 - mmengine - INFO - Epoch(train)  [6][550/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:57:26  time: 0.2563  data_time: 0.0042  memory: 5218  grad_norm: 0.5543  loss: 0.5923  loss_cls: 0.3838  loss_bbox: 0.2085
2025/05/12 13:40:28 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:40:32 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:40:33 - mmengine - INFO - bbox_mAP_copypaste: 0.227 0.426 0.225 -1.000 0.165 0.239
2025/05/12 13:40:33 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.2270  coco/bbox_mAP_50: 0.4260  coco/bbox_mAP_75: 0.2250  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1650  coco/bbox_mAP_l: 0.2390  data_time: 0.0015  time: 0.0815
2025/05/12 13:40:33 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/12 13:40:34 - mmengine - INFO - The best checkpoint with 0.2270 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/12 13:40:48 - mmengine - INFO - Epoch(train)  [7][ 50/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:57:12  time: 0.2677  data_time: 0.0050  memory: 5393  grad_norm: 0.5560  loss: 0.5551  loss_cls: 0.3613  loss_bbox: 0.1938
2025/05/12 13:41:00 - mmengine - INFO - Epoch(train)  [7][100/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 0:56:58  time: 0.2496  data_time: 0.0042  memory: 5373  grad_norm: 0.6449  loss: 0.5675  loss_cls: 0.3674  loss_bbox: 0.2001
2025/05/12 13:41:13 - mmengine - INFO - Epoch(train)  [7][150/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 0:56:45  time: 0.2524  data_time: 0.0042  memory: 5301  grad_norm: 0.6532  loss: 0.5418  loss_cls: 0.3544  loss_bbox: 0.1875
2025/05/12 13:41:25 - mmengine - INFO - Epoch(train)  [7][200/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 0:56:32  time: 0.2534  data_time: 0.0042  memory: 5368  grad_norm: 0.7339  loss: 0.6467  loss_cls: 0.4108  loss_bbox: 0.2359
2025/05/12 13:41:38 - mmengine - INFO - Epoch(train)  [7][250/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 0:56:19  time: 0.2562  data_time: 0.0043  memory: 5383  grad_norm: 0.6301  loss: 0.6200  loss_cls: 0.4098  loss_bbox: 0.2102
2025/05/12 13:41:51 - mmengine - INFO - Epoch(train)  [7][300/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:56:06  time: 0.2520  data_time: 0.0044  memory: 5357  grad_norm: 0.6097  loss: 0.5861  loss_cls: 0.3785  loss_bbox: 0.2077
2025/05/12 13:42:04 - mmengine - INFO - Epoch(train)  [7][350/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:55:54  time: 0.2585  data_time: 0.0043  memory: 5471  grad_norm: 0.5421  loss: 0.5513  loss_cls: 0.3673  loss_bbox: 0.1840
2025/05/12 13:42:16 - mmengine - INFO - Epoch(train)  [7][400/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:55:41  time: 0.2522  data_time: 0.0042  memory: 5223  grad_norm: 0.5698  loss: 0.5483  loss_cls: 0.3503  loss_bbox: 0.1980
2025/05/12 13:42:29 - mmengine - INFO - Epoch(train)  [7][450/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:55:28  time: 0.2562  data_time: 0.0042  memory: 5383  grad_norm: 0.5870  loss: 0.5700  loss_cls: 0.3723  loss_bbox: 0.1978
2025/05/12 13:42:42 - mmengine - INFO - Epoch(train)  [7][500/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:55:16  time: 0.2550  data_time: 0.0042  memory: 5409  grad_norm: 0.6346  loss: 0.6205  loss_cls: 0.4035  loss_bbox: 0.2170
2025/05/12 13:42:55 - mmengine - INFO - Epoch(train)  [7][550/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:55:03  time: 0.2565  data_time: 0.0042  memory: 5368  grad_norm: 0.5550  loss: 0.5748  loss_cls: 0.3863  loss_bbox: 0.1885
2025/05/12 13:42:58 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:43:02 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:43:03 - mmengine - INFO - bbox_mAP_copypaste: 0.202 0.402 0.172 -1.000 0.150 0.208
2025/05/12 13:43:03 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.2020  coco/bbox_mAP_50: 0.4020  coco/bbox_mAP_75: 0.1720  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1500  coco/bbox_mAP_l: 0.2080  data_time: 0.0017  time: 0.0770
2025/05/12 13:43:16 - mmengine - INFO - Epoch(train)  [8][ 50/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:54:47  time: 0.2555  data_time: 0.0049  memory: 5440  grad_norm: 0.5441  loss: 0.5468  loss_cls: 0.3555  loss_bbox: 0.1913
2025/05/12 13:43:18 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:43:29 - mmengine - INFO - Epoch(train)  [8][100/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:54:34  time: 0.2490  data_time: 0.0043  memory: 5223  grad_norm: 0.6792  loss: 0.5487  loss_cls: 0.3674  loss_bbox: 0.1813
2025/05/12 13:43:41 - mmengine - INFO - Epoch(train)  [8][150/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:54:21  time: 0.2542  data_time: 0.0042  memory: 5409  grad_norm: 0.5813  loss: 0.6258  loss_cls: 0.4220  loss_bbox: 0.2038
2025/05/12 13:43:54 - mmengine - INFO - Epoch(train)  [8][200/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:54:07  time: 0.2509  data_time: 0.0042  memory: 5393  grad_norm: 0.5951  loss: 0.5916  loss_cls: 0.3906  loss_bbox: 0.2010
2025/05/12 13:44:07 - mmengine - INFO - Epoch(train)  [8][250/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:53:54  time: 0.2527  data_time: 0.0043  memory: 5296  grad_norm: 0.5798  loss: 0.5508  loss_cls: 0.3706  loss_bbox: 0.1801
2025/05/12 13:44:19 - mmengine - INFO - Epoch(train)  [8][300/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:53:41  time: 0.2506  data_time: 0.0043  memory: 5265  grad_norm: 0.5818  loss: 0.5659  loss_cls: 0.3560  loss_bbox: 0.2099
2025/05/12 13:44:32 - mmengine - INFO - Epoch(train)  [8][350/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:53:28  time: 0.2555  data_time: 0.0042  memory: 5414  grad_norm: 0.5871  loss: 0.5507  loss_cls: 0.3570  loss_bbox: 0.1937
2025/05/12 13:44:44 - mmengine - INFO - Epoch(train)  [8][400/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:53:15  time: 0.2512  data_time: 0.0042  memory: 5393  grad_norm: 0.5602  loss: 0.5639  loss_cls: 0.3729  loss_bbox: 0.1910
2025/05/12 13:44:57 - mmengine - INFO - Epoch(train)  [8][450/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:53:03  time: 0.2569  data_time: 0.0042  memory: 5239  grad_norm: 0.6156  loss: 0.5900  loss_cls: 0.3766  loss_bbox: 0.2134
2025/05/12 13:45:10 - mmengine - INFO - Epoch(train)  [8][500/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:52:50  time: 0.2533  data_time: 0.0043  memory: 5275  grad_norm: 0.5631  loss: 0.5459  loss_cls: 0.3442  loss_bbox: 0.2017
2025/05/12 13:45:23 - mmengine - INFO - Epoch(train)  [8][550/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:52:37  time: 0.2567  data_time: 0.0043  memory: 5394  grad_norm: 0.5641  loss: 0.5269  loss_cls: 0.3389  loss_bbox: 0.1880
2025/05/12 13:45:26 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:45:30 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:45:31 - mmengine - INFO - bbox_mAP_copypaste: 0.313 0.552 0.335 -1.000 0.212 0.335
2025/05/12 13:45:31 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.3130  coco/bbox_mAP_50: 0.5520  coco/bbox_mAP_75: 0.3350  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2120  coco/bbox_mAP_l: 0.3350  data_time: 0.0017  time: 0.0775
2025/05/12 13:45:31 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/12 13:45:32 - mmengine - INFO - The best checkpoint with 0.3130 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/12 13:45:45 - mmengine - INFO - Epoch(train)  [9][ 50/563]  base_lr: 1.5978e-01 lr: 1.5978e-01  eta: 0:52:22  time: 0.2610  data_time: 0.0050  memory: 5461  grad_norm: 0.5594  loss: 0.5350  loss_cls: 0.3476  loss_bbox: 0.1874
2025/05/12 13:45:58 - mmengine - INFO - Epoch(train)  [9][100/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:52:09  time: 0.2553  data_time: 0.0043  memory: 5398  grad_norm: 0.5847  loss: 0.5401  loss_cls: 0.3538  loss_bbox: 0.1863
2025/05/12 13:46:11 - mmengine - INFO - Epoch(train)  [9][150/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:51:57  time: 0.2545  data_time: 0.0042  memory: 5373  grad_norm: 0.5462  loss: 0.5434  loss_cls: 0.3566  loss_bbox: 0.1867
2025/05/12 13:46:23 - mmengine - INFO - Epoch(train)  [9][200/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:51:43  time: 0.2512  data_time: 0.0043  memory: 5373  grad_norm: 0.5344  loss: 0.5456  loss_cls: 0.3679  loss_bbox: 0.1778
2025/05/12 13:46:36 - mmengine - INFO - Epoch(train)  [9][250/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:51:31  time: 0.2552  data_time: 0.0043  memory: 5466  grad_norm: 0.5641  loss: 0.5652  loss_cls: 0.3677  loss_bbox: 0.1975
2025/05/12 13:46:49 - mmengine - INFO - Epoch(train)  [9][300/563]  base_lr: 1.5975e-01 lr: 1.5975e-01  eta: 0:51:18  time: 0.2508  data_time: 0.0042  memory: 5321  grad_norm: 0.6363  loss: 0.5612  loss_cls: 0.3703  loss_bbox: 0.1908
2025/05/12 13:47:02 - mmengine - INFO - Epoch(train)  [9][350/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:51:05  time: 0.2592  data_time: 0.0042  memory: 5481  grad_norm: 0.6172  loss: 0.5677  loss_cls: 0.3700  loss_bbox: 0.1977
2025/05/12 13:47:14 - mmengine - INFO - Epoch(train)  [9][400/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:50:52  time: 0.2520  data_time: 0.0042  memory: 5316  grad_norm: 0.5754  loss: 0.5309  loss_cls: 0.3397  loss_bbox: 0.1912
2025/05/12 13:47:27 - mmengine - INFO - Epoch(train)  [9][450/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:50:39  time: 0.2520  data_time: 0.0043  memory: 5306  grad_norm: 0.5567  loss: 0.5466  loss_cls: 0.3648  loss_bbox: 0.1818
2025/05/12 13:47:38 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:47:39 - mmengine - INFO - Epoch(train)  [9][500/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:50:26  time: 0.2517  data_time: 0.0042  memory: 5264  grad_norm: 0.6263  loss: 0.5387  loss_cls: 0.3444  loss_bbox: 0.1943
2025/05/12 13:47:52 - mmengine - INFO - Epoch(train)  [9][550/563]  base_lr: 1.5972e-01 lr: 1.5972e-01  eta: 0:50:13  time: 0.2527  data_time: 0.0043  memory: 5393  grad_norm: 0.6399  loss: 0.5458  loss_cls: 0.3533  loss_bbox: 0.1925
2025/05/12 13:47:56 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:48:00 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:48:01 - mmengine - INFO - bbox_mAP_copypaste: 0.300 0.551 0.296 -1.000 0.213 0.319
2025/05/12 13:48:01 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.3000  coco/bbox_mAP_50: 0.5510  coco/bbox_mAP_75: 0.2960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2130  coco/bbox_mAP_l: 0.3190  data_time: 0.0016  time: 0.0798
2025/05/12 13:48:13 - mmengine - INFO - Epoch(train) [10][ 50/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:49:57  time: 0.2485  data_time: 0.0049  memory: 5378  grad_norm: 0.6000  loss: 0.5723  loss_cls: 0.3581  loss_bbox: 0.2142
2025/05/12 13:48:26 - mmengine - INFO - Epoch(train) [10][100/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:49:43  time: 0.2475  data_time: 0.0042  memory: 5373  grad_norm: 0.6486  loss: 0.5874  loss_cls: 0.3918  loss_bbox: 0.1955
2025/05/12 13:48:39 - mmengine - INFO - Epoch(train) [10][150/563]  base_lr: 1.5970e-01 lr: 1.5970e-01  eta: 0:49:31  time: 0.2573  data_time: 0.0043  memory: 5450  grad_norm: 0.6824  loss: 0.5544  loss_cls: 0.3545  loss_bbox: 0.1999
2025/05/12 13:48:51 - mmengine - INFO - Epoch(train) [10][200/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:49:18  time: 0.2533  data_time: 0.0042  memory: 5321  grad_norm: 0.6085  loss: 0.5476  loss_cls: 0.3625  loss_bbox: 0.1851
2025/05/12 13:49:04 - mmengine - INFO - Epoch(train) [10][250/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:49:05  time: 0.2560  data_time: 0.0042  memory: 5440  grad_norm: 0.6416  loss: 0.5724  loss_cls: 0.3780  loss_bbox: 0.1944
2025/05/12 13:49:17 - mmengine - INFO - Epoch(train) [10][300/563]  base_lr: 1.5968e-01 lr: 1.5968e-01  eta: 0:48:53  time: 0.2529  data_time: 0.0042  memory: 5398  grad_norm: 0.5576  loss: 0.5494  loss_cls: 0.3480  loss_bbox: 0.2014
2025/05/12 13:49:29 - mmengine - INFO - Epoch(train) [10][350/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:48:40  time: 0.2534  data_time: 0.0042  memory: 5362  grad_norm: 0.6539  loss: 0.5525  loss_cls: 0.3662  loss_bbox: 0.1864
2025/05/12 13:49:42 - mmengine - INFO - Epoch(train) [10][400/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:48:27  time: 0.2523  data_time: 0.0043  memory: 5414  grad_norm: 0.5896  loss: 0.5674  loss_cls: 0.3711  loss_bbox: 0.1964
2025/05/12 13:49:55 - mmengine - INFO - Epoch(train) [10][450/563]  base_lr: 1.5966e-01 lr: 1.5966e-01  eta: 0:48:14  time: 0.2516  data_time: 0.0043  memory: 5414  grad_norm: 0.5865  loss: 0.5493  loss_cls: 0.3503  loss_bbox: 0.1989
2025/05/12 13:50:07 - mmengine - INFO - Epoch(train) [10][500/563]  base_lr: 1.5965e-01 lr: 1.5965e-01  eta: 0:48:01  time: 0.2566  data_time: 0.0043  memory: 5296  grad_norm: 0.5278  loss: 0.5088  loss_cls: 0.3234  loss_bbox: 0.1853
2025/05/12 13:50:20 - mmengine - INFO - Epoch(train) [10][550/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:47:48  time: 0.2522  data_time: 0.0043  memory: 5419  grad_norm: 0.6380  loss: 0.5831  loss_cls: 0.3917  loss_bbox: 0.1914
2025/05/12 13:50:23 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:50:27 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:50:28 - mmengine - INFO - bbox_mAP_copypaste: 0.214 0.370 0.234 -1.000 0.152 0.232
2025/05/12 13:50:28 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.2140  coco/bbox_mAP_50: 0.3700  coco/bbox_mAP_75: 0.2340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1520  coco/bbox_mAP_l: 0.2320  data_time: 0.0016  time: 0.0758
2025/05/12 13:50:41 - mmengine - INFO - Epoch(train) [11][ 50/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:47:32  time: 0.2547  data_time: 0.0049  memory: 5455  grad_norm: 0.5564  loss: 0.5170  loss_cls: 0.3320  loss_bbox: 0.1850
2025/05/12 13:50:54 - mmengine - INFO - Epoch(train) [11][100/563]  base_lr: 1.5963e-01 lr: 1.5963e-01  eta: 0:47:19  time: 0.2497  data_time: 0.0042  memory: 5238  grad_norm: 0.5981  loss: 0.5438  loss_cls: 0.3468  loss_bbox: 0.1971
2025/05/12 13:51:06 - mmengine - INFO - Epoch(train) [11][150/563]  base_lr: 1.5962e-01 lr: 1.5962e-01  eta: 0:47:06  time: 0.2528  data_time: 0.0042  memory: 5398  grad_norm: 0.6375  loss: 0.5712  loss_cls: 0.3749  loss_bbox: 0.1963
2025/05/12 13:51:19 - mmengine - INFO - Epoch(train) [11][200/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:46:54  time: 0.2570  data_time: 0.0042  memory: 5399  grad_norm: 0.6004  loss: 0.5775  loss_cls: 0.3899  loss_bbox: 0.1876
2025/05/12 13:51:32 - mmengine - INFO - Epoch(train) [11][250/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:46:41  time: 0.2540  data_time: 0.0043  memory: 5388  grad_norm: 0.5454  loss: 0.5176  loss_cls: 0.3392  loss_bbox: 0.1785
2025/05/12 13:51:44 - mmengine - INFO - Epoch(train) [11][300/563]  base_lr: 1.5960e-01 lr: 1.5960e-01  eta: 0:46:28  time: 0.2489  data_time: 0.0043  memory: 5435  grad_norm: 0.5789  loss: 0.5319  loss_cls: 0.3477  loss_bbox: 0.1842
2025/05/12 13:51:57 - mmengine - INFO - Epoch(train) [11][350/563]  base_lr: 1.5959e-01 lr: 1.5959e-01  eta: 0:46:15  time: 0.2528  data_time: 0.0042  memory: 5409  grad_norm: 0.5603  loss: 0.5321  loss_cls: 0.3399  loss_bbox: 0.1922
2025/05/12 13:52:02 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:52:10 - mmengine - INFO - Epoch(train) [11][400/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:46:03  time: 0.2587  data_time: 0.0042  memory: 5300  grad_norm: 0.5583  loss: 0.5325  loss_cls: 0.3487  loss_bbox: 0.1837
2025/05/12 13:52:23 - mmengine - INFO - Epoch(train) [11][450/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:45:50  time: 0.2567  data_time: 0.0042  memory: 5461  grad_norm: 0.5982  loss: 0.5558  loss_cls: 0.3647  loss_bbox: 0.1911
2025/05/12 13:52:35 - mmengine - INFO - Epoch(train) [11][500/563]  base_lr: 1.5957e-01 lr: 1.5957e-01  eta: 0:45:37  time: 0.2521  data_time: 0.0043  memory: 5373  grad_norm: 0.5822  loss: 0.5289  loss_cls: 0.3453  loss_bbox: 0.1836
2025/05/12 13:52:48 - mmengine - INFO - Epoch(train) [11][550/563]  base_lr: 1.5956e-01 lr: 1.5956e-01  eta: 0:45:24  time: 0.2541  data_time: 0.0042  memory: 5275  grad_norm: 0.5694  loss: 0.5070  loss_cls: 0.3268  loss_bbox: 0.1802
2025/05/12 13:52:51 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:52:55 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:52:56 - mmengine - INFO - bbox_mAP_copypaste: 0.329 0.590 0.350 -1.000 0.232 0.353
2025/05/12 13:52:57 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.3290  coco/bbox_mAP_50: 0.5900  coco/bbox_mAP_75: 0.3500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2320  coco/bbox_mAP_l: 0.3530  data_time: 0.0016  time: 0.0746
2025/05/12 13:52:57 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/12 13:52:57 - mmengine - INFO - The best checkpoint with 0.3290 coco/bbox_mAP at 11 epoch is saved to best_coco_bbox_mAP_epoch_11.pth.
2025/05/12 13:53:10 - mmengine - INFO - Epoch(train) [12][ 50/563]  base_lr: 1.5955e-01 lr: 1.5955e-01  eta: 0:45:09  time: 0.2589  data_time: 0.0049  memory: 5311  grad_norm: 0.5616  loss: 0.5023  loss_cls: 0.3236  loss_bbox: 0.1786
2025/05/12 13:53:23 - mmengine - INFO - Epoch(train) [12][100/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:44:57  time: 0.2606  data_time: 0.0044  memory: 5378  grad_norm: 0.5766  loss: 0.5221  loss_cls: 0.3328  loss_bbox: 0.1893
2025/05/12 13:53:36 - mmengine - INFO - Epoch(train) [12][150/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:44:44  time: 0.2557  data_time: 0.0043  memory: 5254  grad_norm: 0.5924  loss: 0.5081  loss_cls: 0.3319  loss_bbox: 0.1762
2025/05/12 13:53:49 - mmengine - INFO - Epoch(train) [12][200/563]  base_lr: 1.5953e-01 lr: 1.5953e-01  eta: 0:44:31  time: 0.2514  data_time: 0.0044  memory: 5316  grad_norm: 0.7436  loss: 0.6357  loss_cls: 0.4040  loss_bbox: 0.2317
2025/05/12 13:54:02 - mmengine - INFO - Epoch(train) [12][250/563]  base_lr: 1.5952e-01 lr: 1.5952e-01  eta: 0:44:18  time: 0.2562  data_time: 0.0043  memory: 5290  grad_norm: 0.5362  loss: 0.5278  loss_cls: 0.3479  loss_bbox: 0.1799
2025/05/12 13:54:14 - mmengine - INFO - Epoch(train) [12][300/563]  base_lr: 1.5951e-01 lr: 1.5951e-01  eta: 0:44:06  time: 0.2542  data_time: 0.0042  memory: 5383  grad_norm: 0.6548  loss: 0.5767  loss_cls: 0.3842  loss_bbox: 0.1926
2025/05/12 13:54:27 - mmengine - INFO - Epoch(train) [12][350/563]  base_lr: 1.5950e-01 lr: 1.5950e-01  eta: 0:43:53  time: 0.2541  data_time: 0.0042  memory: 5471  grad_norm: 0.5415  loss: 0.5415  loss_cls: 0.3521  loss_bbox: 0.1894
2025/05/12 13:54:40 - mmengine - INFO - Epoch(train) [12][400/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:43:40  time: 0.2527  data_time: 0.0043  memory: 5337  grad_norm: 0.6087  loss: 0.5350  loss_cls: 0.3540  loss_bbox: 0.1810
2025/05/12 13:54:52 - mmengine - INFO - Epoch(train) [12][450/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:43:27  time: 0.2502  data_time: 0.0042  memory: 5398  grad_norm: 0.5340  loss: 0.5065  loss_cls: 0.3245  loss_bbox: 0.1820
2025/05/12 13:55:05 - mmengine - INFO - Epoch(train) [12][500/563]  base_lr: 1.5948e-01 lr: 1.5948e-01  eta: 0:43:14  time: 0.2500  data_time: 0.0043  memory: 5429  grad_norm: 0.5115  loss: 0.4988  loss_cls: 0.3278  loss_bbox: 0.1710
2025/05/12 13:55:17 - mmengine - INFO - Epoch(train) [12][550/563]  base_lr: 1.5947e-01 lr: 1.5947e-01  eta: 0:43:01  time: 0.2531  data_time: 0.0041  memory: 5342  grad_norm: 0.5784  loss: 0.5093  loss_cls: 0.3319  loss_bbox: 0.1774
2025/05/12 13:55:21 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:55:24 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:55:26 - mmengine - INFO - bbox_mAP_copypaste: 0.316 0.586 0.320 -1.000 0.209 0.337
2025/05/12 13:55:26 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.3160  coco/bbox_mAP_50: 0.5860  coco/bbox_mAP_75: 0.3200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2090  coco/bbox_mAP_l: 0.3370  data_time: 0.0016  time: 0.0728
2025/05/12 13:55:39 - mmengine - INFO - Epoch(train) [13][ 50/563]  base_lr: 1.5946e-01 lr: 1.5946e-01  eta: 0:42:45  time: 0.2555  data_time: 0.0050  memory: 5388  grad_norm: 0.6109  loss: 0.5646  loss_cls: 0.3494  loss_bbox: 0.2152
2025/05/12 13:55:51 - mmengine - INFO - Epoch(train) [13][100/563]  base_lr: 1.5945e-01 lr: 1.5945e-01  eta: 0:42:33  time: 0.2533  data_time: 0.0042  memory: 5394  grad_norm: 0.6094  loss: 0.5519  loss_cls: 0.3523  loss_bbox: 0.1996
2025/05/12 13:56:04 - mmengine - INFO - Epoch(train) [13][150/563]  base_lr: 1.5944e-01 lr: 1.5944e-01  eta: 0:42:20  time: 0.2503  data_time: 0.0043  memory: 5305  grad_norm: 0.5458  loss: 0.5122  loss_cls: 0.3274  loss_bbox: 0.1848
2025/05/12 13:56:17 - mmengine - INFO - Epoch(train) [13][200/563]  base_lr: 1.5943e-01 lr: 1.5943e-01  eta: 0:42:07  time: 0.2534  data_time: 0.0043  memory: 5326  grad_norm: 0.6171  loss: 0.5292  loss_cls: 0.3507  loss_bbox: 0.1785
2025/05/12 13:56:28 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:56:29 - mmengine - INFO - Epoch(train) [13][250/563]  base_lr: 1.5942e-01 lr: 1.5942e-01  eta: 0:41:54  time: 0.2519  data_time: 0.0043  memory: 5357  grad_norm: 0.5795  loss: 0.5248  loss_cls: 0.3476  loss_bbox: 0.1772
2025/05/12 13:56:42 - mmengine - INFO - Epoch(train) [13][300/563]  base_lr: 1.5941e-01 lr: 1.5941e-01  eta: 0:41:41  time: 0.2552  data_time: 0.0044  memory: 5404  grad_norm: 0.5279  loss: 0.4968  loss_cls: 0.3268  loss_bbox: 0.1700
2025/05/12 13:56:54 - mmengine - INFO - Epoch(train) [13][350/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:41:28  time: 0.2445  data_time: 0.0043  memory: 5450  grad_norm: 0.5768  loss: 0.5019  loss_cls: 0.3139  loss_bbox: 0.1879
2025/05/12 13:57:07 - mmengine - INFO - Epoch(train) [13][400/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:41:15  time: 0.2569  data_time: 0.0043  memory: 5450  grad_norm: 0.5572  loss: 0.5216  loss_cls: 0.3278  loss_bbox: 0.1938
2025/05/12 13:57:20 - mmengine - INFO - Epoch(train) [13][450/563]  base_lr: 1.5939e-01 lr: 1.5939e-01  eta: 0:41:03  time: 0.2557  data_time: 0.0042  memory: 5409  grad_norm: 0.6298  loss: 0.5449  loss_cls: 0.3483  loss_bbox: 0.1967
2025/05/12 13:57:33 - mmengine - INFO - Epoch(train) [13][500/563]  base_lr: 1.5938e-01 lr: 1.5938e-01  eta: 0:40:50  time: 0.2572  data_time: 0.0043  memory: 5456  grad_norm: 0.5910  loss: 0.5393  loss_cls: 0.3382  loss_bbox: 0.2011
2025/05/12 13:57:45 - mmengine - INFO - Epoch(train) [13][550/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 0:40:37  time: 0.2487  data_time: 0.0043  memory: 5228  grad_norm: 0.6084  loss: 0.5162  loss_cls: 0.3336  loss_bbox: 0.1826
2025/05/12 13:57:48 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 13:57:52 - mmengine - INFO - Evaluating bbox...
2025/05/12 13:57:54 - mmengine - INFO - bbox_mAP_copypaste: 0.337 0.587 0.378 -1.000 0.225 0.357
2025/05/12 13:57:54 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.3370  coco/bbox_mAP_50: 0.5870  coco/bbox_mAP_75: 0.3780  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2250  coco/bbox_mAP_l: 0.3570  data_time: 0.0017  time: 0.0765
2025/05/12 13:57:54 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_11.pth is removed
2025/05/12 13:57:54 - mmengine - INFO - The best checkpoint with 0.3370 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2025/05/12 13:58:07 - mmengine - INFO - Epoch(train) [14][ 50/563]  base_lr: 1.5936e-01 lr: 1.5936e-01  eta: 0:40:21  time: 0.2608  data_time: 0.0050  memory: 5409  grad_norm: 0.6043  loss: 0.5290  loss_cls: 0.3475  loss_bbox: 0.1815
2025/05/12 13:58:20 - mmengine - INFO - Epoch(train) [14][100/563]  base_lr: 1.5935e-01 lr: 1.5935e-01  eta: 0:40:09  time: 0.2526  data_time: 0.0043  memory: 5331  grad_norm: 0.5770  loss: 0.5330  loss_cls: 0.3488  loss_bbox: 0.1842
2025/05/12 13:58:33 - mmengine - INFO - Epoch(train) [14][150/563]  base_lr: 1.5934e-01 lr: 1.5934e-01  eta: 0:39:56  time: 0.2559  data_time: 0.0042  memory: 5347  grad_norm: 0.6087  loss: 0.4896  loss_cls: 0.3159  loss_bbox: 0.1737
2025/05/12 13:58:46 - mmengine - INFO - Epoch(train) [14][200/563]  base_lr: 1.5933e-01 lr: 1.5933e-01  eta: 0:39:43  time: 0.2516  data_time: 0.0041  memory: 5435  grad_norm: 0.6214  loss: 0.5164  loss_cls: 0.3424  loss_bbox: 0.1740
2025/05/12 13:58:58 - mmengine - INFO - Epoch(train) [14][250/563]  base_lr: 1.5932e-01 lr: 1.5932e-01  eta: 0:39:30  time: 0.2514  data_time: 0.0041  memory: 5450  grad_norm: 0.6642  loss: 0.5246  loss_cls: 0.3515  loss_bbox: 0.1731
2025/05/12 13:59:11 - mmengine - INFO - Epoch(train) [14][300/563]  base_lr: 1.5931e-01 lr: 1.5931e-01  eta: 0:39:18  time: 0.2549  data_time: 0.0042  memory: 5290  grad_norm: 0.6117  loss: 0.5275  loss_cls: 0.3435  loss_bbox: 0.1839
2025/05/12 13:59:23 - mmengine - INFO - Epoch(train) [14][350/563]  base_lr: 1.5930e-01 lr: 1.5930e-01  eta: 0:39:05  time: 0.2530  data_time: 0.0043  memory: 5460  grad_norm: 0.6297  loss: 0.5265  loss_cls: 0.3463  loss_bbox: 0.1802
2025/05/12 13:59:36 - mmengine - INFO - Epoch(train) [14][400/563]  base_lr: 1.5929e-01 lr: 1.5929e-01  eta: 0:38:52  time: 0.2561  data_time: 0.0042  memory: 5466  grad_norm: 0.5780  loss: 0.5176  loss_cls: 0.3480  loss_bbox: 0.1696
2025/05/12 13:59:49 - mmengine - INFO - Epoch(train) [14][450/563]  base_lr: 1.5928e-01 lr: 1.5928e-01  eta: 0:38:39  time: 0.2511  data_time: 0.0044  memory: 5347  grad_norm: 0.6134  loss: 0.5293  loss_cls: 0.3423  loss_bbox: 0.1870
2025/05/12 14:00:02 - mmengine - INFO - Epoch(train) [14][500/563]  base_lr: 1.5927e-01 lr: 1.5927e-01  eta: 0:38:27  time: 0.2569  data_time: 0.0041  memory: 5332  grad_norm: 0.6109  loss: 0.5344  loss_cls: 0.3502  loss_bbox: 0.1842
2025/05/12 14:00:14 - mmengine - INFO - Epoch(train) [14][550/563]  base_lr: 1.5926e-01 lr: 1.5926e-01  eta: 0:38:14  time: 0.2534  data_time: 0.0042  memory: 5414  grad_norm: 0.6757  loss: 0.5910  loss_cls: 0.3376  loss_bbox: 0.2534
2025/05/12 14:00:18 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:00:21 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:00:23 - mmengine - INFO - bbox_mAP_copypaste: 0.350 0.622 0.379 -1.000 0.264 0.371
2025/05/12 14:00:23 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.3500  coco/bbox_mAP_50: 0.6220  coco/bbox_mAP_75: 0.3790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2640  coco/bbox_mAP_l: 0.3710  data_time: 0.0015  time: 0.0726
2025/05/12 14:00:23 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_13.pth is removed
2025/05/12 14:00:24 - mmengine - INFO - The best checkpoint with 0.3500 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/12 14:00:37 - mmengine - INFO - Epoch(train) [15][ 50/563]  base_lr: 1.5924e-01 lr: 1.5924e-01  eta: 0:37:58  time: 0.2574  data_time: 0.0050  memory: 5352  grad_norm: 0.6042  loss: 0.5356  loss_cls: 0.3326  loss_bbox: 0.2029
2025/05/12 14:00:49 - mmengine - INFO - Epoch(train) [15][100/563]  base_lr: 1.5923e-01 lr: 1.5923e-01  eta: 0:37:45  time: 0.2511  data_time: 0.0042  memory: 5295  grad_norm: 0.5598  loss: 0.5103  loss_cls: 0.3215  loss_bbox: 0.1888
2025/05/12 14:00:54 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:01:02 - mmengine - INFO - Epoch(train) [15][150/563]  base_lr: 1.5922e-01 lr: 1.5922e-01  eta: 0:37:33  time: 0.2557  data_time: 0.0042  memory: 5316  grad_norm: 0.5952  loss: 0.5041  loss_cls: 0.3272  loss_bbox: 0.1769
2025/05/12 14:01:15 - mmengine - INFO - Epoch(train) [15][200/563]  base_lr: 1.5921e-01 lr: 1.5921e-01  eta: 0:37:20  time: 0.2551  data_time: 0.0041  memory: 5399  grad_norm: 0.5963  loss: 0.5656  loss_cls: 0.3936  loss_bbox: 0.1721
2025/05/12 14:01:27 - mmengine - INFO - Epoch(train) [15][250/563]  base_lr: 1.5920e-01 lr: 1.5920e-01  eta: 0:37:07  time: 0.2526  data_time: 0.0043  memory: 5254  grad_norm: 0.6482  loss: 0.5446  loss_cls: 0.3545  loss_bbox: 0.1901
2025/05/12 14:01:40 - mmengine - INFO - Epoch(train) [15][300/563]  base_lr: 1.5919e-01 lr: 1.5919e-01  eta: 0:36:55  time: 0.2600  data_time: 0.0043  memory: 5430  grad_norm: 0.6070  loss: 0.5175  loss_cls: 0.3284  loss_bbox: 0.1891
2025/05/12 14:01:53 - mmengine - INFO - Epoch(train) [15][350/563]  base_lr: 1.5918e-01 lr: 1.5918e-01  eta: 0:36:42  time: 0.2503  data_time: 0.0042  memory: 5316  grad_norm: 0.5917  loss: 0.4890  loss_cls: 0.3211  loss_bbox: 0.1680
2025/05/12 14:02:05 - mmengine - INFO - Epoch(train) [15][400/563]  base_lr: 1.5917e-01 lr: 1.5917e-01  eta: 0:36:29  time: 0.2512  data_time: 0.0042  memory: 5456  grad_norm: 0.5451  loss: 0.5094  loss_cls: 0.3351  loss_bbox: 0.1743
2025/05/12 14:02:18 - mmengine - INFO - Epoch(train) [15][450/563]  base_lr: 1.5916e-01 lr: 1.5916e-01  eta: 0:36:16  time: 0.2543  data_time: 0.0042  memory: 5368  grad_norm: 0.5653  loss: 0.5138  loss_cls: 0.3458  loss_bbox: 0.1680
2025/05/12 14:02:31 - mmengine - INFO - Epoch(train) [15][500/563]  base_lr: 1.5915e-01 lr: 1.5915e-01  eta: 0:36:03  time: 0.2535  data_time: 0.0042  memory: 5363  grad_norm: 0.5502  loss: 0.5011  loss_cls: 0.3252  loss_bbox: 0.1759
2025/05/12 14:02:44 - mmengine - INFO - Epoch(train) [15][550/563]  base_lr: 1.5914e-01 lr: 1.5914e-01  eta: 0:35:51  time: 0.2575  data_time: 0.0043  memory: 5414  grad_norm: 0.6564  loss: 0.5300  loss_cls: 0.3328  loss_bbox: 0.1972
2025/05/12 14:02:47 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:02:51 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:02:52 - mmengine - INFO - bbox_mAP_copypaste: 0.333 0.588 0.360 -1.000 0.257 0.353
2025/05/12 14:02:52 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.3330  coco/bbox_mAP_50: 0.5880  coco/bbox_mAP_75: 0.3600  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2570  coco/bbox_mAP_l: 0.3530  data_time: 0.0015  time: 0.0729
2025/05/12 14:03:05 - mmengine - INFO - Epoch(train) [16][ 50/563]  base_lr: 1.5913e-01 lr: 1.5913e-01  eta: 0:35:35  time: 0.2525  data_time: 0.0049  memory: 5269  grad_norm: 0.6701  loss: 0.6128  loss_cls: 0.4130  loss_bbox: 0.1998
2025/05/12 14:03:17 - mmengine - INFO - Epoch(train) [16][100/563]  base_lr: 1.5911e-01 lr: 1.5911e-01  eta: 0:35:22  time: 0.2541  data_time: 0.0042  memory: 5352  grad_norm: 0.5742  loss: 0.5150  loss_cls: 0.3433  loss_bbox: 0.1717
2025/05/12 14:03:30 - mmengine - INFO - Epoch(train) [16][150/563]  base_lr: 1.5910e-01 lr: 1.5910e-01  eta: 0:35:09  time: 0.2536  data_time: 0.0043  memory: 5301  grad_norm: 0.6138  loss: 0.4890  loss_cls: 0.3163  loss_bbox: 0.1728
2025/05/12 14:03:43 - mmengine - INFO - Epoch(train) [16][200/563]  base_lr: 1.5909e-01 lr: 1.5909e-01  eta: 0:34:56  time: 0.2554  data_time: 0.0042  memory: 5311  grad_norm: 0.5844  loss: 0.5249  loss_cls: 0.3342  loss_bbox: 0.1907
2025/05/12 14:03:56 - mmengine - INFO - Epoch(train) [16][250/563]  base_lr: 1.5908e-01 lr: 1.5908e-01  eta: 0:34:44  time: 0.2541  data_time: 0.0042  memory: 5347  grad_norm: 0.5935  loss: 0.5259  loss_cls: 0.3330  loss_bbox: 0.1928
2025/05/12 14:04:08 - mmengine - INFO - Epoch(train) [16][300/563]  base_lr: 1.5907e-01 lr: 1.5907e-01  eta: 0:34:31  time: 0.2520  data_time: 0.0043  memory: 5399  grad_norm: 0.5371  loss: 0.4780  loss_cls: 0.3047  loss_bbox: 0.1733
2025/05/12 14:04:21 - mmengine - INFO - Epoch(train) [16][350/563]  base_lr: 1.5906e-01 lr: 1.5906e-01  eta: 0:34:18  time: 0.2517  data_time: 0.0043  memory: 5347  grad_norm: 0.5838  loss: 0.5165  loss_cls: 0.3306  loss_bbox: 0.1858
2025/05/12 14:04:34 - mmengine - INFO - Epoch(train) [16][400/563]  base_lr: 1.5905e-01 lr: 1.5905e-01  eta: 0:34:05  time: 0.2566  data_time: 0.0043  memory: 5461  grad_norm: 0.6221  loss: 0.5139  loss_cls: 0.3208  loss_bbox: 0.1931
2025/05/12 14:04:47 - mmengine - INFO - Epoch(train) [16][450/563]  base_lr: 1.5904e-01 lr: 1.5904e-01  eta: 0:33:53  time: 0.2586  data_time: 0.0042  memory: 5450  grad_norm: 0.6224  loss: 0.5417  loss_cls: 0.3407  loss_bbox: 0.2010
2025/05/12 14:04:59 - mmengine - INFO - Epoch(train) [16][500/563]  base_lr: 1.5902e-01 lr: 1.5902e-01  eta: 0:33:40  time: 0.2523  data_time: 0.0042  memory: 5450  grad_norm: 0.5481  loss: 0.5278  loss_cls: 0.3408  loss_bbox: 0.1870
2025/05/12 14:05:12 - mmengine - INFO - Epoch(train) [16][550/563]  base_lr: 1.5901e-01 lr: 1.5901e-01  eta: 0:33:27  time: 0.2530  data_time: 0.0042  memory: 5399  grad_norm: 0.5447  loss: 0.4927  loss_cls: 0.3194  loss_bbox: 0.1733
2025/05/12 14:05:13 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:05:15 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:05:19 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:05:20 - mmengine - INFO - bbox_mAP_copypaste: 0.330 0.596 0.347 -1.000 0.237 0.354
2025/05/12 14:05:20 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.3300  coco/bbox_mAP_50: 0.5960  coco/bbox_mAP_75: 0.3470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2370  coco/bbox_mAP_l: 0.3540  data_time: 0.0016  time: 0.0731
2025/05/12 14:05:33 - mmengine - INFO - Epoch(train) [17][ 50/563]  base_lr: 1.5900e-01 lr: 1.5900e-01  eta: 0:33:11  time: 0.2556  data_time: 0.0049  memory: 5378  grad_norm: 0.5388  loss: 0.4771  loss_cls: 0.3068  loss_bbox: 0.1703
2025/05/12 14:05:46 - mmengine - INFO - Epoch(train) [17][100/563]  base_lr: 1.5899e-01 lr: 1.5899e-01  eta: 0:32:59  time: 0.2529  data_time: 0.0044  memory: 5331  grad_norm: 0.6098  loss: 0.5086  loss_cls: 0.3212  loss_bbox: 0.1874
2025/05/12 14:05:58 - mmengine - INFO - Epoch(train) [17][150/563]  base_lr: 1.5897e-01 lr: 1.5897e-01  eta: 0:32:46  time: 0.2554  data_time: 0.0042  memory: 5429  grad_norm: 0.6086  loss: 0.5152  loss_cls: 0.3255  loss_bbox: 0.1897
2025/05/12 14:06:11 - mmengine - INFO - Epoch(train) [17][200/563]  base_lr: 1.5896e-01 lr: 1.5896e-01  eta: 0:32:33  time: 0.2533  data_time: 0.0042  memory: 5383  grad_norm: 0.5116  loss: 0.4855  loss_cls: 0.3114  loss_bbox: 0.1741
2025/05/12 14:06:24 - mmengine - INFO - Epoch(train) [17][250/563]  base_lr: 1.5895e-01 lr: 1.5895e-01  eta: 0:32:20  time: 0.2541  data_time: 0.0043  memory: 5398  grad_norm: 0.6533  loss: 0.5603  loss_cls: 0.3341  loss_bbox: 0.2263
2025/05/12 14:06:37 - mmengine - INFO - Epoch(train) [17][300/563]  base_lr: 1.5894e-01 lr: 1.5894e-01  eta: 0:32:08  time: 0.2551  data_time: 0.0042  memory: 5481  grad_norm: 0.5622  loss: 0.5089  loss_cls: 0.3163  loss_bbox: 0.1926
2025/05/12 14:06:49 - mmengine - INFO - Epoch(train) [17][350/563]  base_lr: 1.5893e-01 lr: 1.5893e-01  eta: 0:31:55  time: 0.2552  data_time: 0.0042  memory: 5326  grad_norm: 0.5702  loss: 0.4872  loss_cls: 0.3106  loss_bbox: 0.1765
2025/05/12 14:07:02 - mmengine - INFO - Epoch(train) [17][400/563]  base_lr: 1.5891e-01 lr: 1.5891e-01  eta: 0:31:42  time: 0.2509  data_time: 0.0043  memory: 5352  grad_norm: 0.6993  loss: 0.5347  loss_cls: 0.3416  loss_bbox: 0.1932
2025/05/12 14:07:14 - mmengine - INFO - Epoch(train) [17][450/563]  base_lr: 1.5890e-01 lr: 1.5890e-01  eta: 0:31:29  time: 0.2501  data_time: 0.0043  memory: 5311  grad_norm: 0.6091  loss: 0.5118  loss_cls: 0.3332  loss_bbox: 0.1787
2025/05/12 14:07:27 - mmengine - INFO - Epoch(train) [17][500/563]  base_lr: 1.5889e-01 lr: 1.5889e-01  eta: 0:31:17  time: 0.2545  data_time: 0.0043  memory: 5259  grad_norm: 0.5254  loss: 0.4920  loss_cls: 0.3275  loss_bbox: 0.1645
2025/05/12 14:07:40 - mmengine - INFO - Epoch(train) [17][550/563]  base_lr: 1.5888e-01 lr: 1.5888e-01  eta: 0:31:04  time: 0.2497  data_time: 0.0043  memory: 5352  grad_norm: 0.5726  loss: 0.5010  loss_cls: 0.3155  loss_bbox: 0.1855
2025/05/12 14:07:43 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:07:47 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:07:48 - mmengine - INFO - bbox_mAP_copypaste: 0.389 0.668 0.439 -1.000 0.259 0.410
2025/05/12 14:07:48 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.3890  coco/bbox_mAP_50: 0.6680  coco/bbox_mAP_75: 0.4390  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2590  coco/bbox_mAP_l: 0.4100  data_time: 0.0016  time: 0.0736
2025/05/12 14:07:48 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/12 14:07:49 - mmengine - INFO - The best checkpoint with 0.3890 coco/bbox_mAP at 17 epoch is saved to best_coco_bbox_mAP_epoch_17.pth.
2025/05/12 14:08:02 - mmengine - INFO - Epoch(train) [18][ 50/563]  base_lr: 1.5886e-01 lr: 1.5886e-01  eta: 0:30:48  time: 0.2639  data_time: 0.0049  memory: 5471  grad_norm: 0.5867  loss: 0.5084  loss_cls: 0.3278  loss_bbox: 0.1806
2025/05/12 14:08:15 - mmengine - INFO - Epoch(train) [18][100/563]  base_lr: 1.5885e-01 lr: 1.5885e-01  eta: 0:30:35  time: 0.2511  data_time: 0.0042  memory: 5249  grad_norm: 0.5609  loss: 0.4997  loss_cls: 0.3298  loss_bbox: 0.1698
2025/05/12 14:08:27 - mmengine - INFO - Epoch(train) [18][150/563]  base_lr: 1.5883e-01 lr: 1.5883e-01  eta: 0:30:23  time: 0.2537  data_time: 0.0042  memory: 5460  grad_norm: 0.5933  loss: 0.5057  loss_cls: 0.3192  loss_bbox: 0.1865
2025/05/12 14:08:40 - mmengine - INFO - Epoch(train) [18][200/563]  base_lr: 1.5882e-01 lr: 1.5882e-01  eta: 0:30:10  time: 0.2515  data_time: 0.0043  memory: 5316  grad_norm: 0.5660  loss: 0.5033  loss_cls: 0.3192  loss_bbox: 0.1841
2025/05/12 14:08:53 - mmengine - INFO - Epoch(train) [18][250/563]  base_lr: 1.5881e-01 lr: 1.5881e-01  eta: 0:29:57  time: 0.2516  data_time: 0.0043  memory: 5290  grad_norm: 0.6179  loss: 0.5131  loss_cls: 0.3171  loss_bbox: 0.1960
2025/05/12 14:09:05 - mmengine - INFO - Epoch(train) [18][300/563]  base_lr: 1.5880e-01 lr: 1.5880e-01  eta: 0:29:44  time: 0.2528  data_time: 0.0043  memory: 5332  grad_norm: 0.6235  loss: 0.5142  loss_cls: 0.3221  loss_bbox: 0.1921
2025/05/12 14:09:18 - mmengine - INFO - Epoch(train) [18][350/563]  base_lr: 1.5878e-01 lr: 1.5878e-01  eta: 0:29:32  time: 0.2579  data_time: 0.0041  memory: 5347  grad_norm: 0.5807  loss: 0.4995  loss_cls: 0.3244  loss_bbox: 0.1752
2025/05/12 14:09:31 - mmengine - INFO - Epoch(train) [18][400/563]  base_lr: 1.5877e-01 lr: 1.5877e-01  eta: 0:29:19  time: 0.2531  data_time: 0.0042  memory: 5478  grad_norm: 0.5288  loss: 0.4640  loss_cls: 0.3023  loss_bbox: 0.1618
2025/05/12 14:09:38 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:09:43 - mmengine - INFO - Epoch(train) [18][450/563]  base_lr: 1.5876e-01 lr: 1.5876e-01  eta: 0:29:06  time: 0.2544  data_time: 0.0042  memory: 5290  grad_norm: 0.6786  loss: 0.5201  loss_cls: 0.3334  loss_bbox: 0.1867
2025/05/12 14:09:56 - mmengine - INFO - Epoch(train) [18][500/563]  base_lr: 1.5874e-01 lr: 1.5874e-01  eta: 0:28:53  time: 0.2541  data_time: 0.0044  memory: 5275  grad_norm: 0.5672  loss: 0.4961  loss_cls: 0.3215  loss_bbox: 0.1745
2025/05/12 14:10:09 - mmengine - INFO - Epoch(train) [18][550/563]  base_lr: 1.5873e-01 lr: 1.5873e-01  eta: 0:28:41  time: 0.2554  data_time: 0.0042  memory: 5471  grad_norm: 0.5329  loss: 0.4879  loss_cls: 0.3187  loss_bbox: 0.1693
2025/05/12 14:10:12 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:10:16 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:10:17 - mmengine - INFO - bbox_mAP_copypaste: 0.381 0.662 0.425 -1.000 0.258 0.404
2025/05/12 14:10:17 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.3810  coco/bbox_mAP_50: 0.6620  coco/bbox_mAP_75: 0.4250  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.4040  data_time: 0.0016  time: 0.0733
2025/05/12 14:10:30 - mmengine - INFO - Epoch(train) [19][ 50/563]  base_lr: 1.5871e-01 lr: 1.5871e-01  eta: 0:28:25  time: 0.2547  data_time: 0.0051  memory: 5378  grad_norm: 0.7212  loss: 0.5441  loss_cls: 0.3630  loss_bbox: 0.1811
2025/05/12 14:10:43 - mmengine - INFO - Epoch(train) [19][100/563]  base_lr: 1.5870e-01 lr: 1.5870e-01  eta: 0:28:12  time: 0.2560  data_time: 0.0042  memory: 5342  grad_norm: 0.5983  loss: 0.5126  loss_cls: 0.3366  loss_bbox: 0.1759
2025/05/12 14:10:56 - mmengine - INFO - Epoch(train) [19][150/563]  base_lr: 1.5869e-01 lr: 1.5869e-01  eta: 0:27:59  time: 0.2553  data_time: 0.0042  memory: 5363  grad_norm: 0.6378  loss: 0.5014  loss_cls: 0.3155  loss_bbox: 0.1859
2025/05/12 14:11:08 - mmengine - INFO - Epoch(train) [19][200/563]  base_lr: 1.5867e-01 lr: 1.5867e-01  eta: 0:27:47  time: 0.2538  data_time: 0.0042  memory: 5300  grad_norm: 0.6032  loss: 0.5224  loss_cls: 0.3487  loss_bbox: 0.1737
2025/05/12 14:11:21 - mmengine - INFO - Epoch(train) [19][250/563]  base_lr: 1.5866e-01 lr: 1.5866e-01  eta: 0:27:34  time: 0.2554  data_time: 0.0042  memory: 5352  grad_norm: 0.5451  loss: 0.5017  loss_cls: 0.3240  loss_bbox: 0.1777
2025/05/12 14:11:34 - mmengine - INFO - Epoch(train) [19][300/563]  base_lr: 1.5865e-01 lr: 1.5865e-01  eta: 0:27:21  time: 0.2491  data_time: 0.0042  memory: 5342  grad_norm: 0.5600  loss: 0.4799  loss_cls: 0.3163  loss_bbox: 0.1637
2025/05/12 14:11:46 - mmengine - INFO - Epoch(train) [19][350/563]  base_lr: 1.5863e-01 lr: 1.5863e-01  eta: 0:27:08  time: 0.2540  data_time: 0.0043  memory: 5332  grad_norm: 0.6267  loss: 0.5204  loss_cls: 0.3330  loss_bbox: 0.1874
2025/05/12 14:11:59 - mmengine - INFO - Epoch(train) [19][400/563]  base_lr: 1.5862e-01 lr: 1.5862e-01  eta: 0:26:56  time: 0.2542  data_time: 0.0042  memory: 5445  grad_norm: 0.5628  loss: 0.5024  loss_cls: 0.3202  loss_bbox: 0.1823
2025/05/12 14:12:12 - mmengine - INFO - Epoch(train) [19][450/563]  base_lr: 1.5861e-01 lr: 1.5861e-01  eta: 0:26:43  time: 0.2610  data_time: 0.0043  memory: 5435  grad_norm: 0.5391  loss: 0.4714  loss_cls: 0.2995  loss_bbox: 0.1720
2025/05/12 14:12:25 - mmengine - INFO - Epoch(train) [19][500/563]  base_lr: 1.5859e-01 lr: 1.5859e-01  eta: 0:26:30  time: 0.2503  data_time: 0.0043  memory: 5393  grad_norm: 0.6697  loss: 0.5255  loss_cls: 0.3351  loss_bbox: 0.1904
2025/05/12 14:12:38 - mmengine - INFO - Epoch(train) [19][550/563]  base_lr: 1.5858e-01 lr: 1.5858e-01  eta: 0:26:18  time: 0.2610  data_time: 0.0043  memory: 5471  grad_norm: 0.5345  loss: 0.4725  loss_cls: 0.3119  loss_bbox: 0.1606
2025/05/12 14:12:41 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:12:45 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:12:46 - mmengine - INFO - bbox_mAP_copypaste: 0.383 0.676 0.420 -1.000 0.272 0.407
2025/05/12 14:12:46 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.3830  coco/bbox_mAP_50: 0.6760  coco/bbox_mAP_75: 0.4200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2720  coco/bbox_mAP_l: 0.4070  data_time: 0.0015  time: 0.0731
2025/05/12 14:12:59 - mmengine - INFO - Epoch(train) [20][ 50/563]  base_lr: 1.5856e-01 lr: 1.5856e-01  eta: 0:26:02  time: 0.2581  data_time: 0.0049  memory: 5321  grad_norm: 0.5775  loss: 0.4888  loss_cls: 0.3009  loss_bbox: 0.1879
2025/05/12 14:13:12 - mmengine - INFO - Epoch(train) [20][100/563]  base_lr: 1.5855e-01 lr: 1.5855e-01  eta: 0:25:49  time: 0.2555  data_time: 0.0043  memory: 5352  grad_norm: 0.5527  loss: 0.4841  loss_cls: 0.3167  loss_bbox: 0.1673
2025/05/12 14:13:25 - mmengine - INFO - Epoch(train) [20][150/563]  base_lr: 1.5853e-01 lr: 1.5853e-01  eta: 0:25:37  time: 0.2566  data_time: 0.0042  memory: 5342  grad_norm: 0.6144  loss: 0.4870  loss_cls: 0.3176  loss_bbox: 0.1694
2025/05/12 14:13:37 - mmengine - INFO - Epoch(train) [20][200/563]  base_lr: 1.5852e-01 lr: 1.5852e-01  eta: 0:25:24  time: 0.2532  data_time: 0.0042  memory: 5275  grad_norm: 0.6344  loss: 0.5056  loss_cls: 0.3231  loss_bbox: 0.1825
2025/05/12 14:13:50 - mmengine - INFO - Epoch(train) [20][250/563]  base_lr: 1.5850e-01 lr: 1.5850e-01  eta: 0:25:11  time: 0.2569  data_time: 0.0042  memory: 5404  grad_norm: 0.6053  loss: 0.5290  loss_cls: 0.3176  loss_bbox: 0.2114
2025/05/12 14:14:03 - mmengine - INFO - Epoch(train) [20][300/563]  base_lr: 1.5849e-01 lr: 1.5849e-01  eta: 0:24:58  time: 0.2529  data_time: 0.0043  memory: 5275  grad_norm: 0.6984  loss: 0.5465  loss_cls: 0.3639  loss_bbox: 0.1826
2025/05/12 14:14:04 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:14:16 - mmengine - INFO - Epoch(train) [20][350/563]  base_lr: 1.5847e-01 lr: 1.5847e-01  eta: 0:24:46  time: 0.2607  data_time: 0.0042  memory: 5471  grad_norm: 0.5955  loss: 0.5089  loss_cls: 0.3425  loss_bbox: 0.1664
2025/05/12 14:14:29 - mmengine - INFO - Epoch(train) [20][400/563]  base_lr: 1.5846e-01 lr: 1.5846e-01  eta: 0:24:33  time: 0.2561  data_time: 0.0043  memory: 5419  grad_norm: 0.5402  loss: 0.4702  loss_cls: 0.3055  loss_bbox: 0.1647
2025/05/12 14:14:41 - mmengine - INFO - Epoch(train) [20][450/563]  base_lr: 1.5844e-01 lr: 1.5844e-01  eta: 0:24:20  time: 0.2559  data_time: 0.0043  memory: 5466  grad_norm: 0.6357  loss: 0.5238  loss_cls: 0.3448  loss_bbox: 0.1790
2025/05/12 14:14:54 - mmengine - INFO - Epoch(train) [20][500/563]  base_lr: 1.5843e-01 lr: 1.5843e-01  eta: 0:24:08  time: 0.2552  data_time: 0.0043  memory: 5404  grad_norm: 0.5434  loss: 0.4830  loss_cls: 0.3108  loss_bbox: 0.1722
2025/05/12 14:15:07 - mmengine - INFO - Epoch(train) [20][550/563]  base_lr: 1.5842e-01 lr: 1.5842e-01  eta: 0:23:55  time: 0.2555  data_time: 0.0044  memory: 5404  grad_norm: 0.6055  loss: 0.5027  loss_cls: 0.3209  loss_bbox: 0.1818
2025/05/12 14:15:10 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:15:14 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:15:16 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.690 0.436 -1.000 0.271 0.418
2025/05/12 14:15:16 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.6900  coco/bbox_mAP_75: 0.4360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2710  coco/bbox_mAP_l: 0.4180  data_time: 0.0016  time: 0.0755
2025/05/12 14:15:16 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_17.pth is removed
2025/05/12 14:15:16 - mmengine - INFO - The best checkpoint with 0.3940 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2025/05/12 14:15:29 - mmengine - INFO - Epoch(train) [21][ 50/563]  base_lr: 1.5840e-01 lr: 1.5840e-01  eta: 0:23:39  time: 0.2595  data_time: 0.0049  memory: 5213  grad_norm: 0.6903  loss: 0.5278  loss_cls: 0.3268  loss_bbox: 0.2011
2025/05/12 14:15:42 - mmengine - INFO - Epoch(train) [21][100/563]  base_lr: 1.5838e-01 lr: 1.5838e-01  eta: 0:23:26  time: 0.2511  data_time: 0.0043  memory: 5456  grad_norm: 0.5259  loss: 0.4860  loss_cls: 0.3140  loss_bbox: 0.1721
2025/05/12 14:15:55 - mmengine - INFO - Epoch(train) [21][150/563]  base_lr: 1.5837e-01 lr: 1.5837e-01  eta: 0:23:14  time: 0.2525  data_time: 0.0042  memory: 5311  grad_norm: 0.5939  loss: 0.4669  loss_cls: 0.3040  loss_bbox: 0.1629
2025/05/12 14:16:07 - mmengine - INFO - Epoch(train) [21][200/563]  base_lr: 1.5835e-01 lr: 1.5835e-01  eta: 0:23:01  time: 0.2517  data_time: 0.0042  memory: 5460  grad_norm: 0.5704  loss: 0.5092  loss_cls: 0.3250  loss_bbox: 0.1842
2025/05/12 14:16:20 - mmengine - INFO - Epoch(train) [21][250/563]  base_lr: 1.5834e-01 lr: 1.5834e-01  eta: 0:22:48  time: 0.2579  data_time: 0.0043  memory: 5311  grad_norm: 0.5352  loss: 0.4750  loss_cls: 0.3056  loss_bbox: 0.1694
2025/05/12 14:16:33 - mmengine - INFO - Epoch(train) [21][300/563]  base_lr: 1.5832e-01 lr: 1.5832e-01  eta: 0:22:35  time: 0.2520  data_time: 0.0043  memory: 5388  grad_norm: 0.8626  loss: 0.8624  loss_cls: 0.5666  loss_bbox: 0.2958
2025/05/12 14:16:45 - mmengine - INFO - Epoch(train) [21][350/563]  base_lr: 1.5831e-01 lr: 1.5831e-01  eta: 0:22:23  time: 0.2554  data_time: 0.0042  memory: 5373  grad_norm: 0.5089  loss: 0.5659  loss_cls: 0.3747  loss_bbox: 0.1912
2025/05/12 14:16:58 - mmengine - INFO - Epoch(train) [21][400/563]  base_lr: 1.5829e-01 lr: 1.5829e-01  eta: 0:22:10  time: 0.2541  data_time: 0.0043  memory: 5352  grad_norm: 0.6118  loss: 0.5453  loss_cls: 0.3511  loss_bbox: 0.1942
2025/05/12 14:17:11 - mmengine - INFO - Epoch(train) [21][450/563]  base_lr: 1.5828e-01 lr: 1.5828e-01  eta: 0:21:57  time: 0.2528  data_time: 0.0043  memory: 5264  grad_norm: 0.6118  loss: 0.5615  loss_cls: 0.3515  loss_bbox: 0.2100
2025/05/12 14:17:24 - mmengine - INFO - Epoch(train) [21][500/563]  base_lr: 1.5826e-01 lr: 1.5826e-01  eta: 0:21:45  time: 0.2581  data_time: 0.0042  memory: 5290  grad_norm: 0.5791  loss: 0.5266  loss_cls: 0.3349  loss_bbox: 0.1917
2025/05/12 14:17:37 - mmengine - INFO - Epoch(train) [21][550/563]  base_lr: 1.5824e-01 lr: 1.5824e-01  eta: 0:21:32  time: 0.2568  data_time: 0.0043  memory: 5357  grad_norm: 0.5174  loss: 0.5011  loss_cls: 0.3242  loss_bbox: 0.1768
2025/05/12 14:17:40 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:17:44 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:17:45 - mmengine - INFO - bbox_mAP_copypaste: 0.355 0.617 0.389 -1.000 0.283 0.372
2025/05/12 14:17:45 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.3550  coco/bbox_mAP_50: 0.6170  coco/bbox_mAP_75: 0.3890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2830  coco/bbox_mAP_l: 0.3720  data_time: 0.0016  time: 0.0737
2025/05/12 14:17:58 - mmengine - INFO - Epoch(train) [22][ 50/563]  base_lr: 1.5822e-01 lr: 1.5822e-01  eta: 0:21:16  time: 0.2531  data_time: 0.0050  memory: 5419  grad_norm: 0.6195  loss: 0.5048  loss_cls: 0.3246  loss_bbox: 0.1802
2025/05/12 14:18:10 - mmengine - INFO - Epoch(train) [22][100/563]  base_lr: 1.5821e-01 lr: 1.5821e-01  eta: 0:21:03  time: 0.2536  data_time: 0.0043  memory: 5208  grad_norm: 0.5553  loss: 0.5079  loss_cls: 0.3252  loss_bbox: 0.1826
2025/05/12 14:18:23 - mmengine - INFO - Epoch(train) [22][150/563]  base_lr: 1.5819e-01 lr: 1.5819e-01  eta: 0:20:51  time: 0.2580  data_time: 0.0043  memory: 5275  grad_norm: 0.5633  loss: 0.5048  loss_cls: 0.3292  loss_bbox: 0.1756
2025/05/12 14:18:30 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:18:36 - mmengine - INFO - Epoch(train) [22][200/563]  base_lr: 1.5818e-01 lr: 1.5818e-01  eta: 0:20:38  time: 0.2558  data_time: 0.0043  memory: 5398  grad_norm: 0.5939  loss: 0.4804  loss_cls: 0.3084  loss_bbox: 0.1720
2025/05/12 14:18:49 - mmengine - INFO - Epoch(train) [22][250/563]  base_lr: 1.5816e-01 lr: 1.5816e-01  eta: 0:20:25  time: 0.2559  data_time: 0.0042  memory: 5290  grad_norm: 0.6582  loss: 0.5271  loss_cls: 0.3434  loss_bbox: 0.1837
2025/05/12 14:19:02 - mmengine - INFO - Epoch(train) [22][300/563]  base_lr: 1.5815e-01 lr: 1.5815e-01  eta: 0:20:12  time: 0.2541  data_time: 0.0042  memory: 5367  grad_norm: 0.6939  loss: 0.5467  loss_cls: 0.3363  loss_bbox: 0.2103
2025/05/12 14:19:14 - mmengine - INFO - Epoch(train) [22][350/563]  base_lr: 1.5813e-01 lr: 1.5813e-01  eta: 0:20:00  time: 0.2543  data_time: 0.0043  memory: 5347  grad_norm: 0.5515  loss: 0.4853  loss_cls: 0.3128  loss_bbox: 0.1725
2025/05/12 14:19:27 - mmengine - INFO - Epoch(train) [22][400/563]  base_lr: 1.5811e-01 lr: 1.5811e-01  eta: 0:19:47  time: 0.2551  data_time: 0.0043  memory: 5347  grad_norm: 0.6005  loss: 0.4932  loss_cls: 0.3144  loss_bbox: 0.1788
2025/05/12 14:19:40 - mmengine - INFO - Epoch(train) [22][450/563]  base_lr: 1.5810e-01 lr: 1.5810e-01  eta: 0:19:34  time: 0.2566  data_time: 0.0043  memory: 5461  grad_norm: 0.6131  loss: 0.5200  loss_cls: 0.3396  loss_bbox: 0.1804
2025/05/12 14:19:53 - mmengine - INFO - Epoch(train) [22][500/563]  base_lr: 1.5808e-01 lr: 1.5808e-01  eta: 0:19:22  time: 0.2540  data_time: 0.0043  memory: 5466  grad_norm: 0.5421  loss: 0.4955  loss_cls: 0.3179  loss_bbox: 0.1776
2025/05/12 14:20:06 - mmengine - INFO - Epoch(train) [22][550/563]  base_lr: 1.5807e-01 lr: 1.5807e-01  eta: 0:19:09  time: 0.2574  data_time: 0.0044  memory: 5352  grad_norm: 0.5616  loss: 0.5005  loss_cls: 0.3292  loss_bbox: 0.1713
2025/05/12 14:20:09 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:20:13 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:20:14 - mmengine - INFO - bbox_mAP_copypaste: 0.378 0.662 0.410 -1.000 0.247 0.399
2025/05/12 14:20:14 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.3780  coco/bbox_mAP_50: 0.6620  coco/bbox_mAP_75: 0.4100  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2470  coco/bbox_mAP_l: 0.3990  data_time: 0.0016  time: 0.0721
2025/05/12 14:20:27 - mmengine - INFO - Epoch(train) [23][ 50/563]  base_lr: 1.5804e-01 lr: 1.5804e-01  eta: 0:18:53  time: 0.2576  data_time: 0.0049  memory: 5388  grad_norm: 0.5193  loss: 0.4731  loss_cls: 0.3090  loss_bbox: 0.1641
2025/05/12 14:20:40 - mmengine - INFO - Epoch(train) [23][100/563]  base_lr: 1.5803e-01 lr: 1.5803e-01  eta: 0:18:40  time: 0.2530  data_time: 0.0042  memory: 5414  grad_norm: 0.5840  loss: 0.4720  loss_cls: 0.3048  loss_bbox: 0.1672
2025/05/12 14:20:52 - mmengine - INFO - Epoch(train) [23][150/563]  base_lr: 1.5801e-01 lr: 1.5801e-01  eta: 0:18:28  time: 0.2568  data_time: 0.0043  memory: 5316  grad_norm: 0.6089  loss: 0.4947  loss_cls: 0.3138  loss_bbox: 0.1808
2025/05/12 14:21:05 - mmengine - INFO - Epoch(train) [23][200/563]  base_lr: 1.5799e-01 lr: 1.5799e-01  eta: 0:18:15  time: 0.2548  data_time: 0.0043  memory: 5383  grad_norm: 0.6558  loss: 0.5210  loss_cls: 0.3297  loss_bbox: 0.1913
2025/05/12 14:21:18 - mmengine - INFO - Epoch(train) [23][250/563]  base_lr: 1.5798e-01 lr: 1.5798e-01  eta: 0:18:02  time: 0.2524  data_time: 0.0043  memory: 5337  grad_norm: 0.6182  loss: 0.4995  loss_cls: 0.3211  loss_bbox: 0.1784
2025/05/12 14:21:30 - mmengine - INFO - Epoch(train) [23][300/563]  base_lr: 1.5796e-01 lr: 1.5796e-01  eta: 0:17:49  time: 0.2540  data_time: 0.0043  memory: 5430  grad_norm: 0.5907  loss: 0.5135  loss_cls: 0.3407  loss_bbox: 0.1728
2025/05/12 14:21:43 - mmengine - INFO - Epoch(train) [23][350/563]  base_lr: 1.5794e-01 lr: 1.5794e-01  eta: 0:17:37  time: 0.2568  data_time: 0.0043  memory: 5471  grad_norm: 0.5391  loss: 0.5198  loss_cls: 0.3253  loss_bbox: 0.1945
2025/05/12 14:21:56 - mmengine - INFO - Epoch(train) [23][400/563]  base_lr: 1.5793e-01 lr: 1.5793e-01  eta: 0:17:24  time: 0.2516  data_time: 0.0043  memory: 5244  grad_norm: 0.6102  loss: 0.4940  loss_cls: 0.3151  loss_bbox: 0.1789
2025/05/12 14:22:09 - mmengine - INFO - Epoch(train) [23][450/563]  base_lr: 1.5791e-01 lr: 1.5791e-01  eta: 0:17:11  time: 0.2554  data_time: 0.0044  memory: 5264  grad_norm: 0.6199  loss: 0.5024  loss_cls: 0.3222  loss_bbox: 0.1802
2025/05/12 14:22:22 - mmengine - INFO - Epoch(train) [23][500/563]  base_lr: 1.5789e-01 lr: 1.5789e-01  eta: 0:16:59  time: 0.2601  data_time: 0.0042  memory: 5450  grad_norm: 0.6000  loss: 0.5203  loss_cls: 0.3412  loss_bbox: 0.1791
2025/05/12 14:22:35 - mmengine - INFO - Epoch(train) [23][550/563]  base_lr: 1.5788e-01 lr: 1.5788e-01  eta: 0:16:46  time: 0.2588  data_time: 0.0043  memory: 5161  grad_norm: 0.5594  loss: 0.4775  loss_cls: 0.3063  loss_bbox: 0.1712
2025/05/12 14:22:38 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:22:42 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:22:43 - mmengine - INFO - bbox_mAP_copypaste: 0.377 0.666 0.408 -1.000 0.276 0.399
2025/05/12 14:22:43 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.3770  coco/bbox_mAP_50: 0.6660  coco/bbox_mAP_75: 0.4080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2760  coco/bbox_mAP_l: 0.3990  data_time: 0.0015  time: 0.0724
2025/05/12 14:22:56 - mmengine - INFO - Epoch(train) [24][ 50/563]  base_lr: 1.5786e-01 lr: 1.5786e-01  eta: 0:16:30  time: 0.2528  data_time: 0.0049  memory: 5316  grad_norm: 0.5510  loss: 0.4944  loss_cls: 0.3241  loss_bbox: 0.1703
2025/05/12 14:22:56 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:23:09 - mmengine - INFO - Epoch(train) [24][100/563]  base_lr: 1.5784e-01 lr: 1.5784e-01  eta: 0:16:17  time: 0.2570  data_time: 0.0043  memory: 5311  grad_norm: 0.6238  loss: 0.5140  loss_cls: 0.3342  loss_bbox: 0.1798
2025/05/12 14:23:21 - mmengine - INFO - Epoch(train) [24][150/563]  base_lr: 1.5782e-01 lr: 1.5782e-01  eta: 0:16:04  time: 0.2534  data_time: 0.0043  memory: 5425  grad_norm: 0.6271  loss: 0.4817  loss_cls: 0.3152  loss_bbox: 0.1665
2025/05/12 14:23:34 - mmengine - INFO - Epoch(train) [24][200/563]  base_lr: 1.5780e-01 lr: 1.5780e-01  eta: 0:15:52  time: 0.2547  data_time: 0.0042  memory: 5404  grad_norm: 0.5492  loss: 0.4668  loss_cls: 0.3030  loss_bbox: 0.1637
2025/05/12 14:23:47 - mmengine - INFO - Epoch(train) [24][250/563]  base_lr: 1.5779e-01 lr: 1.5779e-01  eta: 0:15:39  time: 0.2572  data_time: 0.0042  memory: 5275  grad_norm: 0.5807  loss: 0.4876  loss_cls: 0.3154  loss_bbox: 0.1722
2025/05/12 14:24:00 - mmengine - INFO - Epoch(train) [24][300/563]  base_lr: 1.5777e-01 lr: 1.5777e-01  eta: 0:15:26  time: 0.2529  data_time: 0.0042  memory: 5363  grad_norm: 0.5599  loss: 0.4653  loss_cls: 0.2941  loss_bbox: 0.1712
2025/05/12 14:24:13 - mmengine - INFO - Epoch(train) [24][350/563]  base_lr: 1.5775e-01 lr: 1.5775e-01  eta: 0:15:14  time: 0.2573  data_time: 0.0042  memory: 5352  grad_norm: 0.5420  loss: 0.4759  loss_cls: 0.3016  loss_bbox: 0.1743
2025/05/12 14:24:25 - mmengine - INFO - Epoch(train) [24][400/563]  base_lr: 1.5773e-01 lr: 1.5773e-01  eta: 0:15:01  time: 0.2537  data_time: 0.0043  memory: 5435  grad_norm: 0.5322  loss: 0.4648  loss_cls: 0.3011  loss_bbox: 0.1636
2025/05/12 14:24:38 - mmengine - INFO - Epoch(train) [24][450/563]  base_lr: 1.5772e-01 lr: 1.5772e-01  eta: 0:14:48  time: 0.2542  data_time: 0.0043  memory: 5233  grad_norm: 0.5617  loss: 0.4863  loss_cls: 0.3189  loss_bbox: 0.1674
2025/05/12 14:24:51 - mmengine - INFO - Epoch(train) [24][500/563]  base_lr: 1.5770e-01 lr: 1.5770e-01  eta: 0:14:35  time: 0.2545  data_time: 0.0043  memory: 5285  grad_norm: 0.5790  loss: 0.4857  loss_cls: 0.3076  loss_bbox: 0.1781
2025/05/12 14:25:03 - mmengine - INFO - Epoch(train) [24][550/563]  base_lr: 1.5768e-01 lr: 1.5768e-01  eta: 0:14:23  time: 0.2558  data_time: 0.0043  memory: 5378  grad_norm: 0.5886  loss: 0.4804  loss_cls: 0.2954  loss_bbox: 0.1850
2025/05/12 14:25:07 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:25:10 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:25:12 - mmengine - INFO - bbox_mAP_copypaste: 0.384 0.673 0.420 -1.000 0.275 0.406
2025/05/12 14:25:12 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.3840  coco/bbox_mAP_50: 0.6730  coco/bbox_mAP_75: 0.4200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2750  coco/bbox_mAP_l: 0.4060  data_time: 0.0016  time: 0.0718
2025/05/12 14:25:25 - mmengine - INFO - Epoch(train) [25][ 50/563]  base_lr: 1.5766e-01 lr: 1.5766e-01  eta: 0:14:07  time: 0.2584  data_time: 0.0049  memory: 5430  grad_norm: 0.5595  loss: 0.4711  loss_cls: 0.2970  loss_bbox: 0.1741
2025/05/12 14:25:37 - mmengine - INFO - Epoch(train) [25][100/563]  base_lr: 1.5764e-01 lr: 1.5764e-01  eta: 0:13:54  time: 0.2534  data_time: 0.0042  memory: 5352  grad_norm: 0.6428  loss: 0.5221  loss_cls: 0.3133  loss_bbox: 0.2087
2025/05/12 14:25:50 - mmengine - INFO - Epoch(train) [25][150/563]  base_lr: 1.5762e-01 lr: 1.5762e-01  eta: 0:13:41  time: 0.2493  data_time: 0.0042  memory: 5326  grad_norm: 0.5474  loss: 0.4370  loss_cls: 0.2833  loss_bbox: 0.1538
2025/05/12 14:26:03 - mmengine - INFO - Epoch(train) [25][200/563]  base_lr: 1.5760e-01 lr: 1.5760e-01  eta: 0:13:28  time: 0.2547  data_time: 0.0043  memory: 5363  grad_norm: 0.6702  loss: 0.5208  loss_cls: 0.3412  loss_bbox: 0.1796
2025/05/12 14:26:15 - mmengine - INFO - Epoch(train) [25][250/563]  base_lr: 1.5759e-01 lr: 1.5759e-01  eta: 0:13:16  time: 0.2477  data_time: 0.0042  memory: 5321  grad_norm: 0.5951  loss: 0.4847  loss_cls: 0.3158  loss_bbox: 0.1688
2025/05/12 14:26:28 - mmengine - INFO - Epoch(train) [25][300/563]  base_lr: 1.5757e-01 lr: 1.5757e-01  eta: 0:13:03  time: 0.2512  data_time: 0.0041  memory: 5414  grad_norm: 0.5552  loss: 0.4715  loss_cls: 0.3096  loss_bbox: 0.1619
2025/05/12 14:26:40 - mmengine - INFO - Epoch(train) [25][350/563]  base_lr: 1.5755e-01 lr: 1.5755e-01  eta: 0:12:50  time: 0.2495  data_time: 0.0043  memory: 5440  grad_norm: 0.6228  loss: 0.4923  loss_cls: 0.3025  loss_bbox: 0.1898
2025/05/12 14:26:53 - mmengine - INFO - Epoch(train) [25][400/563]  base_lr: 1.5753e-01 lr: 1.5753e-01  eta: 0:12:37  time: 0.2519  data_time: 0.0042  memory: 5460  grad_norm: 0.5523  loss: 0.4696  loss_cls: 0.2965  loss_bbox: 0.1732
2025/05/12 14:27:05 - mmengine - INFO - Epoch(train) [25][450/563]  base_lr: 1.5751e-01 lr: 1.5751e-01  eta: 0:12:25  time: 0.2501  data_time: 0.0042  memory: 5244  grad_norm: 0.5464  loss: 0.4693  loss_cls: 0.3108  loss_bbox: 0.1585
2025/05/12 14:27:15 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:27:18 - mmengine - INFO - Epoch(train) [25][500/563]  base_lr: 1.5749e-01 lr: 1.5749e-01  eta: 0:12:12  time: 0.2559  data_time: 0.0043  memory: 5481  grad_norm: 0.6030  loss: 0.4856  loss_cls: 0.3101  loss_bbox: 0.1755
2025/05/12 14:27:31 - mmengine - INFO - Epoch(train) [25][550/563]  base_lr: 1.5748e-01 lr: 1.5748e-01  eta: 0:11:59  time: 0.2497  data_time: 0.0043  memory: 5352  grad_norm: 0.5384  loss: 0.4714  loss_cls: 0.3020  loss_bbox: 0.1694
2025/05/12 14:27:34 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:27:37 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:27:39 - mmengine - INFO - bbox_mAP_copypaste: 0.392 0.684 0.431 -1.000 0.291 0.415
2025/05/12 14:27:39 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.3920  coco/bbox_mAP_50: 0.6840  coco/bbox_mAP_75: 0.4310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2910  coco/bbox_mAP_l: 0.4150  data_time: 0.0016  time: 0.0688
2025/05/12 14:27:51 - mmengine - INFO - Epoch(train) [26][ 50/563]  base_lr: 1.5745e-01 lr: 1.5745e-01  eta: 0:11:43  time: 0.2522  data_time: 0.0049  memory: 5393  grad_norm: 0.6163  loss: 0.4818  loss_cls: 0.3091  loss_bbox: 0.1726
2025/05/12 14:28:04 - mmengine - INFO - Epoch(train) [26][100/563]  base_lr: 1.5743e-01 lr: 1.5743e-01  eta: 0:11:30  time: 0.2539  data_time: 0.0043  memory: 5213  grad_norm: 0.6117  loss: 0.5031  loss_cls: 0.3237  loss_bbox: 0.1794
2025/05/12 14:28:17 - mmengine - INFO - Epoch(train) [26][150/563]  base_lr: 1.5741e-01 lr: 1.5741e-01  eta: 0:11:18  time: 0.2525  data_time: 0.0041  memory: 5440  grad_norm: 0.5314  loss: 0.4887  loss_cls: 0.3091  loss_bbox: 0.1796
2025/05/12 14:28:29 - mmengine - INFO - Epoch(train) [26][200/563]  base_lr: 1.5740e-01 lr: 1.5740e-01  eta: 0:11:05  time: 0.2504  data_time: 0.0042  memory: 5311  grad_norm: 0.6354  loss: 0.5012  loss_cls: 0.3175  loss_bbox: 0.1837
2025/05/12 14:28:42 - mmengine - INFO - Epoch(train) [26][250/563]  base_lr: 1.5738e-01 lr: 1.5738e-01  eta: 0:10:52  time: 0.2506  data_time: 0.0043  memory: 5399  grad_norm: 0.6544  loss: 0.5359  loss_cls: 0.3383  loss_bbox: 0.1977
2025/05/12 14:28:54 - mmengine - INFO - Epoch(train) [26][300/563]  base_lr: 1.5736e-01 lr: 1.5736e-01  eta: 0:10:39  time: 0.2465  data_time: 0.0042  memory: 5254  grad_norm: 0.5945  loss: 0.4721  loss_cls: 0.3003  loss_bbox: 0.1717
2025/05/12 14:29:07 - mmengine - INFO - Epoch(train) [26][350/563]  base_lr: 1.5734e-01 lr: 1.5734e-01  eta: 0:10:27  time: 0.2496  data_time: 0.0042  memory: 5285  grad_norm: 0.5427  loss: 0.4595  loss_cls: 0.3002  loss_bbox: 0.1592
2025/05/12 14:29:19 - mmengine - INFO - Epoch(train) [26][400/563]  base_lr: 1.5732e-01 lr: 1.5732e-01  eta: 0:10:14  time: 0.2536  data_time: 0.0042  memory: 5478  grad_norm: 0.5406  loss: 0.4709  loss_cls: 0.3020  loss_bbox: 0.1689
2025/05/12 14:29:32 - mmengine - INFO - Epoch(train) [26][450/563]  base_lr: 1.5730e-01 lr: 1.5730e-01  eta: 0:10:01  time: 0.2523  data_time: 0.0043  memory: 5461  grad_norm: 0.5649  loss: 0.4766  loss_cls: 0.3069  loss_bbox: 0.1698
2025/05/12 14:29:44 - mmengine - INFO - Epoch(train) [26][500/563]  base_lr: 1.5728e-01 lr: 1.5728e-01  eta: 0:09:48  time: 0.2512  data_time: 0.0042  memory: 5254  grad_norm: 0.5845  loss: 0.4801  loss_cls: 0.2963  loss_bbox: 0.1838
2025/05/12 14:29:57 - mmengine - INFO - Epoch(train) [26][550/563]  base_lr: 1.5726e-01 lr: 1.5726e-01  eta: 0:09:36  time: 0.2512  data_time: 0.0042  memory: 5378  grad_norm: 0.5999  loss: 0.5165  loss_cls: 0.3363  loss_bbox: 0.1802
2025/05/12 14:30:00 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:30:04 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:30:05 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.682 0.432 -1.000 0.314 0.416
2025/05/12 14:30:05 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.6820  coco/bbox_mAP_75: 0.4320  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3140  coco/bbox_mAP_l: 0.4160  data_time: 0.0015  time: 0.0685
2025/05/12 14:30:18 - mmengine - INFO - Epoch(train) [27][ 50/563]  base_lr: 1.5724e-01 lr: 1.5724e-01  eta: 0:09:20  time: 0.2520  data_time: 0.0049  memory: 5460  grad_norm: 0.5872  loss: 0.4694  loss_cls: 0.2897  loss_bbox: 0.1797
2025/05/12 14:30:30 - mmengine - INFO - Epoch(train) [27][100/563]  base_lr: 1.5722e-01 lr: 1.5722e-01  eta: 0:09:07  time: 0.2508  data_time: 0.0043  memory: 5363  grad_norm: 0.6163  loss: 0.4994  loss_cls: 0.3222  loss_bbox: 0.1772
2025/05/12 14:30:43 - mmengine - INFO - Epoch(train) [27][150/563]  base_lr: 1.5720e-01 lr: 1.5720e-01  eta: 0:08:54  time: 0.2515  data_time: 0.0042  memory: 5466  grad_norm: 0.7783  loss: 0.5810  loss_cls: 0.3875  loss_bbox: 0.1935
2025/05/12 14:30:56 - mmengine - INFO - Epoch(train) [27][200/563]  base_lr: 1.5718e-01 lr: 1.5718e-01  eta: 0:08:41  time: 0.2518  data_time: 0.0043  memory: 5290  grad_norm: 0.5722  loss: 0.4902  loss_cls: 0.3160  loss_bbox: 0.1742
2025/05/12 14:31:08 - mmengine - INFO - Epoch(train) [27][250/563]  base_lr: 1.5716e-01 lr: 1.5716e-01  eta: 0:08:29  time: 0.2500  data_time: 0.0042  memory: 5290  grad_norm: 0.5944  loss: 0.4953  loss_cls: 0.3181  loss_bbox: 0.1772
2025/05/12 14:31:21 - mmengine - INFO - Epoch(train) [27][300/563]  base_lr: 1.5714e-01 lr: 1.5714e-01  eta: 0:08:16  time: 0.2534  data_time: 0.0043  memory: 5393  grad_norm: 0.6476  loss: 0.5046  loss_cls: 0.3052  loss_bbox: 0.1994
2025/05/12 14:31:33 - mmengine - INFO - Epoch(train) [27][350/563]  base_lr: 1.5712e-01 lr: 1.5712e-01  eta: 0:08:03  time: 0.2496  data_time: 0.0042  memory: 5383  grad_norm: 0.5926  loss: 0.4982  loss_cls: 0.3164  loss_bbox: 0.1818
2025/05/12 14:31:36 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:31:46 - mmengine - INFO - Epoch(train) [27][400/563]  base_lr: 1.5710e-01 lr: 1.5710e-01  eta: 0:07:50  time: 0.2557  data_time: 0.0043  memory: 5471  grad_norm: 0.5760  loss: 0.4812  loss_cls: 0.3082  loss_bbox: 0.1730
2025/05/12 14:31:58 - mmengine - INFO - Epoch(train) [27][450/563]  base_lr: 1.5708e-01 lr: 1.5708e-01  eta: 0:07:38  time: 0.2477  data_time: 0.0043  memory: 5259  grad_norm: 0.5558  loss: 0.4847  loss_cls: 0.3008  loss_bbox: 0.1839
2025/05/12 14:32:11 - mmengine - INFO - Epoch(train) [27][500/563]  base_lr: 1.5706e-01 lr: 1.5706e-01  eta: 0:07:25  time: 0.2548  data_time: 0.0042  memory: 5383  grad_norm: 0.5314  loss: 0.4793  loss_cls: 0.3041  loss_bbox: 0.1752
2025/05/12 14:32:24 - mmengine - INFO - Epoch(train) [27][550/563]  base_lr: 1.5704e-01 lr: 1.5704e-01  eta: 0:07:12  time: 0.2497  data_time: 0.0043  memory: 5337  grad_norm: 0.5534  loss: 0.4617  loss_cls: 0.2996  loss_bbox: 0.1621
2025/05/12 14:32:27 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:32:30 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:32:32 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.691 0.432 -1.000 0.303 0.419
2025/05/12 14:32:32 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.6910  coco/bbox_mAP_75: 0.4320  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3030  coco/bbox_mAP_l: 0.4190  data_time: 0.0016  time: 0.0698
2025/05/12 14:32:32 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_20.pth is removed
2025/05/12 14:32:33 - mmengine - INFO - The best checkpoint with 0.3970 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2025/05/12 14:32:45 - mmengine - INFO - Epoch(train) [28][ 50/563]  base_lr: 1.5701e-01 lr: 1.5701e-01  eta: 0:06:56  time: 0.2529  data_time: 0.0050  memory: 5280  grad_norm: 0.5788  loss: 0.4717  loss_cls: 0.3093  loss_bbox: 0.1624
2025/05/12 14:32:58 - mmengine - INFO - Epoch(train) [28][100/563]  base_lr: 1.5699e-01 lr: 1.5699e-01  eta: 0:06:43  time: 0.2550  data_time: 0.0042  memory: 5398  grad_norm: 0.5620  loss: 0.4817  loss_cls: 0.2907  loss_bbox: 0.1910
2025/05/12 14:33:11 - mmengine - INFO - Epoch(train) [28][150/563]  base_lr: 1.5697e-01 lr: 1.5697e-01  eta: 0:06:31  time: 0.2514  data_time: 0.0042  memory: 5264  grad_norm: 0.5842  loss: 0.4602  loss_cls: 0.2948  loss_bbox: 0.1654
2025/05/12 14:33:23 - mmengine - INFO - Epoch(train) [28][200/563]  base_lr: 1.5695e-01 lr: 1.5695e-01  eta: 0:06:18  time: 0.2532  data_time: 0.0042  memory: 5450  grad_norm: 0.6111  loss: 0.4785  loss_cls: 0.3060  loss_bbox: 0.1726
2025/05/12 14:33:36 - mmengine - INFO - Epoch(train) [28][250/563]  base_lr: 1.5693e-01 lr: 1.5693e-01  eta: 0:06:05  time: 0.2507  data_time: 0.0042  memory: 5357  grad_norm: 0.5761  loss: 0.4583  loss_cls: 0.2926  loss_bbox: 0.1657
2025/05/12 14:33:49 - mmengine - INFO - Epoch(train) [28][300/563]  base_lr: 1.5691e-01 lr: 1.5691e-01  eta: 0:05:53  time: 0.2524  data_time: 0.0043  memory: 5456  grad_norm: 0.5573  loss: 0.4652  loss_cls: 0.2997  loss_bbox: 0.1655
2025/05/12 14:34:01 - mmengine - INFO - Epoch(train) [28][350/563]  base_lr: 1.5689e-01 lr: 1.5689e-01  eta: 0:05:40  time: 0.2530  data_time: 0.0042  memory: 5461  grad_norm: 0.6007  loss: 0.4691  loss_cls: 0.3005  loss_bbox: 0.1686
2025/05/12 14:34:14 - mmengine - INFO - Epoch(train) [28][400/563]  base_lr: 1.5687e-01 lr: 1.5687e-01  eta: 0:05:27  time: 0.2531  data_time: 0.0042  memory: 5337  grad_norm: 0.5781  loss: 0.4703  loss_cls: 0.3038  loss_bbox: 0.1664
2025/05/12 14:34:27 - mmengine - INFO - Epoch(train) [28][450/563]  base_lr: 1.5685e-01 lr: 1.5685e-01  eta: 0:05:14  time: 0.2544  data_time: 0.0042  memory: 5326  grad_norm: 0.6401  loss: 0.4885  loss_cls: 0.3069  loss_bbox: 0.1816
2025/05/12 14:34:39 - mmengine - INFO - Epoch(train) [28][500/563]  base_lr: 1.5683e-01 lr: 1.5683e-01  eta: 0:05:02  time: 0.2552  data_time: 0.0044  memory: 5285  grad_norm: 0.6515  loss: 0.5183  loss_cls: 0.3327  loss_bbox: 0.1856
2025/05/12 14:34:52 - mmengine - INFO - Epoch(train) [28][550/563]  base_lr: 1.5681e-01 lr: 1.5681e-01  eta: 0:04:49  time: 0.2542  data_time: 0.0042  memory: 5373  grad_norm: 0.5915  loss: 0.4882  loss_cls: 0.3107  loss_bbox: 0.1775
2025/05/12 14:34:56 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:34:59 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:35:00 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.689 0.436 -1.000 0.303 0.418
2025/05/12 14:35:00 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.6890  coco/bbox_mAP_75: 0.4360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.3030  coco/bbox_mAP_l: 0.4180  data_time: 0.0017  time: 0.0682
2025/05/12 14:35:13 - mmengine - INFO - Epoch(train) [29][ 50/563]  base_lr: 1.5678e-01 lr: 1.5678e-01  eta: 0:04:33  time: 0.2502  data_time: 0.0049  memory: 5285  grad_norm: 0.5225  loss: 0.4522  loss_cls: 0.2893  loss_bbox: 0.1629
2025/05/12 14:35:26 - mmengine - INFO - Epoch(train) [29][100/563]  base_lr: 1.5676e-01 lr: 1.5676e-01  eta: 0:04:20  time: 0.2519  data_time: 0.0042  memory: 5285  grad_norm: 0.5700  loss: 0.4632  loss_cls: 0.2970  loss_bbox: 0.1662
2025/05/12 14:35:38 - mmengine - INFO - Epoch(train) [29][150/563]  base_lr: 1.5674e-01 lr: 1.5674e-01  eta: 0:04:08  time: 0.2509  data_time: 0.0042  memory: 5466  grad_norm: 0.6564  loss: 0.5069  loss_cls: 0.3061  loss_bbox: 0.2008
2025/05/12 14:35:51 - mmengine - INFO - Epoch(train) [29][200/563]  base_lr: 1.5672e-01 lr: 1.5672e-01  eta: 0:03:55  time: 0.2489  data_time: 0.0043  memory: 5280  grad_norm: 0.6265  loss: 0.5047  loss_cls: 0.3265  loss_bbox: 0.1782
2025/05/12 14:36:00 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:36:03 - mmengine - INFO - Epoch(train) [29][250/563]  base_lr: 1.5670e-01 lr: 1.5670e-01  eta: 0:03:42  time: 0.2519  data_time: 0.0042  memory: 5321  grad_norm: 0.6074  loss: 0.5139  loss_cls: 0.3313  loss_bbox: 0.1825
2025/05/12 14:36:16 - mmengine - INFO - Epoch(train) [29][300/563]  base_lr: 1.5668e-01 lr: 1.5668e-01  eta: 0:03:29  time: 0.2491  data_time: 0.0042  memory: 5300  grad_norm: 0.6253  loss: 0.5046  loss_cls: 0.3172  loss_bbox: 0.1874
2025/05/12 14:36:28 - mmengine - INFO - Epoch(train) [29][350/563]  base_lr: 1.5665e-01 lr: 1.5665e-01  eta: 0:03:17  time: 0.2509  data_time: 0.0043  memory: 5461  grad_norm: 0.5927  loss: 0.4930  loss_cls: 0.3055  loss_bbox: 0.1875
2025/05/12 14:36:41 - mmengine - INFO - Epoch(train) [29][400/563]  base_lr: 1.5663e-01 lr: 1.5663e-01  eta: 0:03:04  time: 0.2532  data_time: 0.0042  memory: 5362  grad_norm: 0.5573  loss: 0.4629  loss_cls: 0.2911  loss_bbox: 0.1718
2025/05/12 14:36:53 - mmengine - INFO - Epoch(train) [29][450/563]  base_lr: 1.5661e-01 lr: 1.5661e-01  eta: 0:02:51  time: 0.2512  data_time: 0.0043  memory: 5404  grad_norm: 0.5617  loss: 0.4646  loss_cls: 0.2996  loss_bbox: 0.1651
2025/05/12 14:37:06 - mmengine - INFO - Epoch(train) [29][500/563]  base_lr: 1.5659e-01 lr: 1.5659e-01  eta: 0:02:39  time: 0.2525  data_time: 0.0042  memory: 5316  grad_norm: 0.6827  loss: 0.5325  loss_cls: 0.3279  loss_bbox: 0.2046
2025/05/12 14:37:19 - mmengine - INFO - Epoch(train) [29][550/563]  base_lr: 1.5657e-01 lr: 1.5657e-01  eta: 0:02:26  time: 0.2518  data_time: 0.0042  memory: 5352  grad_norm: 0.6106  loss: 0.4827  loss_cls: 0.3138  loss_bbox: 0.1689
2025/05/12 14:37:22 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:37:25 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:37:27 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.689 0.437 -1.000 0.294 0.420
2025/05/12 14:37:27 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.6890  coco/bbox_mAP_75: 0.4370  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2940  coco/bbox_mAP_l: 0.4200  data_time: 0.0016  time: 0.0679
2025/05/12 14:37:27 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_27.pth is removed
2025/05/12 14:37:28 - mmengine - INFO - The best checkpoint with 0.3980 coco/bbox_mAP at 29 epoch is saved to best_coco_bbox_mAP_epoch_29.pth.
2025/05/12 14:37:40 - mmengine - INFO - Epoch(train) [30][ 50/563]  base_lr: 1.5654e-01 lr: 1.5654e-01  eta: 0:02:10  time: 0.2558  data_time: 0.0049  memory: 5435  grad_norm: 0.5714  loss: 0.4834  loss_cls: 0.3107  loss_bbox: 0.1727
2025/05/12 14:37:53 - mmengine - INFO - Epoch(train) [30][100/563]  base_lr: 1.5652e-01 lr: 1.5652e-01  eta: 0:01:57  time: 0.2512  data_time: 0.0041  memory: 5373  grad_norm: 0.5651  loss: 0.4854  loss_cls: 0.2971  loss_bbox: 0.1883
2025/05/12 14:38:06 - mmengine - INFO - Epoch(train) [30][150/563]  base_lr: 1.5650e-01 lr: 1.5650e-01  eta: 0:01:44  time: 0.2530  data_time: 0.0042  memory: 5450  grad_norm: 0.5864  loss: 0.4763  loss_cls: 0.2943  loss_bbox: 0.1821
2025/05/12 14:38:18 - mmengine - INFO - Epoch(train) [30][200/563]  base_lr: 1.5648e-01 lr: 1.5648e-01  eta: 0:01:32  time: 0.2545  data_time: 0.0043  memory: 5321  grad_norm: 0.5806  loss: 0.4698  loss_cls: 0.3029  loss_bbox: 0.1669
2025/05/12 14:38:31 - mmengine - INFO - Epoch(train) [30][250/563]  base_lr: 1.5645e-01 lr: 1.5645e-01  eta: 0:01:19  time: 0.2496  data_time: 0.0043  memory: 5269  grad_norm: 0.6069  loss: 0.4844  loss_cls: 0.3034  loss_bbox: 0.1810
2025/05/12 14:38:44 - mmengine - INFO - Epoch(train) [30][300/563]  base_lr: 1.5643e-01 lr: 1.5643e-01  eta: 0:01:06  time: 0.2550  data_time: 0.0042  memory: 5357  grad_norm: 0.5787  loss: 0.4650  loss_cls: 0.3004  loss_bbox: 0.1646
2025/05/12 14:38:56 - mmengine - INFO - Epoch(train) [30][350/563]  base_lr: 1.5641e-01 lr: 1.5641e-01  eta: 0:00:54  time: 0.2502  data_time: 0.0043  memory: 5481  grad_norm: 0.6210  loss: 0.4955  loss_cls: 0.3304  loss_bbox: 0.1650
2025/05/12 14:39:09 - mmengine - INFO - Epoch(train) [30][400/563]  base_lr: 1.5639e-01 lr: 1.5639e-01  eta: 0:00:41  time: 0.2549  data_time: 0.0043  memory: 5440  grad_norm: 0.6841  loss: 0.5182  loss_cls: 0.3331  loss_bbox: 0.1851
2025/05/12 14:39:21 - mmengine - INFO - Epoch(train) [30][450/563]  base_lr: 1.5637e-01 lr: 1.5637e-01  eta: 0:00:28  time: 0.2504  data_time: 0.0042  memory: 5440  grad_norm: 0.6894  loss: 0.5206  loss_cls: 0.3300  loss_bbox: 0.1906
2025/05/12 14:39:34 - mmengine - INFO - Epoch(train) [30][500/563]  base_lr: 1.5634e-01 lr: 1.5634e-01  eta: 0:00:16  time: 0.2561  data_time: 0.0042  memory: 5233  grad_norm: 0.5745  loss: 0.4777  loss_cls: 0.3035  loss_bbox: 0.1742
2025/05/12 14:39:47 - mmengine - INFO - Epoch(train) [30][550/563]  base_lr: 1.5632e-01 lr: 1.5632e-01  eta: 0:00:03  time: 0.2488  data_time: 0.0043  memory: 5393  grad_norm: 0.5691  loss: 0.4875  loss_cls: 0.3153  loss_bbox: 0.1722
2025/05/12 14:39:50 - mmengine - INFO - Exp name: efficientdet_fs_aff_20250512_132522
2025/05/12 14:39:50 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/12 14:39:55 - mmengine - INFO - Evaluating bbox...
2025/05/12 14:39:56 - mmengine - INFO - bbox_mAP_copypaste: 0.399 0.692 0.443 -1.000 0.292 0.422
2025/05/12 14:39:56 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.3990  coco/bbox_mAP_50: 0.6920  coco/bbox_mAP_75: 0.4430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2920  coco/bbox_mAP_l: 0.4220  data_time: 0.0016  time: 0.0686
2025/05/12 14:39:56 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_29.pth is removed
2025/05/12 14:39:57 - mmengine - INFO - The best checkpoint with 0.3990 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
