2025/05/12 20:14:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1302677780
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1302677780
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/12 20:14:45 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=128, enable=False)
backend_args = None
batch_augments = [
    dict(size=(
        896,
        896,
    ), type='BatchFixedSizePad'),
]
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=49,
        type='EMAHook',
        update_buffers=True),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'projects.EfficientDet.efficientdet',
    ])
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet',
        interval=0,
        save_best='coco/bbox_mAP',
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet', type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evalute_type = 'CocoMetric'
image_size = 896
launcher = 'none'
load_from = 'D:/Repositories/test/25-05-09/efficientdet/weights/efficientdet_effb3_bifpn_8xb16-crop896-300e_coco_20230223_122457-e6f7a833.pth'
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet', by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 300
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        arch='b3',
        conv_cfg=dict(type='Conv2dSamePadding'),
        drop_path_rate=0.3,
        frozen_stages=0,
        init_cfg=dict(
            checkpoint=
            'D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth',
            prefix='backbone',
            type='Pretrained'),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        norm_eval=False,
        out_indices=(
            3,
            4,
            5,
        ),
        type='EfficientNet'),
    bbox_head=dict(
        anchor_generator=dict(
            center_offset=0.5,
            octave_base_scale=4,
            ratios=[
                1.0,
                0.5,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=160,
        in_channels=160,
        loss_bbox=dict(beta=0.1, loss_weight=50, type='HuberLoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=1.5,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_classes=4,
        num_ins=5,
        stacked_convs=4,
        type='EfficientDetSepBNHead'),
    data_preprocessor=dict(
        batch_augments=[
            dict(size=(
                896,
                896,
            ), type='BatchFixedSizePad'),
        ],
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=896,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            48,
            136,
            384,
        ],
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_stages=6,
        out_channels=160,
        start_level=0,
        type='BiFPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(
            iou_threshold=0.3,
            method='gaussian',
            min_score=0.001,
            sigma=0.5,
            type='soft_nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            ignore_iof_thr=-1,
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler')),
    type='EfficientDet')
norm_cfg = dict(eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    _scope_='mmdet',
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.16, momentum=0.9, type='SGD', weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=917, start_factor=0.1, type='LinearLR'),
    dict(
        T_max=299,
        begin=1,
        by_epoch=True,
        convert_to_iter_based=True,
        end=300,
        eta_min=0.0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(_scope_='mmdet', type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(
    _scope_='mmdet', max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(_scope_='mmdet', type='AspectRatioBatchSampler'),
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='PhotoMetricDistortion'),
            dict(type='RandomAffine'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='PhotoMetricDistortion'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(_scope_='mmdet', type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    _scope_='mmdet',
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '25-05-09/efficientdet'

2025/05/12 20:14:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/12 20:14:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.down_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.weight:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.cls_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:47 - mmengine - INFO - paramwise_options -- bbox_head.reg_header.pointwise_conv.bias:weight_decay=0.0
2025/05/12 20:14:48 - mmengine - INFO - load backbone in model from: D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth
2025/05/12 20:14:48 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layers.6.bn.running_var, layers.6.bn.running_mean, layers.6.bn.weight, layers.6.bn.bias, layers.6.conv.weight

Name of parameter - Initialization information

backbone.layers.0.conv.weight - torch.Size([40, 3, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.bias - torch.Size([10]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.conv.weight - torch.Size([24, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.weight - torch.Size([6, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.weight - torch.Size([24, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.weight - torch.Size([6, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.weight - torch.Size([144, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.conv.weight - torch.Size([288, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.conv.weight - torch.Size([96, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.conv.weight - torch.Size([576, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.conv.weight - torch.Size([136, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.conv.weight - torch.Size([232, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.conv.weight - torch.Size([1392, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.conv.weight - torch.Size([384, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.conv.weight - torch.Size([2304, 384, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.conv.weight - torch.Size([2304, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.weight - torch.Size([96, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.weight - torch.Size([2304, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.conv.weight - torch.Size([384, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

neck.bifpn.0.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.weight - torch.Size([160, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  
2025/05/12 20:14:49 - mmengine - INFO - Load checkpoint from D:/Repositories/test/25-05-09/efficientdet/weights/efficientdet_effb3_bifpn_8xb16-crop896-300e_coco_20230223_122457-e6f7a833.pth
2025/05/12 20:14:49 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/12 20:14:49 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/12 20:14:49 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\efficientdet.
2025/05/12 20:15:08 - mmengine - INFO - Epoch(train)  [1][ 50/563]  base_lr: 2.3703e-02 lr: 2.3703e-02  eta: 1:47:25  time: 0.3827  data_time: 0.0899  memory: 5310  grad_norm: 5.7515  loss: 1.2708  loss_cls: 0.9699  loss_bbox: 0.3009
2025/05/12 20:15:21 - mmengine - INFO - Epoch(train)  [1][100/563]  base_lr: 3.1563e-02 lr: 3.1563e-02  eta: 1:30:27  time: 0.2637  data_time: 0.0046  memory: 5357  grad_norm: 1.7410  loss: 0.8284  loss_cls: 0.6036  loss_bbox: 0.2247
2025/05/12 20:15:35 - mmengine - INFO - Epoch(train)  [1][150/563]  base_lr: 3.9424e-02 lr: 3.9424e-02  eta: 1:25:39  time: 0.2746  data_time: 0.0045  memory: 5442  grad_norm: 1.6310  loss: 0.8021  loss_cls: 0.5750  loss_bbox: 0.2272
2025/05/12 20:15:48 - mmengine - INFO - Epoch(train)  [1][200/563]  base_lr: 4.7284e-02 lr: 4.7284e-02  eta: 1:22:49  time: 0.2699  data_time: 0.0046  memory: 5368  grad_norm: 1.6995  loss: 0.7991  loss_cls: 0.5833  loss_bbox: 0.2158
2025/05/12 20:16:02 - mmengine - INFO - Epoch(train)  [1][250/563]  base_lr: 5.5144e-02 lr: 5.5144e-02  eta: 1:21:01  time: 0.2699  data_time: 0.0046  memory: 5320  grad_norm: 1.4366  loss: 1.0295  loss_cls: 0.7649  loss_bbox: 0.2646
2025/05/12 20:16:16 - mmengine - INFO - Epoch(train)  [1][300/563]  base_lr: 6.3004e-02 lr: 6.3004e-02  eta: 1:20:40  time: 0.2898  data_time: 0.0046  memory: 5455  grad_norm: 1.3355  loss: 0.8943  loss_cls: 0.6593  loss_bbox: 0.2350
2025/05/12 20:16:29 - mmengine - INFO - Epoch(train)  [1][350/563]  base_lr: 7.0865e-02 lr: 7.0865e-02  eta: 1:19:24  time: 0.2657  data_time: 0.0046  memory: 5264  grad_norm: 1.1668  loss: 0.7865  loss_cls: 0.5525  loss_bbox: 0.2341
2025/05/12 20:16:43 - mmengine - INFO - Epoch(train)  [1][400/563]  base_lr: 7.8725e-02 lr: 7.8725e-02  eta: 1:18:29  time: 0.2687  data_time: 0.0047  memory: 5300  grad_norm: 1.1245  loss: 0.8243  loss_cls: 0.5918  loss_bbox: 0.2325
2025/05/12 20:16:56 - mmengine - INFO - Epoch(train)  [1][450/563]  base_lr: 8.6585e-02 lr: 8.6585e-02  eta: 1:17:38  time: 0.2651  data_time: 0.0047  memory: 5341  grad_norm: 0.9787  loss: 0.7543  loss_cls: 0.5299  loss_bbox: 0.2244
2025/05/12 20:17:09 - mmengine - INFO - Epoch(train)  [1][500/563]  base_lr: 9.4445e-02 lr: 9.4445e-02  eta: 1:16:58  time: 0.2680  data_time: 0.0045  memory: 5441  grad_norm: 0.9558  loss: 0.7877  loss_cls: 0.5498  loss_bbox: 0.2379
2025/05/12 20:17:24 - mmengine - INFO - Epoch(train)  [1][550/563]  base_lr: 1.0231e-01 lr: 1.0231e-01  eta: 1:16:50  time: 0.2858  data_time: 0.0047  memory: 5362  grad_norm: 0.9724  loss: 0.7577  loss_cls: 0.5259  loss_bbox: 0.2318
2025/05/12 20:17:27 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:17:40 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:17:42 - mmengine - INFO - bbox_mAP_copypaste: 0.083 0.170 0.064 -1.000 0.050 0.087
2025/05/12 20:17:42 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0830  coco/bbox_mAP_50: 0.1700  coco/bbox_mAP_75: 0.0640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0500  coco/bbox_mAP_l: 0.0870  data_time: 0.1671  time: 0.2672
2025/05/12 20:17:43 - mmengine - INFO - The best checkpoint with 0.0830 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/12 20:17:57 - mmengine - INFO - Epoch(train)  [2][ 50/563]  base_lr: 1.1221e-01 lr: 1.1221e-01  eta: 1:16:42  time: 0.2947  data_time: 0.0070  memory: 5326  grad_norm: 0.8839  loss: 0.6837  loss_cls: 0.4717  loss_bbox: 0.2120
2025/05/12 20:18:11 - mmengine - INFO - Epoch(train)  [2][100/563]  base_lr: 1.2007e-01 lr: 1.2007e-01  eta: 1:16:16  time: 0.2732  data_time: 0.0060  memory: 5382  grad_norm: 0.9234  loss: 0.6861  loss_cls: 0.4611  loss_bbox: 0.2250
2025/05/12 20:18:26 - mmengine - INFO - Epoch(train)  [2][150/563]  base_lr: 1.2793e-01 lr: 1.2793e-01  eta: 1:16:23  time: 0.3004  data_time: 0.0060  memory: 5320  grad_norm: 0.9500  loss: 0.7237  loss_cls: 0.4911  loss_bbox: 0.2325
2025/05/12 20:18:40 - mmengine - INFO - Epoch(train)  [2][200/563]  base_lr: 1.3579e-01 lr: 1.3579e-01  eta: 1:16:01  time: 0.2758  data_time: 0.0061  memory: 5481  grad_norm: 0.9201  loss: 0.7656  loss_cls: 0.5254  loss_bbox: 0.2402
2025/05/12 20:18:53 - mmengine - INFO - Epoch(train)  [2][250/563]  base_lr: 1.4365e-01 lr: 1.4365e-01  eta: 1:15:33  time: 0.2696  data_time: 0.0059  memory: 5471  grad_norm: 12.1978  loss: 2.6157  loss_cls: 2.3087  loss_bbox: 0.3070
2025/05/12 20:19:07 - mmengine - INFO - Epoch(train)  [2][300/563]  base_lr: 1.5151e-01 lr: 1.5151e-01  eta: 1:15:07  time: 0.2687  data_time: 0.0060  memory: 5290  grad_norm: 4.3905  loss: 1.9965  loss_cls: 1.5052  loss_bbox: 0.4913
2025/05/12 20:19:20 - mmengine - INFO - Epoch(train)  [2][350/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 1:14:48  time: 0.2760  data_time: 0.0060  memory: 5347  grad_norm: 1.0410  loss: 1.5428  loss_cls: 1.0752  loss_bbox: 0.4676
2025/05/12 20:19:35 - mmengine - INFO - Epoch(train)  [2][400/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:14:35  time: 0.2816  data_time: 0.0050  memory: 5331  grad_norm: 0.8562  loss: 1.2218  loss_cls: 0.8427  loss_bbox: 0.3791
2025/05/12 20:19:44 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:19:48 - mmengine - INFO - Epoch(train)  [2][450/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:14:09  time: 0.2664  data_time: 0.0049  memory: 5300  grad_norm: 0.6843  loss: 1.0466  loss_cls: 0.7049  loss_bbox: 0.3417
2025/05/12 20:20:01 - mmengine - INFO - Epoch(train)  [2][500/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:13:45  time: 0.2661  data_time: 0.0048  memory: 5392  grad_norm: 0.6340  loss: 0.9713  loss_cls: 0.6488  loss_bbox: 0.3225
2025/05/12 20:20:15 - mmengine - INFO - Epoch(train)  [2][550/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:13:26  time: 0.2730  data_time: 0.0049  memory: 5362  grad_norm: 0.6070  loss: 0.9041  loss_cls: 0.6045  loss_bbox: 0.2996
2025/05/12 20:20:18 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:20:24 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:20:25 - mmengine - INFO - bbox_mAP_copypaste: 0.064 0.154 0.032 -1.000 0.032 0.066
2025/05/12 20:20:25 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0640  coco/bbox_mAP_50: 0.1540  coco/bbox_mAP_75: 0.0320  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0320  coco/bbox_mAP_l: 0.0660  data_time: 0.0016  time: 0.1056
2025/05/12 20:20:39 - mmengine - INFO - Epoch(train)  [3][ 50/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:13:07  time: 0.2794  data_time: 0.0058  memory: 5444  grad_norm: 0.6686  loss: 0.9679  loss_cls: 0.6698  loss_bbox: 0.2980
2025/05/12 20:20:53 - mmengine - INFO - Epoch(train)  [3][100/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:50  time: 0.2752  data_time: 0.0050  memory: 5409  grad_norm: 0.6087  loss: 0.9485  loss_cls: 0.6360  loss_bbox: 0.3125
2025/05/12 20:21:06 - mmengine - INFO - Epoch(train)  [3][150/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:30  time: 0.2692  data_time: 0.0049  memory: 5470  grad_norm: 0.5720  loss: 0.8806  loss_cls: 0.5892  loss_bbox: 0.2915
2025/05/12 20:21:20 - mmengine - INFO - Epoch(train)  [3][200/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:12:10  time: 0.2683  data_time: 0.0048  memory: 5346  grad_norm: 0.5410  loss: 0.8444  loss_cls: 0.5495  loss_bbox: 0.2949
2025/05/12 20:21:34 - mmengine - INFO - Epoch(train)  [3][250/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:59  time: 0.2833  data_time: 0.0049  memory: 5316  grad_norm: 0.5569  loss: 0.8447  loss_cls: 0.5654  loss_bbox: 0.2793
2025/05/12 20:21:47 - mmengine - INFO - Epoch(train)  [3][300/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:39  time: 0.2672  data_time: 0.0049  memory: 5295  grad_norm: 0.5740  loss: 0.8525  loss_cls: 0.5768  loss_bbox: 0.2757
2025/05/12 20:22:01 - mmengine - INFO - Epoch(train)  [3][350/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:21  time: 0.2698  data_time: 0.0050  memory: 5254  grad_norm: 0.5540  loss: 0.8258  loss_cls: 0.5494  loss_bbox: 0.2763
2025/05/12 20:22:14 - mmengine - INFO - Epoch(train)  [3][400/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:11:01  time: 0.2665  data_time: 0.0049  memory: 5336  grad_norm: 0.5605  loss: 0.8589  loss_cls: 0.5959  loss_bbox: 0.2630
2025/05/12 20:22:28 - mmengine - INFO - Epoch(train)  [3][450/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:10:48  time: 0.2787  data_time: 0.0049  memory: 5310  grad_norm: 0.6096  loss: 0.9002  loss_cls: 0.6108  loss_bbox: 0.2894
2025/05/12 20:22:42 - mmengine - INFO - Epoch(train)  [3][500/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:10:36  time: 0.2809  data_time: 0.0048  memory: 5383  grad_norm: 0.5144  loss: 0.7800  loss_cls: 0.5354  loss_bbox: 0.2446
2025/05/12 20:22:55 - mmengine - INFO - Epoch(train)  [3][550/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:10:18  time: 0.2697  data_time: 0.0050  memory: 5264  grad_norm: 0.5892  loss: 1.0426  loss_cls: 0.7581  loss_bbox: 0.2845
2025/05/12 20:22:59 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:23:04 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:23:05 - mmengine - INFO - bbox_mAP_copypaste: 0.069 0.143 0.057 -1.000 0.031 0.073
2025/05/12 20:23:05 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.0690  coco/bbox_mAP_50: 0.1430  coco/bbox_mAP_75: 0.0570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0310  coco/bbox_mAP_l: 0.0730  data_time: 0.0015  time: 0.0985
2025/05/12 20:23:19 - mmengine - INFO - Epoch(train)  [4][ 50/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:56  time: 0.2690  data_time: 0.0057  memory: 5382  grad_norm: 0.6029  loss: 0.9154  loss_cls: 0.6479  loss_bbox: 0.2675
2025/05/12 20:23:32 - mmengine - INFO - Epoch(train)  [4][100/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:41  time: 0.2738  data_time: 0.0049  memory: 5306  grad_norm: 0.5217  loss: 0.8169  loss_cls: 0.5424  loss_bbox: 0.2746
2025/05/12 20:23:47 - mmengine - INFO - Epoch(train)  [4][150/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:31  time: 0.2857  data_time: 0.0048  memory: 5361  grad_norm: 0.5926  loss: 0.8301  loss_cls: 0.5743  loss_bbox: 0.2558
2025/05/12 20:24:00 - mmengine - INFO - Epoch(train)  [4][200/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:09:15  time: 0.2718  data_time: 0.0050  memory: 5460  grad_norm: 0.5519  loss: 0.9340  loss_cls: 0.6487  loss_bbox: 0.2853
2025/05/12 20:24:14 - mmengine - INFO - Epoch(train)  [4][250/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:08:59  time: 0.2716  data_time: 0.0048  memory: 5337  grad_norm: 0.5415  loss: 0.8684  loss_cls: 0.5973  loss_bbox: 0.2711
2025/05/12 20:24:27 - mmengine - INFO - Epoch(train)  [4][300/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:08:43  time: 0.2699  data_time: 0.0049  memory: 5383  grad_norm: 0.5430  loss: 0.8089  loss_cls: 0.5476  loss_bbox: 0.2613
2025/05/12 20:24:30 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:24:42 - mmengine - INFO - Epoch(train)  [4][350/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:08:35  time: 0.2928  data_time: 0.0049  memory: 5367  grad_norm: 0.5689  loss: 0.8328  loss_cls: 0.5571  loss_bbox: 0.2757
2025/05/12 20:24:56 - mmengine - INFO - Epoch(train)  [4][400/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:08:18  time: 0.2707  data_time: 0.0049  memory: 5399  grad_norm: 0.5289  loss: 0.8185  loss_cls: 0.5445  loss_bbox: 0.2740
2025/05/12 20:25:09 - mmengine - INFO - Epoch(train)  [4][450/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:08:02  time: 0.2692  data_time: 0.0049  memory: 5406  grad_norm: 0.5159  loss: 0.8162  loss_cls: 0.5554  loss_bbox: 0.2608
2025/05/12 20:25:23 - mmengine - INFO - Epoch(train)  [4][500/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:07:46  time: 0.2692  data_time: 0.0048  memory: 5316  grad_norm: 0.4966  loss: 0.7118  loss_cls: 0.4843  loss_bbox: 0.2275
2025/05/12 20:25:36 - mmengine - INFO - Epoch(train)  [4][550/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:07:32  time: 0.2768  data_time: 0.0049  memory: 5383  grad_norm: 0.5094  loss: 0.7694  loss_cls: 0.5191  loss_bbox: 0.2503
2025/05/12 20:25:40 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:25:45 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:25:46 - mmengine - INFO - bbox_mAP_copypaste: 0.093 0.193 0.074 -1.000 0.051 0.100
2025/05/12 20:25:46 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.0930  coco/bbox_mAP_50: 0.1930  coco/bbox_mAP_75: 0.0740  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0510  coco/bbox_mAP_l: 0.1000  data_time: 0.0015  time: 0.0952
2025/05/12 20:25:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/12 20:25:47 - mmengine - INFO - The best checkpoint with 0.0930 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/12 20:26:02 - mmengine - INFO - Epoch(train)  [5][ 50/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:07:22  time: 0.2960  data_time: 0.0057  memory: 5461  grad_norm: 0.4877  loss: 0.7416  loss_cls: 0.5051  loss_bbox: 0.2364
2025/05/12 20:26:15 - mmengine - INFO - Epoch(train)  [5][100/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:07:04  time: 0.2652  data_time: 0.0048  memory: 5342  grad_norm: 0.5758  loss: 0.7954  loss_cls: 0.5239  loss_bbox: 0.2714
2025/05/12 20:26:29 - mmengine - INFO - Epoch(train)  [5][150/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:06:48  time: 0.2677  data_time: 0.0050  memory: 5434  grad_norm: 0.5477  loss: 0.7830  loss_cls: 0.5167  loss_bbox: 0.2663
2025/05/12 20:26:42 - mmengine - INFO - Epoch(train)  [5][200/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:06:33  time: 0.2727  data_time: 0.0049  memory: 5264  grad_norm: 0.5205  loss: 0.7844  loss_cls: 0.5144  loss_bbox: 0.2700
2025/05/12 20:26:56 - mmengine - INFO - Epoch(train)  [5][250/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:06:21  time: 0.2843  data_time: 0.0048  memory: 5233  grad_norm: 0.5015  loss: 0.7075  loss_cls: 0.4829  loss_bbox: 0.2246
2025/05/12 20:27:10 - mmengine - INFO - Epoch(train)  [5][300/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:06:05  time: 0.2675  data_time: 0.0047  memory: 5399  grad_norm: 0.5199  loss: 0.7489  loss_cls: 0.5097  loss_bbox: 0.2392
2025/05/12 20:27:23 - mmengine - INFO - Epoch(train)  [5][350/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:05:49  time: 0.2683  data_time: 0.0049  memory: 5393  grad_norm: 0.5917  loss: 0.8497  loss_cls: 0.6100  loss_bbox: 0.2397
2025/05/12 20:27:37 - mmengine - INFO - Epoch(train)  [5][400/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:05:32  time: 0.2660  data_time: 0.0049  memory: 5368  grad_norm: 0.5359  loss: 0.8250  loss_cls: 0.5658  loss_bbox: 0.2592
2025/05/12 20:27:52 - mmengine - INFO - Epoch(train)  [5][450/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:05:24  time: 0.2989  data_time: 0.0050  memory: 5460  grad_norm: 0.5509  loss: 0.7879  loss_cls: 0.5254  loss_bbox: 0.2624
2025/05/12 20:28:05 - mmengine - INFO - Epoch(train)  [5][500/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:05:08  time: 0.2681  data_time: 0.0049  memory: 5326  grad_norm: 0.5868  loss: 0.8335  loss_cls: 0.5661  loss_bbox: 0.2674
2025/05/12 20:28:18 - mmengine - INFO - Epoch(train)  [5][550/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:04:53  time: 0.2698  data_time: 0.0050  memory: 5321  grad_norm: 0.5059  loss: 0.7499  loss_cls: 0.5024  loss_bbox: 0.2475
2025/05/12 20:28:22 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:28:26 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:28:28 - mmengine - INFO - bbox_mAP_copypaste: 0.085 0.184 0.061 -1.000 0.038 0.091
2025/05/12 20:28:28 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.0850  coco/bbox_mAP_50: 0.1840  coco/bbox_mAP_75: 0.0610  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0380  coco/bbox_mAP_l: 0.0910  data_time: 0.0016  time: 0.0858
2025/05/12 20:28:41 - mmengine - INFO - Epoch(train)  [6][ 50/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 1:04:34  time: 0.2703  data_time: 0.0058  memory: 5441  grad_norm: 0.4873  loss: 0.7659  loss_cls: 0.5267  loss_bbox: 0.2392
2025/05/12 20:28:56 - mmengine - INFO - Epoch(train)  [6][100/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:04:24  time: 0.2913  data_time: 0.0049  memory: 5120  grad_norm: 0.5113  loss: 0.7324  loss_cls: 0.4912  loss_bbox: 0.2411
2025/05/12 20:29:09 - mmengine - INFO - Epoch(train)  [6][150/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:04:09  time: 0.2725  data_time: 0.0049  memory: 5361  grad_norm: 0.4973  loss: 0.7459  loss_cls: 0.5007  loss_bbox: 0.2451
2025/05/12 20:29:19 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:29:23 - mmengine - INFO - Epoch(train)  [6][200/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 1:03:52  time: 0.2638  data_time: 0.0048  memory: 5217  grad_norm: 0.5300  loss: 0.7430  loss_cls: 0.4977  loss_bbox: 0.2453
2025/05/12 20:29:36 - mmengine - INFO - Epoch(train)  [6][250/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:03:37  time: 0.2707  data_time: 0.0049  memory: 5300  grad_norm: 0.5347  loss: 0.7355  loss_cls: 0.4961  loss_bbox: 0.2394
2025/05/12 20:29:50 - mmengine - INFO - Epoch(train)  [6][300/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:03:23  time: 0.2759  data_time: 0.0049  memory: 5295  grad_norm: 0.5540  loss: 0.7126  loss_cls: 0.4819  loss_bbox: 0.2307
2025/05/12 20:30:04 - mmengine - INFO - Epoch(train)  [6][350/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 1:03:10  time: 0.2790  data_time: 0.0048  memory: 5445  grad_norm: 0.4904  loss: 0.7031  loss_cls: 0.4790  loss_bbox: 0.2241
2025/05/12 20:30:17 - mmengine - INFO - Epoch(train)  [6][400/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:02:54  time: 0.2652  data_time: 0.0049  memory: 5346  grad_norm: 0.5161  loss: 0.7062  loss_cls: 0.4791  loss_bbox: 0.2270
2025/05/12 20:30:31 - mmengine - INFO - Epoch(train)  [6][450/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 1:02:38  time: 0.2675  data_time: 0.0049  memory: 5341  grad_norm: 0.5767  loss: 0.7468  loss_cls: 0.4900  loss_bbox: 0.2568
2025/05/12 20:30:44 - mmengine - INFO - Epoch(train)  [6][500/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:02:23  time: 0.2667  data_time: 0.0048  memory: 5321  grad_norm: 0.5346  loss: 0.7300  loss_cls: 0.4841  loss_bbox: 0.2459
2025/05/12 20:30:59 - mmengine - INFO - Epoch(train)  [6][550/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:02:13  time: 0.2944  data_time: 0.0049  memory: 5306  grad_norm: 0.5520  loss: 0.7476  loss_cls: 0.5134  loss_bbox: 0.2343
2025/05/12 20:31:02 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:31:07 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:31:08 - mmengine - INFO - bbox_mAP_copypaste: 0.111 0.216 0.103 -1.000 0.079 0.117
2025/05/12 20:31:08 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.1110  coco/bbox_mAP_50: 0.2160  coco/bbox_mAP_75: 0.1030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0790  coco/bbox_mAP_l: 0.1170  data_time: 0.0016  time: 0.0860
2025/05/12 20:31:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/12 20:31:09 - mmengine - INFO - The best checkpoint with 0.1110 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/12 20:31:22 - mmengine - INFO - Epoch(train)  [7][ 50/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 1:01:54  time: 0.2722  data_time: 0.0058  memory: 5280  grad_norm: 0.4435  loss: 0.6666  loss_cls: 0.4624  loss_bbox: 0.2042
2025/05/12 20:31:36 - mmengine - INFO - Epoch(train)  [7][100/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:01:38  time: 0.2645  data_time: 0.0047  memory: 5253  grad_norm: 0.4955  loss: 0.6839  loss_cls: 0.4573  loss_bbox: 0.2265
2025/05/12 20:31:49 - mmengine - INFO - Epoch(train)  [7][150/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 1:01:23  time: 0.2673  data_time: 0.0047  memory: 5383  grad_norm: 0.5425  loss: 0.7031  loss_cls: 0.4791  loss_bbox: 0.2240
2025/05/12 20:32:04 - mmengine - INFO - Epoch(train)  [7][200/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 1:01:13  time: 0.2975  data_time: 0.0048  memory: 5337  grad_norm: 0.5056  loss: 0.7254  loss_cls: 0.4839  loss_bbox: 0.2415
2025/05/12 20:32:17 - mmengine - INFO - Epoch(train)  [7][250/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 1:00:58  time: 0.2688  data_time: 0.0049  memory: 5387  grad_norm: 0.5423  loss: 0.6968  loss_cls: 0.4633  loss_bbox: 0.2335
2025/05/12 20:32:31 - mmengine - INFO - Epoch(train)  [7][300/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:00:42  time: 0.2662  data_time: 0.0049  memory: 5398  grad_norm: 0.5810  loss: 0.7728  loss_cls: 0.5332  loss_bbox: 0.2397
2025/05/12 20:32:44 - mmengine - INFO - Epoch(train)  [7][350/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:00:27  time: 0.2655  data_time: 0.0049  memory: 5382  grad_norm: 0.5348  loss: 0.7250  loss_cls: 0.4939  loss_bbox: 0.2311
2025/05/12 20:32:57 - mmengine - INFO - Epoch(train)  [7][400/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 1:00:13  time: 0.2734  data_time: 0.0049  memory: 5445  grad_norm: 0.5848  loss: 0.7611  loss_cls: 0.5096  loss_bbox: 0.2515
2025/05/12 20:33:12 - mmengine - INFO - Epoch(train)  [7][450/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 1:00:00  time: 0.2837  data_time: 0.0048  memory: 5399  grad_norm: 0.5122  loss: 0.7236  loss_cls: 0.4900  loss_bbox: 0.2336
2025/05/12 20:33:25 - mmengine - INFO - Epoch(train)  [7][500/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:59:45  time: 0.2676  data_time: 0.0048  memory: 5475  grad_norm: 0.5038  loss: 0.7033  loss_cls: 0.4875  loss_bbox: 0.2158
2025/05/12 20:33:39 - mmengine - INFO - Epoch(train)  [7][550/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:59:31  time: 0.2708  data_time: 0.0049  memory: 5429  grad_norm: 0.5212  loss: 0.6775  loss_cls: 0.4612  loss_bbox: 0.2163
2025/05/12 20:33:42 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:33:46 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:33:47 - mmengine - INFO - bbox_mAP_copypaste: 0.154 0.292 0.146 -1.000 0.102 0.162
2025/05/12 20:33:47 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.1540  coco/bbox_mAP_50: 0.2920  coco/bbox_mAP_75: 0.1460  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1020  coco/bbox_mAP_l: 0.1620  data_time: 0.0016  time: 0.0820
2025/05/12 20:33:48 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/12 20:33:48 - mmengine - INFO - The best checkpoint with 0.1540 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/12 20:34:04 - mmengine - INFO - Epoch(train)  [8][ 50/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:59:18  time: 0.3047  data_time: 0.0058  memory: 5398  grad_norm: 0.5168  loss: 0.6847  loss_cls: 0.4618  loss_bbox: 0.2229
2025/05/12 20:34:07 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:34:17 - mmengine - INFO - Epoch(train)  [8][100/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:59:04  time: 0.2764  data_time: 0.0049  memory: 5373  grad_norm: 0.5224  loss: 0.7106  loss_cls: 0.4742  loss_bbox: 0.2364
2025/05/12 20:34:31 - mmengine - INFO - Epoch(train)  [8][150/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:58:49  time: 0.2717  data_time: 0.0048  memory: 5441  grad_norm: 0.5785  loss: 0.7347  loss_cls: 0.4996  loss_bbox: 0.2352
2025/05/12 20:34:44 - mmengine - INFO - Epoch(train)  [8][200/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:58:34  time: 0.2657  data_time: 0.0048  memory: 5393  grad_norm: 0.5299  loss: 0.6881  loss_cls: 0.4615  loss_bbox: 0.2266
2025/05/12 20:34:58 - mmengine - INFO - Epoch(train)  [8][250/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:58:19  time: 0.2688  data_time: 0.0048  memory: 5336  grad_norm: 0.5635  loss: 0.7014  loss_cls: 0.4665  loss_bbox: 0.2350
2025/05/12 20:35:12 - mmengine - INFO - Epoch(train)  [8][300/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:58:08  time: 0.2906  data_time: 0.0049  memory: 5383  grad_norm: 0.5452  loss: 0.6913  loss_cls: 0.4676  loss_bbox: 0.2237
2025/05/12 20:35:26 - mmengine - INFO - Epoch(train)  [8][350/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:57:53  time: 0.2675  data_time: 0.0048  memory: 5347  grad_norm: 0.5156  loss: 0.6721  loss_cls: 0.4537  loss_bbox: 0.2184
2025/05/12 20:35:39 - mmengine - INFO - Epoch(train)  [8][400/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:57:37  time: 0.2650  data_time: 0.0049  memory: 5414  grad_norm: 0.5698  loss: 0.7324  loss_cls: 0.4831  loss_bbox: 0.2493
2025/05/12 20:35:53 - mmengine - INFO - Epoch(train)  [8][450/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:57:23  time: 0.2728  data_time: 0.0049  memory: 5413  grad_norm: 0.5737  loss: 0.7363  loss_cls: 0.5042  loss_bbox: 0.2321
2025/05/12 20:36:06 - mmengine - INFO - Epoch(train)  [8][500/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:57:08  time: 0.2675  data_time: 0.0048  memory: 5392  grad_norm: 0.4723  loss: 0.7107  loss_cls: 0.4850  loss_bbox: 0.2258
2025/05/12 20:36:21 - mmengine - INFO - Epoch(train)  [8][550/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:56:58  time: 0.2992  data_time: 0.0047  memory: 5326  grad_norm: 0.5014  loss: 0.6615  loss_cls: 0.4394  loss_bbox: 0.2221
2025/05/12 20:36:24 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:36:29 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:36:30 - mmengine - INFO - bbox_mAP_copypaste: 0.138 0.270 0.120 -1.000 0.083 0.148
2025/05/12 20:36:30 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.1380  coco/bbox_mAP_50: 0.2700  coco/bbox_mAP_75: 0.1200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0830  coco/bbox_mAP_l: 0.1480  data_time: 0.0016  time: 0.0840
2025/05/12 20:36:43 - mmengine - INFO - Epoch(train)  [9][ 50/563]  base_lr: 1.5978e-01 lr: 1.5978e-01  eta: 0:56:39  time: 0.2685  data_time: 0.0060  memory: 5449  grad_norm: 0.5338  loss: 0.6818  loss_cls: 0.4506  loss_bbox: 0.2312
2025/05/12 20:36:57 - mmengine - INFO - Epoch(train)  [9][100/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:56:25  time: 0.2700  data_time: 0.0049  memory: 5377  grad_norm: 0.6127  loss: 0.7171  loss_cls: 0.4666  loss_bbox: 0.2505
2025/05/12 20:37:11 - mmengine - INFO - Epoch(train)  [9][150/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:56:11  time: 0.2749  data_time: 0.0049  memory: 5269  grad_norm: 0.5226  loss: 0.6837  loss_cls: 0.4554  loss_bbox: 0.2282
2025/05/12 20:37:25 - mmengine - INFO - Epoch(train)  [9][200/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:55:58  time: 0.2784  data_time: 0.0048  memory: 5399  grad_norm: 0.5461  loss: 0.6783  loss_cls: 0.4594  loss_bbox: 0.2189
2025/05/12 20:37:38 - mmengine - INFO - Epoch(train)  [9][250/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:55:42  time: 0.2654  data_time: 0.0048  memory: 5470  grad_norm: 0.5684  loss: 0.7065  loss_cls: 0.4765  loss_bbox: 0.2300
2025/05/12 20:37:51 - mmengine - INFO - Epoch(train)  [9][300/563]  base_lr: 1.5975e-01 lr: 1.5975e-01  eta: 0:55:28  time: 0.2687  data_time: 0.0050  memory: 5414  grad_norm: 0.4871  loss: 0.6516  loss_cls: 0.4407  loss_bbox: 0.2109
2025/05/12 20:38:05 - mmengine - INFO - Epoch(train)  [9][350/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:55:13  time: 0.2662  data_time: 0.0050  memory: 5392  grad_norm: 0.5035  loss: 0.6509  loss_cls: 0.4440  loss_bbox: 0.2069
2025/05/12 20:38:19 - mmengine - INFO - Epoch(train)  [9][400/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:55:02  time: 0.2974  data_time: 0.0048  memory: 5275  grad_norm: 0.5533  loss: 0.6882  loss_cls: 0.4709  loss_bbox: 0.2173
2025/05/12 20:38:33 - mmengine - INFO - Epoch(train)  [9][450/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:54:47  time: 0.2664  data_time: 0.0049  memory: 5405  grad_norm: 0.5276  loss: 0.6568  loss_cls: 0.4438  loss_bbox: 0.2130
2025/05/12 20:38:45 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:38:46 - mmengine - INFO - Epoch(train)  [9][500/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:54:33  time: 0.2718  data_time: 0.0050  memory: 5435  grad_norm: 0.5453  loss: 0.6873  loss_cls: 0.4608  loss_bbox: 0.2265
2025/05/12 20:39:00 - mmengine - INFO - Epoch(train)  [9][550/563]  base_lr: 1.5972e-01 lr: 1.5972e-01  eta: 0:54:18  time: 0.2692  data_time: 0.0050  memory: 5423  grad_norm: 0.5170  loss: 0.6647  loss_cls: 0.4385  loss_bbox: 0.2262
2025/05/12 20:39:04 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:39:08 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:39:09 - mmengine - INFO - bbox_mAP_copypaste: 0.163 0.307 0.159 -1.000 0.117 0.171
2025/05/12 20:39:09 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.1630  coco/bbox_mAP_50: 0.3070  coco/bbox_mAP_75: 0.1590  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1170  coco/bbox_mAP_l: 0.1710  data_time: 0.0015  time: 0.0827
2025/05/12 20:39:09 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/12 20:39:10 - mmengine - INFO - The best checkpoint with 0.1630 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/12 20:39:24 - mmengine - INFO - Epoch(train) [10][ 50/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:54:03  time: 0.2899  data_time: 0.0059  memory: 5461  grad_norm: 0.5178  loss: 0.6427  loss_cls: 0.4296  loss_bbox: 0.2132
2025/05/12 20:39:38 - mmengine - INFO - Epoch(train) [10][100/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:53:49  time: 0.2739  data_time: 0.0048  memory: 5429  grad_norm: 0.5449  loss: 0.6602  loss_cls: 0.4371  loss_bbox: 0.2232
2025/05/12 20:39:51 - mmengine - INFO - Epoch(train) [10][150/563]  base_lr: 1.5970e-01 lr: 1.5970e-01  eta: 0:53:34  time: 0.2633  data_time: 0.0049  memory: 5290  grad_norm: 0.5587  loss: 0.6840  loss_cls: 0.4570  loss_bbox: 0.2270
2025/05/12 20:40:05 - mmengine - INFO - Epoch(train) [10][200/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:53:19  time: 0.2677  data_time: 0.0049  memory: 5368  grad_norm: 0.5777  loss: 0.7057  loss_cls: 0.4447  loss_bbox: 0.2610
2025/05/12 20:40:18 - mmengine - INFO - Epoch(train) [10][250/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:53:05  time: 0.2717  data_time: 0.0049  memory: 5311  grad_norm: 0.5180  loss: 0.6587  loss_cls: 0.4366  loss_bbox: 0.2221
2025/05/12 20:40:33 - mmengine - INFO - Epoch(train) [10][300/563]  base_lr: 1.5968e-01 lr: 1.5968e-01  eta: 0:52:53  time: 0.2956  data_time: 0.0049  memory: 5450  grad_norm: 0.5145  loss: 0.6413  loss_cls: 0.4287  loss_bbox: 0.2127
2025/05/12 20:40:46 - mmengine - INFO - Epoch(train) [10][350/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:52:39  time: 0.2672  data_time: 0.0049  memory: 5346  grad_norm: 0.5514  loss: 0.6845  loss_cls: 0.4643  loss_bbox: 0.2202
2025/05/12 20:41:00 - mmengine - INFO - Epoch(train) [10][400/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:52:24  time: 0.2689  data_time: 0.0050  memory: 5475  grad_norm: 0.4714  loss: 0.6438  loss_cls: 0.4430  loss_bbox: 0.2007
2025/05/12 20:41:13 - mmengine - INFO - Epoch(train) [10][450/563]  base_lr: 1.5966e-01 lr: 1.5966e-01  eta: 0:52:10  time: 0.2661  data_time: 0.0049  memory: 5233  grad_norm: 0.5551  loss: 0.6914  loss_cls: 0.4744  loss_bbox: 0.2170
2025/05/12 20:41:28 - mmengine - INFO - Epoch(train) [10][500/563]  base_lr: 1.5965e-01 lr: 1.5965e-01  eta: 0:51:58  time: 0.2946  data_time: 0.0051  memory: 5336  grad_norm: 0.5094  loss: 0.6570  loss_cls: 0.4331  loss_bbox: 0.2238
2025/05/12 20:41:41 - mmengine - INFO - Epoch(train) [10][550/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:51:43  time: 0.2676  data_time: 0.0050  memory: 5382  grad_norm: 0.5287  loss: 0.6407  loss_cls: 0.4367  loss_bbox: 0.2040
2025/05/12 20:41:45 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:41:49 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:41:51 - mmengine - INFO - bbox_mAP_copypaste: 0.162 0.302 0.158 -1.000 0.085 0.174
2025/05/12 20:41:51 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.1620  coco/bbox_mAP_50: 0.3020  coco/bbox_mAP_75: 0.1580  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0850  coco/bbox_mAP_l: 0.1740  data_time: 0.0016  time: 0.0844
2025/05/12 20:42:04 - mmengine - INFO - Epoch(train) [11][ 50/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:51:25  time: 0.2660  data_time: 0.0058  memory: 5406  grad_norm: 0.5271  loss: 0.6551  loss_cls: 0.4487  loss_bbox: 0.2064
2025/05/12 20:42:17 - mmengine - INFO - Epoch(train) [11][100/563]  base_lr: 1.5963e-01 lr: 1.5963e-01  eta: 0:51:11  time: 0.2689  data_time: 0.0049  memory: 5367  grad_norm: 0.5243  loss: 0.6503  loss_cls: 0.4411  loss_bbox: 0.2093
2025/05/12 20:42:32 - mmengine - INFO - Epoch(train) [11][150/563]  base_lr: 1.5962e-01 lr: 1.5962e-01  eta: 0:50:59  time: 0.2992  data_time: 0.0048  memory: 5337  grad_norm: 0.5174  loss: 0.6392  loss_cls: 0.4401  loss_bbox: 0.1991
2025/05/12 20:42:46 - mmengine - INFO - Epoch(train) [11][200/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:50:45  time: 0.2702  data_time: 0.0049  memory: 5383  grad_norm: 0.5481  loss: 0.6515  loss_cls: 0.4398  loss_bbox: 0.2117
2025/05/12 20:42:59 - mmengine - INFO - Epoch(train) [11][250/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:50:30  time: 0.2652  data_time: 0.0049  memory: 5289  grad_norm: 0.5580  loss: 0.6811  loss_cls: 0.4616  loss_bbox: 0.2195
2025/05/12 20:43:12 - mmengine - INFO - Epoch(train) [11][300/563]  base_lr: 1.5960e-01 lr: 1.5960e-01  eta: 0:50:16  time: 0.2675  data_time: 0.0049  memory: 5357  grad_norm: 0.5426  loss: 0.6271  loss_cls: 0.4317  loss_bbox: 0.1954
2025/05/12 20:43:26 - mmengine - INFO - Epoch(train) [11][350/563]  base_lr: 1.5959e-01 lr: 1.5959e-01  eta: 0:50:01  time: 0.2657  data_time: 0.0050  memory: 5480  grad_norm: 0.5899  loss: 0.6803  loss_cls: 0.4397  loss_bbox: 0.2407
2025/05/12 20:43:32 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:43:40 - mmengine - INFO - Epoch(train) [11][400/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:49:49  time: 0.2917  data_time: 0.0048  memory: 5305  grad_norm: 0.5361  loss: 0.6594  loss_cls: 0.4340  loss_bbox: 0.2253
2025/05/12 20:43:54 - mmengine - INFO - Epoch(train) [11][450/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:49:34  time: 0.2650  data_time: 0.0049  memory: 5372  grad_norm: 0.5563  loss: 0.6755  loss_cls: 0.4488  loss_bbox: 0.2268
2025/05/12 20:44:07 - mmengine - INFO - Epoch(train) [11][500/563]  base_lr: 1.5957e-01 lr: 1.5957e-01  eta: 0:49:20  time: 0.2668  data_time: 0.0049  memory: 5450  grad_norm: 0.4752  loss: 0.5944  loss_cls: 0.3989  loss_bbox: 0.1956
2025/05/12 20:44:20 - mmengine - INFO - Epoch(train) [11][550/563]  base_lr: 1.5956e-01 lr: 1.5956e-01  eta: 0:49:05  time: 0.2648  data_time: 0.0048  memory: 5409  grad_norm: 0.5262  loss: 0.6464  loss_cls: 0.4339  loss_bbox: 0.2125
2025/05/12 20:44:24 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:44:28 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:44:29 - mmengine - INFO - bbox_mAP_copypaste: 0.142 0.265 0.139 -1.000 0.074 0.153
2025/05/12 20:44:29 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.1420  coco/bbox_mAP_50: 0.2650  coco/bbox_mAP_75: 0.1390  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0740  coco/bbox_mAP_l: 0.1530  data_time: 0.0016  time: 0.0822
2025/05/12 20:44:44 - mmengine - INFO - Epoch(train) [12][ 50/563]  base_lr: 1.5955e-01 lr: 1.5955e-01  eta: 0:48:49  time: 0.2923  data_time: 0.0058  memory: 5336  grad_norm: 0.5349  loss: 0.8296  loss_cls: 0.5861  loss_bbox: 0.2435
2025/05/12 20:44:57 - mmengine - INFO - Epoch(train) [12][100/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:48:35  time: 0.2706  data_time: 0.0048  memory: 5449  grad_norm: 0.5524  loss: 0.7426  loss_cls: 0.4977  loss_bbox: 0.2449
2025/05/12 20:45:10 - mmengine - INFO - Epoch(train) [12][150/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:48:20  time: 0.2680  data_time: 0.0050  memory: 5449  grad_norm: 0.4692  loss: 0.6497  loss_cls: 0.4435  loss_bbox: 0.2063
2025/05/12 20:45:24 - mmengine - INFO - Epoch(train) [12][200/563]  base_lr: 1.5953e-01 lr: 1.5953e-01  eta: 0:48:06  time: 0.2708  data_time: 0.0049  memory: 5368  grad_norm: 0.5159  loss: 0.6840  loss_cls: 0.4773  loss_bbox: 0.2068
2025/05/12 20:45:39 - mmengine - INFO - Epoch(train) [12][250/563]  base_lr: 1.5952e-01 lr: 1.5952e-01  eta: 0:47:54  time: 0.2905  data_time: 0.0049  memory: 5341  grad_norm: 0.4966  loss: 0.6756  loss_cls: 0.4649  loss_bbox: 0.2108
2025/05/12 20:45:52 - mmengine - INFO - Epoch(train) [12][300/563]  base_lr: 1.5951e-01 lr: 1.5951e-01  eta: 0:47:40  time: 0.2785  data_time: 0.0048  memory: 5337  grad_norm: 0.4901  loss: 0.6256  loss_cls: 0.4261  loss_bbox: 0.1995
2025/05/12 20:46:06 - mmengine - INFO - Epoch(train) [12][350/563]  base_lr: 1.5950e-01 lr: 1.5950e-01  eta: 0:47:26  time: 0.2671  data_time: 0.0050  memory: 5406  grad_norm: 0.5567  loss: 0.6453  loss_cls: 0.4356  loss_bbox: 0.2097
2025/05/12 20:46:19 - mmengine - INFO - Epoch(train) [12][400/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:47:12  time: 0.2713  data_time: 0.0049  memory: 5274  grad_norm: 0.5556  loss: 0.6707  loss_cls: 0.4602  loss_bbox: 0.2104
2025/05/12 20:46:33 - mmengine - INFO - Epoch(train) [12][450/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:46:58  time: 0.2683  data_time: 0.0049  memory: 5383  grad_norm: 0.5241  loss: 0.6602  loss_cls: 0.4363  loss_bbox: 0.2239
2025/05/12 20:46:48 - mmengine - INFO - Epoch(train) [12][500/563]  base_lr: 1.5948e-01 lr: 1.5948e-01  eta: 0:46:46  time: 0.2986  data_time: 0.0048  memory: 5409  grad_norm: 0.5290  loss: 0.6466  loss_cls: 0.4384  loss_bbox: 0.2082
2025/05/12 20:47:01 - mmengine - INFO - Epoch(train) [12][550/563]  base_lr: 1.5947e-01 lr: 1.5947e-01  eta: 0:46:31  time: 0.2652  data_time: 0.0049  memory: 5351  grad_norm: 0.5463  loss: 0.6695  loss_cls: 0.4504  loss_bbox: 0.2191
2025/05/12 20:47:04 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:47:09 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:47:10 - mmengine - INFO - bbox_mAP_copypaste: 0.151 0.303 0.126 -1.000 0.088 0.163
2025/05/12 20:47:10 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.1510  coco/bbox_mAP_50: 0.3030  coco/bbox_mAP_75: 0.1260  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0880  coco/bbox_mAP_l: 0.1630  data_time: 0.0016  time: 0.0820
2025/05/12 20:47:24 - mmengine - INFO - Epoch(train) [13][ 50/563]  base_lr: 1.5946e-01 lr: 1.5946e-01  eta: 0:46:13  time: 0.2712  data_time: 0.0058  memory: 5290  grad_norm: 0.5331  loss: 0.6895  loss_cls: 0.4718  loss_bbox: 0.2177
2025/05/12 20:47:37 - mmengine - INFO - Epoch(train) [13][100/563]  base_lr: 1.5945e-01 lr: 1.5945e-01  eta: 0:45:59  time: 0.2644  data_time: 0.0048  memory: 5383  grad_norm: 0.5012  loss: 0.6397  loss_cls: 0.4350  loss_bbox: 0.2047
2025/05/12 20:47:52 - mmengine - INFO - Epoch(train) [13][150/563]  base_lr: 1.5944e-01 lr: 1.5944e-01  eta: 0:45:47  time: 0.2962  data_time: 0.0050  memory: 5475  grad_norm: 0.5184  loss: 0.6160  loss_cls: 0.4104  loss_bbox: 0.2056
2025/05/12 20:48:05 - mmengine - INFO - Epoch(train) [13][200/563]  base_lr: 1.5943e-01 lr: 1.5943e-01  eta: 0:45:32  time: 0.2676  data_time: 0.0049  memory: 5295  grad_norm: 0.5883  loss: 0.6783  loss_cls: 0.4482  loss_bbox: 0.2301
2025/05/12 20:48:17 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:48:18 - mmengine - INFO - Epoch(train) [13][250/563]  base_lr: 1.5942e-01 lr: 1.5942e-01  eta: 0:45:18  time: 0.2668  data_time: 0.0050  memory: 5316  grad_norm: 0.5517  loss: 0.6365  loss_cls: 0.4374  loss_bbox: 0.1992
2025/05/12 20:48:32 - mmengine - INFO - Epoch(train) [13][300/563]  base_lr: 1.5941e-01 lr: 1.5941e-01  eta: 0:45:04  time: 0.2663  data_time: 0.0048  memory: 5445  grad_norm: 0.5815  loss: 0.6532  loss_cls: 0.4198  loss_bbox: 0.2334
2025/05/12 20:48:46 - mmengine - INFO - Epoch(train) [13][350/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:44:50  time: 0.2778  data_time: 0.0049  memory: 5351  grad_norm: 0.5119  loss: 0.6455  loss_cls: 0.4389  loss_bbox: 0.2066
2025/05/12 20:49:00 - mmengine - INFO - Epoch(train) [13][400/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:44:37  time: 0.2804  data_time: 0.0050  memory: 5406  grad_norm: 0.5075  loss: 0.6357  loss_cls: 0.4277  loss_bbox: 0.2080
2025/05/12 20:49:13 - mmengine - INFO - Epoch(train) [13][450/563]  base_lr: 1.5939e-01 lr: 1.5939e-01  eta: 0:44:22  time: 0.2659  data_time: 0.0050  memory: 5269  grad_norm: 0.5467  loss: 0.6387  loss_cls: 0.4258  loss_bbox: 0.2129
2025/05/12 20:49:26 - mmengine - INFO - Epoch(train) [13][500/563]  base_lr: 1.5938e-01 lr: 1.5938e-01  eta: 0:44:08  time: 0.2696  data_time: 0.0048  memory: 5413  grad_norm: 0.5403  loss: 0.6340  loss_cls: 0.4310  loss_bbox: 0.2030
2025/05/12 20:49:40 - mmengine - INFO - Epoch(train) [13][550/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 0:43:54  time: 0.2691  data_time: 0.0049  memory: 5454  grad_norm: 0.5125  loss: 0.6399  loss_cls: 0.4330  loss_bbox: 0.2069
2025/05/12 20:49:43 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:49:48 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:49:49 - mmengine - INFO - bbox_mAP_copypaste: 0.170 0.305 0.175 -1.000 0.086 0.188
2025/05/12 20:49:49 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.1700  coco/bbox_mAP_50: 0.3050  coco/bbox_mAP_75: 0.1750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0860  coco/bbox_mAP_l: 0.1880  data_time: 0.0016  time: 0.0926
2025/05/12 20:49:49 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/12 20:49:50 - mmengine - INFO - The best checkpoint with 0.1700 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2025/05/12 20:50:05 - mmengine - INFO - Epoch(train) [14][ 50/563]  base_lr: 1.5936e-01 lr: 1.5936e-01  eta: 0:43:37  time: 0.2891  data_time: 0.0059  memory: 5341  grad_norm: 0.5132  loss: 0.6091  loss_cls: 0.4104  loss_bbox: 0.1988
2025/05/12 20:50:18 - mmengine - INFO - Epoch(train) [14][100/563]  base_lr: 1.5935e-01 lr: 1.5935e-01  eta: 0:43:23  time: 0.2677  data_time: 0.0049  memory: 5413  grad_norm: 0.5786  loss: 0.6393  loss_cls: 0.4363  loss_bbox: 0.2029
2025/05/12 20:50:32 - mmengine - INFO - Epoch(train) [14][150/563]  base_lr: 1.5934e-01 lr: 1.5934e-01  eta: 0:43:09  time: 0.2722  data_time: 0.0048  memory: 5325  grad_norm: 0.5642  loss: 0.6514  loss_cls: 0.4340  loss_bbox: 0.2174
2025/05/12 20:50:45 - mmengine - INFO - Epoch(train) [14][200/563]  base_lr: 1.5933e-01 lr: 1.5933e-01  eta: 0:42:55  time: 0.2702  data_time: 0.0049  memory: 5275  grad_norm: 0.5055  loss: 0.5836  loss_cls: 0.3860  loss_bbox: 0.1976
2025/05/12 20:51:00 - mmengine - INFO - Epoch(train) [14][250/563]  base_lr: 1.5932e-01 lr: 1.5932e-01  eta: 0:42:43  time: 0.3023  data_time: 0.0048  memory: 5346  grad_norm: 0.5533  loss: 0.6216  loss_cls: 0.4195  loss_bbox: 0.2021
2025/05/12 20:51:14 - mmengine - INFO - Epoch(train) [14][300/563]  base_lr: 1.5931e-01 lr: 1.5931e-01  eta: 0:42:29  time: 0.2684  data_time: 0.0049  memory: 5316  grad_norm: 0.5614  loss: 0.6490  loss_cls: 0.4355  loss_bbox: 0.2135
2025/05/12 20:51:27 - mmengine - INFO - Epoch(train) [14][350/563]  base_lr: 1.5930e-01 lr: 1.5930e-01  eta: 0:42:15  time: 0.2717  data_time: 0.0050  memory: 5285  grad_norm: 0.4823  loss: 0.5932  loss_cls: 0.4053  loss_bbox: 0.1879
2025/05/12 20:51:41 - mmengine - INFO - Epoch(train) [14][400/563]  base_lr: 1.5929e-01 lr: 1.5929e-01  eta: 0:42:01  time: 0.2691  data_time: 0.0049  memory: 5258  grad_norm: 0.5396  loss: 0.6053  loss_cls: 0.4083  loss_bbox: 0.1970
2025/05/12 20:51:55 - mmengine - INFO - Epoch(train) [14][450/563]  base_lr: 1.5928e-01 lr: 1.5928e-01  eta: 0:41:48  time: 0.2901  data_time: 0.0048  memory: 5444  grad_norm: 0.5166  loss: 0.6370  loss_cls: 0.4362  loss_bbox: 0.2007
2025/05/12 20:52:09 - mmengine - INFO - Epoch(train) [14][500/563]  base_lr: 1.5927e-01 lr: 1.5927e-01  eta: 0:41:35  time: 0.2847  data_time: 0.0048  memory: 5382  grad_norm: 0.5108  loss: 0.6059  loss_cls: 0.4182  loss_bbox: 0.1877
2025/05/12 20:52:23 - mmengine - INFO - Epoch(train) [14][550/563]  base_lr: 1.5926e-01 lr: 1.5926e-01  eta: 0:41:21  time: 0.2733  data_time: 0.0049  memory: 5306  grad_norm: 0.5605  loss: 0.6409  loss_cls: 0.4274  loss_bbox: 0.2135
2025/05/12 20:52:27 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:52:31 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:52:32 - mmengine - INFO - bbox_mAP_copypaste: 0.191 0.342 0.194 -1.000 0.127 0.202
2025/05/12 20:52:32 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.1910  coco/bbox_mAP_50: 0.3420  coco/bbox_mAP_75: 0.1940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1270  coco/bbox_mAP_l: 0.2020  data_time: 0.0016  time: 0.0820
2025/05/12 20:52:32 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_13.pth is removed
2025/05/12 20:52:33 - mmengine - INFO - The best checkpoint with 0.1910 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/12 20:52:48 - mmengine - INFO - Epoch(train) [15][ 50/563]  base_lr: 1.5924e-01 lr: 1.5924e-01  eta: 0:41:05  time: 0.2932  data_time: 0.0057  memory: 5378  grad_norm: 0.5569  loss: 0.6203  loss_cls: 0.4011  loss_bbox: 0.2192
2025/05/12 20:53:01 - mmengine - INFO - Epoch(train) [15][100/563]  base_lr: 1.5923e-01 lr: 1.5923e-01  eta: 0:40:51  time: 0.2777  data_time: 0.0048  memory: 5330  grad_norm: 0.6294  loss: 0.6694  loss_cls: 0.4415  loss_bbox: 0.2279
2025/05/12 20:53:06 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:53:15 - mmengine - INFO - Epoch(train) [15][150/563]  base_lr: 1.5922e-01 lr: 1.5922e-01  eta: 0:40:37  time: 0.2685  data_time: 0.0050  memory: 5408  grad_norm: 0.5520  loss: 0.6375  loss_cls: 0.4196  loss_bbox: 0.2179
2025/05/12 20:53:28 - mmengine - INFO - Epoch(train) [15][200/563]  base_lr: 1.5921e-01 lr: 1.5921e-01  eta: 0:40:23  time: 0.2680  data_time: 0.0050  memory: 5442  grad_norm: 0.4941  loss: 0.5641  loss_cls: 0.3742  loss_bbox: 0.1899
2025/05/12 20:53:42 - mmengine - INFO - Epoch(train) [15][250/563]  base_lr: 1.5920e-01 lr: 1.5920e-01  eta: 0:40:09  time: 0.2757  data_time: 0.0050  memory: 5289  grad_norm: 0.5453  loss: 0.6385  loss_cls: 0.4383  loss_bbox: 0.2002
2025/05/12 20:53:55 - mmengine - INFO - Epoch(train) [15][300/563]  base_lr: 1.5919e-01 lr: 1.5919e-01  eta: 0:39:55  time: 0.2687  data_time: 0.0049  memory: 5295  grad_norm: 0.5231  loss: 0.6107  loss_cls: 0.4074  loss_bbox: 0.2033
2025/05/12 20:54:10 - mmengine - INFO - Epoch(train) [15][350/563]  base_lr: 1.5918e-01 lr: 1.5918e-01  eta: 0:39:42  time: 0.2923  data_time: 0.0049  memory: 5444  grad_norm: 0.5492  loss: 0.6172  loss_cls: 0.4176  loss_bbox: 0.1996
2025/05/12 20:54:24 - mmengine - INFO - Epoch(train) [15][400/563]  base_lr: 1.5917e-01 lr: 1.5917e-01  eta: 0:39:28  time: 0.2692  data_time: 0.0049  memory: 5378  grad_norm: 0.4836  loss: 0.6033  loss_cls: 0.4120  loss_bbox: 0.1912
2025/05/12 20:54:37 - mmengine - INFO - Epoch(train) [15][450/563]  base_lr: 1.5916e-01 lr: 1.5916e-01  eta: 0:39:14  time: 0.2667  data_time: 0.0050  memory: 5150  grad_norm: 0.6146  loss: 0.6494  loss_cls: 0.4451  loss_bbox: 0.2043
2025/05/12 20:54:50 - mmengine - INFO - Epoch(train) [15][500/563]  base_lr: 1.5915e-01 lr: 1.5915e-01  eta: 0:39:00  time: 0.2670  data_time: 0.0049  memory: 5233  grad_norm: 0.5280  loss: 0.6447  loss_cls: 0.4310  loss_bbox: 0.2137
2025/05/12 20:55:05 - mmengine - INFO - Epoch(train) [15][550/563]  base_lr: 1.5914e-01 lr: 1.5914e-01  eta: 0:38:47  time: 0.2887  data_time: 0.0049  memory: 5387  grad_norm: 0.5066  loss: 0.5975  loss_cls: 0.3962  loss_bbox: 0.2013
2025/05/12 20:55:09 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:55:13 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:55:14 - mmengine - INFO - bbox_mAP_copypaste: 0.135 0.235 0.143 -1.000 0.078 0.147
2025/05/12 20:55:14 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.1350  coco/bbox_mAP_50: 0.2350  coco/bbox_mAP_75: 0.1430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0780  coco/bbox_mAP_l: 0.1470  data_time: 0.0016  time: 0.0838
2025/05/12 20:55:28 - mmengine - INFO - Epoch(train) [16][ 50/563]  base_lr: 1.5913e-01 lr: 1.5913e-01  eta: 0:38:30  time: 0.2694  data_time: 0.0058  memory: 5423  grad_norm: 0.6128  loss: 0.6704  loss_cls: 0.4345  loss_bbox: 0.2360
2025/05/12 20:55:41 - mmengine - INFO - Epoch(train) [16][100/563]  base_lr: 1.5911e-01 lr: 1.5911e-01  eta: 0:38:15  time: 0.2652  data_time: 0.0049  memory: 5269  grad_norm: 0.5333  loss: 0.6281  loss_cls: 0.4183  loss_bbox: 0.2098
2025/05/12 20:55:55 - mmengine - INFO - Epoch(train) [16][150/563]  base_lr: 1.5910e-01 lr: 1.5910e-01  eta: 0:38:01  time: 0.2693  data_time: 0.0050  memory: 5352  grad_norm: 0.5657  loss: 0.6303  loss_cls: 0.4034  loss_bbox: 0.2269
2025/05/12 20:56:09 - mmengine - INFO - Epoch(train) [16][200/563]  base_lr: 1.5909e-01 lr: 1.5909e-01  eta: 0:37:48  time: 0.2855  data_time: 0.0050  memory: 5269  grad_norm: 0.5466  loss: 0.6320  loss_cls: 0.4126  loss_bbox: 0.2193
2025/05/12 20:56:22 - mmengine - INFO - Epoch(train) [16][250/563]  base_lr: 1.5908e-01 lr: 1.5908e-01  eta: 0:37:34  time: 0.2697  data_time: 0.0049  memory: 5294  grad_norm: 0.5757  loss: 0.6320  loss_cls: 0.4125  loss_bbox: 0.2195
2025/05/12 20:56:36 - mmengine - INFO - Epoch(train) [16][300/563]  base_lr: 1.5907e-01 lr: 1.5907e-01  eta: 0:37:20  time: 0.2679  data_time: 0.0049  memory: 5393  grad_norm: 0.5160  loss: 0.6023  loss_cls: 0.4020  loss_bbox: 0.2003
2025/05/12 20:56:49 - mmengine - INFO - Epoch(train) [16][350/563]  base_lr: 1.5906e-01 lr: 1.5906e-01  eta: 0:37:06  time: 0.2753  data_time: 0.0051  memory: 5377  grad_norm: 0.5181  loss: 0.5979  loss_cls: 0.4053  loss_bbox: 0.1926
2025/05/12 20:57:03 - mmengine - INFO - Epoch(train) [16][400/563]  base_lr: 1.5905e-01 lr: 1.5905e-01  eta: 0:36:52  time: 0.2680  data_time: 0.0049  memory: 5393  grad_norm: 0.5381  loss: 0.6171  loss_cls: 0.4225  loss_bbox: 0.1946
2025/05/12 20:57:18 - mmengine - INFO - Epoch(train) [16][450/563]  base_lr: 1.5904e-01 lr: 1.5904e-01  eta: 0:36:40  time: 0.2992  data_time: 0.0050  memory: 5399  grad_norm: 0.5506  loss: 0.6173  loss_cls: 0.4141  loss_bbox: 0.2031
2025/05/12 20:57:31 - mmengine - INFO - Epoch(train) [16][500/563]  base_lr: 1.5902e-01 lr: 1.5902e-01  eta: 0:36:26  time: 0.2691  data_time: 0.0048  memory: 5337  grad_norm: 0.5366  loss: 0.6102  loss_cls: 0.4212  loss_bbox: 0.1891
2025/05/12 20:57:45 - mmengine - INFO - Epoch(train) [16][550/563]  base_lr: 1.5901e-01 lr: 1.5901e-01  eta: 0:36:11  time: 0.2671  data_time: 0.0049  memory: 5393  grad_norm: 0.5226  loss: 0.5958  loss_cls: 0.3998  loss_bbox: 0.1960
2025/05/12 20:57:46 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:57:48 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 20:57:52 - mmengine - INFO - Evaluating bbox...
2025/05/12 20:57:53 - mmengine - INFO - bbox_mAP_copypaste: 0.165 0.299 0.169 -1.000 0.099 0.180
2025/05/12 20:57:54 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.1650  coco/bbox_mAP_50: 0.2990  coco/bbox_mAP_75: 0.1690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0990  coco/bbox_mAP_l: 0.1800  data_time: 0.0016  time: 0.0802
2025/05/12 20:58:07 - mmengine - INFO - Epoch(train) [17][ 50/563]  base_lr: 1.5900e-01 lr: 1.5900e-01  eta: 0:35:54  time: 0.2659  data_time: 0.0058  memory: 5320  grad_norm: 0.5442  loss: 0.6021  loss_cls: 0.4009  loss_bbox: 0.2011
2025/05/12 20:58:21 - mmengine - INFO - Epoch(train) [17][100/563]  base_lr: 1.5899e-01 lr: 1.5899e-01  eta: 0:35:41  time: 0.2909  data_time: 0.0050  memory: 5233  grad_norm: 0.6017  loss: 0.6226  loss_cls: 0.4039  loss_bbox: 0.2188
2025/05/12 20:58:35 - mmengine - INFO - Epoch(train) [17][150/563]  base_lr: 1.5897e-01 lr: 1.5897e-01  eta: 0:35:26  time: 0.2679  data_time: 0.0049  memory: 5445  grad_norm: 0.5387  loss: 0.6110  loss_cls: 0.4063  loss_bbox: 0.2046
2025/05/12 20:58:48 - mmengine - INFO - Epoch(train) [17][200/563]  base_lr: 1.5896e-01 lr: 1.5896e-01  eta: 0:35:12  time: 0.2637  data_time: 0.0048  memory: 5270  grad_norm: 0.5296  loss: 0.5924  loss_cls: 0.3970  loss_bbox: 0.1955
2025/05/12 20:59:01 - mmengine - INFO - Epoch(train) [17][250/563]  base_lr: 1.5895e-01 lr: 1.5895e-01  eta: 0:34:58  time: 0.2694  data_time: 0.0049  memory: 5413  grad_norm: 0.5583  loss: 0.6144  loss_cls: 0.4013  loss_bbox: 0.2132
2025/05/12 20:59:15 - mmengine - INFO - Epoch(train) [17][300/563]  base_lr: 1.5894e-01 lr: 1.5894e-01  eta: 0:34:44  time: 0.2709  data_time: 0.0049  memory: 5361  grad_norm: 0.5092  loss: 0.5807  loss_cls: 0.3861  loss_bbox: 0.1946
2025/05/12 20:59:29 - mmengine - INFO - Epoch(train) [17][350/563]  base_lr: 1.5893e-01 lr: 1.5893e-01  eta: 0:34:31  time: 0.2752  data_time: 0.0049  memory: 5373  grad_norm: 0.5804  loss: 0.6078  loss_cls: 0.4072  loss_bbox: 0.2006
2025/05/12 20:59:42 - mmengine - INFO - Epoch(train) [17][400/563]  base_lr: 1.5891e-01 lr: 1.5891e-01  eta: 0:34:17  time: 0.2691  data_time: 0.0049  memory: 5424  grad_norm: 0.5417  loss: 0.6008  loss_cls: 0.4159  loss_bbox: 0.1849
2025/05/12 20:59:56 - mmengine - INFO - Epoch(train) [17][450/563]  base_lr: 1.5890e-01 lr: 1.5890e-01  eta: 0:34:03  time: 0.2668  data_time: 0.0049  memory: 5429  grad_norm: 0.5403  loss: 0.6249  loss_cls: 0.3931  loss_bbox: 0.2318
2025/05/12 21:00:09 - mmengine - INFO - Epoch(train) [17][500/563]  base_lr: 1.5889e-01 lr: 1.5889e-01  eta: 0:33:48  time: 0.2645  data_time: 0.0050  memory: 5305  grad_norm: 0.5222  loss: 0.6038  loss_cls: 0.3981  loss_bbox: 0.2057
2025/05/12 21:00:23 - mmengine - INFO - Epoch(train) [17][550/563]  base_lr: 1.5888e-01 lr: 1.5888e-01  eta: 0:33:35  time: 0.2915  data_time: 0.0048  memory: 5450  grad_norm: 0.5760  loss: 0.5934  loss_cls: 0.3976  loss_bbox: 0.1958
2025/05/12 21:00:27 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:00:31 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:00:32 - mmengine - INFO - bbox_mAP_copypaste: 0.133 0.236 0.140 -1.000 0.086 0.145
2025/05/12 21:00:32 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.1330  coco/bbox_mAP_50: 0.2360  coco/bbox_mAP_75: 0.1400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0860  coco/bbox_mAP_l: 0.1450  data_time: 0.0016  time: 0.0801
2025/05/12 21:00:45 - mmengine - INFO - Epoch(train) [18][ 50/563]  base_lr: 1.5886e-01 lr: 1.5886e-01  eta: 0:33:18  time: 0.2660  data_time: 0.0056  memory: 5406  grad_norm: 0.5473  loss: 0.5947  loss_cls: 0.3857  loss_bbox: 0.2090
2025/05/12 21:00:59 - mmengine - INFO - Epoch(train) [18][100/563]  base_lr: 1.5885e-01 lr: 1.5885e-01  eta: 0:33:03  time: 0.2656  data_time: 0.0049  memory: 5275  grad_norm: 0.5449  loss: 0.6131  loss_cls: 0.3984  loss_bbox: 0.2146
2025/05/12 21:01:12 - mmengine - INFO - Epoch(train) [18][150/563]  base_lr: 1.5883e-01 lr: 1.5883e-01  eta: 0:32:49  time: 0.2674  data_time: 0.0049  memory: 5346  grad_norm: 0.4962  loss: 0.5447  loss_cls: 0.3565  loss_bbox: 0.1882
2025/05/12 21:01:26 - mmengine - INFO - Epoch(train) [18][200/563]  base_lr: 1.5882e-01 lr: 1.5882e-01  eta: 0:32:36  time: 0.2873  data_time: 0.0050  memory: 5362  grad_norm: 0.5399  loss: 0.6108  loss_cls: 0.4063  loss_bbox: 0.2045
2025/05/12 21:01:40 - mmengine - INFO - Epoch(train) [18][250/563]  base_lr: 1.5881e-01 lr: 1.5881e-01  eta: 0:32:22  time: 0.2633  data_time: 0.0048  memory: 5373  grad_norm: 0.6448  loss: 0.6500  loss_cls: 0.4495  loss_bbox: 0.2005
2025/05/12 21:01:53 - mmengine - INFO - Epoch(train) [18][300/563]  base_lr: 1.5880e-01 lr: 1.5880e-01  eta: 0:32:08  time: 0.2689  data_time: 0.0049  memory: 5408  grad_norm: 0.5974  loss: 0.7056  loss_cls: 0.4697  loss_bbox: 0.2358
2025/05/12 21:02:06 - mmengine - INFO - Epoch(train) [18][350/563]  base_lr: 1.5878e-01 lr: 1.5878e-01  eta: 0:31:54  time: 0.2651  data_time: 0.0049  memory: 5367  grad_norm: 0.5804  loss: 0.6438  loss_cls: 0.4183  loss_bbox: 0.2255
2025/05/12 21:02:20 - mmengine - INFO - Epoch(train) [18][400/563]  base_lr: 1.5877e-01 lr: 1.5877e-01  eta: 0:31:40  time: 0.2706  data_time: 0.0049  memory: 5475  grad_norm: 0.4937  loss: 0.5785  loss_cls: 0.3937  loss_bbox: 0.1848
2025/05/12 21:02:29 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:02:35 - mmengine - INFO - Epoch(train) [18][450/563]  base_lr: 1.5876e-01 lr: 1.5876e-01  eta: 0:31:27  time: 0.3023  data_time: 0.0049  memory: 5244  grad_norm: 0.5779  loss: 0.5979  loss_cls: 0.3976  loss_bbox: 0.2003
2025/05/12 21:02:48 - mmengine - INFO - Epoch(train) [18][500/563]  base_lr: 1.5874e-01 lr: 1.5874e-01  eta: 0:31:13  time: 0.2690  data_time: 0.0049  memory: 5399  grad_norm: 0.5656  loss: 0.6313  loss_cls: 0.4195  loss_bbox: 0.2118
2025/05/12 21:03:02 - mmengine - INFO - Epoch(train) [18][550/563]  base_lr: 1.5873e-01 lr: 1.5873e-01  eta: 0:30:59  time: 0.2646  data_time: 0.0048  memory: 5362  grad_norm: 0.5164  loss: 0.5904  loss_cls: 0.4071  loss_bbox: 0.1834
2025/05/12 21:03:05 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:03:09 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:03:10 - mmengine - INFO - bbox_mAP_copypaste: 0.194 0.347 0.200 -1.000 0.123 0.210
2025/05/12 21:03:10 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.1940  coco/bbox_mAP_50: 0.3470  coco/bbox_mAP_75: 0.2000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1230  coco/bbox_mAP_l: 0.2100  data_time: 0.0016  time: 0.0786
2025/05/12 21:03:10 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/12 21:03:11 - mmengine - INFO - The best checkpoint with 0.1940 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2025/05/12 21:03:25 - mmengine - INFO - Epoch(train) [19][ 50/563]  base_lr: 1.5871e-01 lr: 1.5871e-01  eta: 0:30:42  time: 0.2752  data_time: 0.0059  memory: 5373  grad_norm: 0.5359  loss: 0.5975  loss_cls: 0.3934  loss_bbox: 0.2041
2025/05/12 21:03:39 - mmengine - INFO - Epoch(train) [19][100/563]  base_lr: 1.5870e-01 lr: 1.5870e-01  eta: 0:30:28  time: 0.2832  data_time: 0.0049  memory: 5481  grad_norm: 0.5625  loss: 0.5900  loss_cls: 0.4054  loss_bbox: 0.1846
2025/05/12 21:03:53 - mmengine - INFO - Epoch(train) [19][150/563]  base_lr: 1.5869e-01 lr: 1.5869e-01  eta: 0:30:15  time: 0.2694  data_time: 0.0049  memory: 5351  grad_norm: 0.5057  loss: 0.5837  loss_cls: 0.3984  loss_bbox: 0.1854
2025/05/12 21:04:06 - mmengine - INFO - Epoch(train) [19][200/563]  base_lr: 1.5867e-01 lr: 1.5867e-01  eta: 0:30:01  time: 0.2666  data_time: 0.0050  memory: 5372  grad_norm: 0.5226  loss: 0.5813  loss_cls: 0.3911  loss_bbox: 0.1902
2025/05/12 21:04:19 - mmengine - INFO - Epoch(train) [19][250/563]  base_lr: 1.5866e-01 lr: 1.5866e-01  eta: 0:29:47  time: 0.2653  data_time: 0.0049  memory: 5290  grad_norm: 0.5409  loss: 0.6086  loss_cls: 0.4011  loss_bbox: 0.2075
2025/05/12 21:04:34 - mmengine - INFO - Epoch(train) [19][300/563]  base_lr: 1.5865e-01 lr: 1.5865e-01  eta: 0:29:34  time: 0.3017  data_time: 0.0049  memory: 5406  grad_norm: 0.5637  loss: 0.6110  loss_cls: 0.3997  loss_bbox: 0.2113
2025/05/12 21:04:48 - mmengine - INFO - Epoch(train) [19][350/563]  base_lr: 1.5863e-01 lr: 1.5863e-01  eta: 0:29:20  time: 0.2664  data_time: 0.0049  memory: 5435  grad_norm: 0.5657  loss: 0.6214  loss_cls: 0.4088  loss_bbox: 0.2126
2025/05/12 21:05:01 - mmengine - INFO - Epoch(train) [19][400/563]  base_lr: 1.5862e-01 lr: 1.5862e-01  eta: 0:29:06  time: 0.2722  data_time: 0.0048  memory: 5377  grad_norm: 0.5370  loss: 0.6073  loss_cls: 0.4093  loss_bbox: 0.1980
2025/05/12 21:05:15 - mmengine - INFO - Epoch(train) [19][450/563]  base_lr: 1.5861e-01 lr: 1.5861e-01  eta: 0:28:52  time: 0.2671  data_time: 0.0050  memory: 5316  grad_norm: 0.5883  loss: 0.6310  loss_cls: 0.4075  loss_bbox: 0.2235
2025/05/12 21:05:28 - mmengine - INFO - Epoch(train) [19][500/563]  base_lr: 1.5859e-01 lr: 1.5859e-01  eta: 0:28:38  time: 0.2703  data_time: 0.0051  memory: 5326  grad_norm: 0.5268  loss: 0.5802  loss_cls: 0.3852  loss_bbox: 0.1950
2025/05/12 21:05:43 - mmengine - INFO - Epoch(train) [19][550/563]  base_lr: 1.5858e-01 lr: 1.5858e-01  eta: 0:28:25  time: 0.3012  data_time: 0.0049  memory: 5346  grad_norm: 0.5285  loss: 0.5873  loss_cls: 0.3932  loss_bbox: 0.1940
2025/05/12 21:05:47 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:05:51 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:05:52 - mmengine - INFO - bbox_mAP_copypaste: 0.158 0.277 0.174 -1.000 0.099 0.173
2025/05/12 21:05:52 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.1580  coco/bbox_mAP_50: 0.2770  coco/bbox_mAP_75: 0.1740  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0990  coco/bbox_mAP_l: 0.1730  data_time: 0.0016  time: 0.0823
2025/05/12 21:06:06 - mmengine - INFO - Epoch(train) [20][ 50/563]  base_lr: 1.5856e-01 lr: 1.5856e-01  eta: 0:28:08  time: 0.2705  data_time: 0.0057  memory: 5449  grad_norm: 0.5143  loss: 0.5925  loss_cls: 0.3932  loss_bbox: 0.1993
2025/05/12 21:06:19 - mmengine - INFO - Epoch(train) [20][100/563]  base_lr: 1.5855e-01 lr: 1.5855e-01  eta: 0:27:54  time: 0.2719  data_time: 0.0050  memory: 5441  grad_norm: 0.5343  loss: 0.5957  loss_cls: 0.3916  loss_bbox: 0.2040
2025/05/12 21:06:33 - mmengine - INFO - Epoch(train) [20][150/563]  base_lr: 1.5853e-01 lr: 1.5853e-01  eta: 0:27:40  time: 0.2692  data_time: 0.0049  memory: 5238  grad_norm: 0.5339  loss: 0.5805  loss_cls: 0.3945  loss_bbox: 0.1861
2025/05/12 21:06:48 - mmengine - INFO - Epoch(train) [20][200/563]  base_lr: 1.5852e-01 lr: 1.5852e-01  eta: 0:27:27  time: 0.2972  data_time: 0.0050  memory: 5263  grad_norm: 0.5221  loss: 0.5673  loss_cls: 0.3814  loss_bbox: 0.1859
2025/05/12 21:07:01 - mmengine - INFO - Epoch(train) [20][250/563]  base_lr: 1.5850e-01 lr: 1.5850e-01  eta: 0:27:13  time: 0.2656  data_time: 0.0048  memory: 5362  grad_norm: 0.5402  loss: 0.6054  loss_cls: 0.4053  loss_bbox: 0.2000
2025/05/12 21:07:14 - mmengine - INFO - Epoch(train) [20][300/563]  base_lr: 1.5849e-01 lr: 1.5849e-01  eta: 0:26:59  time: 0.2673  data_time: 0.0049  memory: 5378  grad_norm: 0.5849  loss: 0.6070  loss_cls: 0.3881  loss_bbox: 0.2189
2025/05/12 21:07:15 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:07:28 - mmengine - INFO - Epoch(train) [20][350/563]  base_lr: 1.5847e-01 lr: 1.5847e-01  eta: 0:26:45  time: 0.2722  data_time: 0.0049  memory: 5342  grad_norm: 0.5556  loss: 0.5938  loss_cls: 0.3918  loss_bbox: 0.2020
2025/05/12 21:07:43 - mmengine - INFO - Epoch(train) [20][400/563]  base_lr: 1.5846e-01 lr: 1.5846e-01  eta: 0:26:32  time: 0.2984  data_time: 0.0049  memory: 5310  grad_norm: 0.5604  loss: 0.6171  loss_cls: 0.4124  loss_bbox: 0.2047
2025/05/12 21:07:56 - mmengine - INFO - Epoch(train) [20][450/563]  base_lr: 1.5844e-01 lr: 1.5844e-01  eta: 0:26:18  time: 0.2738  data_time: 0.0049  memory: 5450  grad_norm: 0.4995  loss: 0.5852  loss_cls: 0.3758  loss_bbox: 0.2094
2025/05/12 21:08:10 - mmengine - INFO - Epoch(train) [20][500/563]  base_lr: 1.5843e-01 lr: 1.5843e-01  eta: 0:26:04  time: 0.2698  data_time: 0.0050  memory: 5429  grad_norm: 0.5425  loss: 0.5937  loss_cls: 0.3828  loss_bbox: 0.2109
2025/05/12 21:08:23 - mmengine - INFO - Epoch(train) [20][550/563]  base_lr: 1.5842e-01 lr: 1.5842e-01  eta: 0:25:50  time: 0.2679  data_time: 0.0050  memory: 5269  grad_norm: 0.6033  loss: 0.6394  loss_cls: 0.4190  loss_bbox: 0.2203
2025/05/12 21:08:27 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:08:31 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:08:32 - mmengine - INFO - bbox_mAP_copypaste: 0.193 0.336 0.210 -1.000 0.115 0.209
2025/05/12 21:08:32 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.1930  coco/bbox_mAP_50: 0.3360  coco/bbox_mAP_75: 0.2100  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1150  coco/bbox_mAP_l: 0.2090  data_time: 0.0015  time: 0.0800
2025/05/12 21:08:47 - mmengine - INFO - Epoch(train) [21][ 50/563]  base_lr: 1.5840e-01 lr: 1.5840e-01  eta: 0:25:34  time: 0.2981  data_time: 0.0059  memory: 5378  grad_norm: 0.5135  loss: 0.5652  loss_cls: 0.3793  loss_bbox: 0.1859
2025/05/12 21:09:01 - mmengine - INFO - Epoch(train) [21][100/563]  base_lr: 1.5838e-01 lr: 1.5838e-01  eta: 0:25:20  time: 0.2696  data_time: 0.0049  memory: 5239  grad_norm: 0.5252  loss: 0.5644  loss_cls: 0.3761  loss_bbox: 0.1883
2025/05/12 21:09:14 - mmengine - INFO - Epoch(train) [21][150/563]  base_lr: 1.5837e-01 lr: 1.5837e-01  eta: 0:25:06  time: 0.2691  data_time: 0.0049  memory: 5378  grad_norm: 0.5930  loss: 0.6096  loss_cls: 0.4172  loss_bbox: 0.1924
2025/05/12 21:09:28 - mmengine - INFO - Epoch(train) [21][200/563]  base_lr: 1.5835e-01 lr: 1.5835e-01  eta: 0:24:52  time: 0.2739  data_time: 0.0048  memory: 5423  grad_norm: 0.5375  loss: 0.5994  loss_cls: 0.3991  loss_bbox: 0.2003
2025/05/12 21:09:41 - mmengine - INFO - Epoch(train) [21][250/563]  base_lr: 1.5834e-01 lr: 1.5834e-01  eta: 0:24:38  time: 0.2718  data_time: 0.0048  memory: 5316  grad_norm: 0.5196  loss: 0.5760  loss_cls: 0.3950  loss_bbox: 0.1810
2025/05/12 21:09:56 - mmengine - INFO - Epoch(train) [21][300/563]  base_lr: 1.5832e-01 lr: 1.5832e-01  eta: 0:24:25  time: 0.2947  data_time: 0.0049  memory: 5209  grad_norm: 0.4950  loss: 0.5489  loss_cls: 0.3756  loss_bbox: 0.1733
2025/05/12 21:10:09 - mmengine - INFO - Epoch(train) [21][350/563]  base_lr: 1.5831e-01 lr: 1.5831e-01  eta: 0:24:11  time: 0.2684  data_time: 0.0049  memory: 5383  grad_norm: 0.5046  loss: 0.5745  loss_cls: 0.3905  loss_bbox: 0.1840
2025/05/12 21:10:23 - mmengine - INFO - Epoch(train) [21][400/563]  base_lr: 1.5829e-01 lr: 1.5829e-01  eta: 0:23:57  time: 0.2715  data_time: 0.0048  memory: 5357  grad_norm: 0.5408  loss: 0.5810  loss_cls: 0.3858  loss_bbox: 0.1953
2025/05/12 21:10:37 - mmengine - INFO - Epoch(train) [21][450/563]  base_lr: 1.5828e-01 lr: 1.5828e-01  eta: 0:23:43  time: 0.2753  data_time: 0.0048  memory: 5387  grad_norm: 0.5759  loss: 0.6028  loss_cls: 0.4051  loss_bbox: 0.1978
2025/05/12 21:10:52 - mmengine - INFO - Epoch(train) [21][500/563]  base_lr: 1.5826e-01 lr: 1.5826e-01  eta: 0:23:30  time: 0.2979  data_time: 0.0050  memory: 5393  grad_norm: 0.5432  loss: 0.5964  loss_cls: 0.3968  loss_bbox: 0.1996
2025/05/12 21:11:05 - mmengine - INFO - Epoch(train) [21][550/563]  base_lr: 1.5824e-01 lr: 1.5824e-01  eta: 0:23:16  time: 0.2709  data_time: 0.0049  memory: 5383  grad_norm: 0.4999  loss: 0.5536  loss_cls: 0.3814  loss_bbox: 0.1722
2025/05/12 21:11:09 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:11:13 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:11:14 - mmengine - INFO - bbox_mAP_copypaste: 0.149 0.260 0.156 -1.000 0.100 0.161
2025/05/12 21:11:14 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.1490  coco/bbox_mAP_50: 0.2600  coco/bbox_mAP_75: 0.1560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1000  coco/bbox_mAP_l: 0.1610  data_time: 0.0018  time: 0.0797
2025/05/12 21:11:28 - mmengine - INFO - Epoch(train) [22][ 50/563]  base_lr: 1.5822e-01 lr: 1.5822e-01  eta: 0:22:59  time: 0.2724  data_time: 0.0057  memory: 5405  grad_norm: 0.5278  loss: 0.5582  loss_cls: 0.3770  loss_bbox: 0.1813
2025/05/12 21:11:41 - mmengine - INFO - Epoch(train) [22][100/563]  base_lr: 1.5821e-01 lr: 1.5821e-01  eta: 0:22:45  time: 0.2682  data_time: 0.0049  memory: 5399  grad_norm: 0.5200  loss: 0.5720  loss_cls: 0.3810  loss_bbox: 0.1910
2025/05/12 21:11:56 - mmengine - INFO - Epoch(train) [22][150/563]  base_lr: 1.5819e-01 lr: 1.5819e-01  eta: 0:22:32  time: 0.3032  data_time: 0.0049  memory: 5317  grad_norm: 0.5182  loss: 0.5629  loss_cls: 0.3887  loss_bbox: 0.1742
2025/05/12 21:12:04 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:12:10 - mmengine - INFO - Epoch(train) [22][200/563]  base_lr: 1.5818e-01 lr: 1.5818e-01  eta: 0:22:18  time: 0.2716  data_time: 0.0049  memory: 5383  grad_norm: 0.5437  loss: 0.5770  loss_cls: 0.3796  loss_bbox: 0.1974
2025/05/12 21:12:24 - mmengine - INFO - Epoch(train) [22][250/563]  base_lr: 1.5816e-01 lr: 1.5816e-01  eta: 0:22:04  time: 0.2731  data_time: 0.0050  memory: 5352  grad_norm: 0.5284  loss: 0.5788  loss_cls: 0.3905  loss_bbox: 0.1883
2025/05/12 21:12:37 - mmengine - INFO - Epoch(train) [22][300/563]  base_lr: 1.5815e-01 lr: 1.5815e-01  eta: 0:21:51  time: 0.2708  data_time: 0.0049  memory: 5372  grad_norm: 0.5047  loss: 0.5586  loss_cls: 0.3703  loss_bbox: 0.1883
2025/05/12 21:12:51 - mmengine - INFO - Epoch(train) [22][350/563]  base_lr: 1.5813e-01 lr: 1.5813e-01  eta: 0:21:37  time: 0.2712  data_time: 0.0049  memory: 5398  grad_norm: 0.5769  loss: 0.5779  loss_cls: 0.3780  loss_bbox: 0.1999
2025/05/12 21:13:05 - mmengine - INFO - Epoch(train) [22][400/563]  base_lr: 1.5811e-01 lr: 1.5811e-01  eta: 0:21:23  time: 0.2949  data_time: 0.0049  memory: 5408  grad_norm: 0.5598  loss: 0.5747  loss_cls: 0.3779  loss_bbox: 0.1968
2025/05/12 21:13:19 - mmengine - INFO - Epoch(train) [22][450/563]  base_lr: 1.5810e-01 lr: 1.5810e-01  eta: 0:21:09  time: 0.2680  data_time: 0.0049  memory: 5388  grad_norm: 0.5326  loss: 0.6000  loss_cls: 0.3949  loss_bbox: 0.2051
2025/05/12 21:13:32 - mmengine - INFO - Epoch(train) [22][500/563]  base_lr: 1.5808e-01 lr: 1.5808e-01  eta: 0:20:56  time: 0.2674  data_time: 0.0048  memory: 5430  grad_norm: 0.5303  loss: 0.5847  loss_cls: 0.3711  loss_bbox: 0.2136
2025/05/12 21:13:46 - mmengine - INFO - Epoch(train) [22][550/563]  base_lr: 1.5807e-01 lr: 1.5807e-01  eta: 0:20:42  time: 0.2668  data_time: 0.0050  memory: 5244  grad_norm: 0.4824  loss: 0.5715  loss_cls: 0.3893  loss_bbox: 0.1822
2025/05/12 21:13:49 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:13:53 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:13:54 - mmengine - INFO - bbox_mAP_copypaste: 0.174 0.304 0.186 -1.000 0.111 0.188
2025/05/12 21:13:54 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.1740  coco/bbox_mAP_50: 0.3040  coco/bbox_mAP_75: 0.1860  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1110  coco/bbox_mAP_l: 0.1880  data_time: 0.0015  time: 0.0791
2025/05/12 21:14:09 - mmengine - INFO - Epoch(train) [23][ 50/563]  base_lr: 1.5804e-01 lr: 1.5804e-01  eta: 0:20:25  time: 0.2900  data_time: 0.0057  memory: 5465  grad_norm: 0.5911  loss: 0.6064  loss_cls: 0.4124  loss_bbox: 0.1940
2025/05/12 21:14:22 - mmengine - INFO - Epoch(train) [23][100/563]  base_lr: 1.5803e-01 lr: 1.5803e-01  eta: 0:20:11  time: 0.2685  data_time: 0.0048  memory: 5450  grad_norm: 0.5914  loss: 0.5921  loss_cls: 0.3991  loss_bbox: 0.1929
2025/05/12 21:14:36 - mmengine - INFO - Epoch(train) [23][150/563]  base_lr: 1.5801e-01 lr: 1.5801e-01  eta: 0:19:57  time: 0.2696  data_time: 0.0049  memory: 5305  grad_norm: 0.5409  loss: 0.5876  loss_cls: 0.3634  loss_bbox: 0.2242
2025/05/12 21:14:49 - mmengine - INFO - Epoch(train) [23][200/563]  base_lr: 1.5799e-01 lr: 1.5799e-01  eta: 0:19:43  time: 0.2646  data_time: 0.0048  memory: 5310  grad_norm: 0.5862  loss: 0.6139  loss_cls: 0.4206  loss_bbox: 0.1933
2025/05/12 21:15:02 - mmengine - INFO - Epoch(train) [23][250/563]  base_lr: 1.5798e-01 lr: 1.5798e-01  eta: 0:19:29  time: 0.2632  data_time: 0.0050  memory: 5388  grad_norm: 0.5386  loss: 0.6130  loss_cls: 0.3982  loss_bbox: 0.2148
2025/05/12 21:15:15 - mmengine - INFO - Epoch(train) [23][300/563]  base_lr: 1.5796e-01 lr: 1.5796e-01  eta: 0:19:15  time: 0.2653  data_time: 0.0049  memory: 5316  grad_norm: 0.5213  loss: 0.5677  loss_cls: 0.3724  loss_bbox: 0.1953
2025/05/12 21:15:29 - mmengine - INFO - Epoch(train) [23][350/563]  base_lr: 1.5794e-01 lr: 1.5794e-01  eta: 0:19:01  time: 0.2662  data_time: 0.0049  memory: 5352  grad_norm: 0.5695  loss: 0.5982  loss_cls: 0.3879  loss_bbox: 0.2104
2025/05/12 21:15:42 - mmengine - INFO - Epoch(train) [23][400/563]  base_lr: 1.5793e-01 lr: 1.5793e-01  eta: 0:18:47  time: 0.2712  data_time: 0.0049  memory: 5413  grad_norm: 0.5021  loss: 0.5735  loss_cls: 0.3942  loss_bbox: 0.1794
2025/05/12 21:15:56 - mmengine - INFO - Epoch(train) [23][450/563]  base_lr: 1.5791e-01 lr: 1.5791e-01  eta: 0:18:34  time: 0.2669  data_time: 0.0048  memory: 5331  grad_norm: 0.4799  loss: 0.5448  loss_cls: 0.3614  loss_bbox: 0.1834
2025/05/12 21:16:09 - mmengine - INFO - Epoch(train) [23][500/563]  base_lr: 1.5789e-01 lr: 1.5789e-01  eta: 0:18:20  time: 0.2624  data_time: 0.0048  memory: 5172  grad_norm: 0.5521  loss: 0.5727  loss_cls: 0.3799  loss_bbox: 0.1929
2025/05/12 21:16:22 - mmengine - INFO - Epoch(train) [23][550/563]  base_lr: 1.5788e-01 lr: 1.5788e-01  eta: 0:18:06  time: 0.2618  data_time: 0.0048  memory: 5290  grad_norm: 0.5693  loss: 0.5720  loss_cls: 0.3847  loss_bbox: 0.1873
2025/05/12 21:16:25 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:16:29 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:16:30 - mmengine - INFO - bbox_mAP_copypaste: 0.181 0.325 0.188 -1.000 0.100 0.198
2025/05/12 21:16:30 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.1810  coco/bbox_mAP_50: 0.3250  coco/bbox_mAP_75: 0.1880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1000  coco/bbox_mAP_l: 0.1980  data_time: 0.0016  time: 0.0810
2025/05/12 21:16:44 - mmengine - INFO - Epoch(train) [24][ 50/563]  base_lr: 1.5786e-01 lr: 1.5786e-01  eta: 0:17:48  time: 0.2666  data_time: 0.0057  memory: 5294  grad_norm: 0.5234  loss: 0.5703  loss_cls: 0.3849  loss_bbox: 0.1854
2025/05/12 21:16:44 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:16:57 - mmengine - INFO - Epoch(train) [24][100/563]  base_lr: 1.5784e-01 lr: 1.5784e-01  eta: 0:17:34  time: 0.2621  data_time: 0.0050  memory: 5239  grad_norm: 0.6037  loss: 0.6112  loss_cls: 0.3975  loss_bbox: 0.2137
2025/05/12 21:17:10 - mmengine - INFO - Epoch(train) [24][150/563]  base_lr: 1.5782e-01 lr: 1.5782e-01  eta: 0:17:20  time: 0.2636  data_time: 0.0050  memory: 5223  grad_norm: 0.6165  loss: 0.6404  loss_cls: 0.4136  loss_bbox: 0.2268
2025/05/12 21:17:23 - mmengine - INFO - Epoch(train) [24][200/563]  base_lr: 1.5780e-01 lr: 1.5780e-01  eta: 0:17:06  time: 0.2640  data_time: 0.0047  memory: 5351  grad_norm: 0.5569  loss: 0.5763  loss_cls: 0.3736  loss_bbox: 0.2027
2025/05/12 21:17:37 - mmengine - INFO - Epoch(train) [24][250/563]  base_lr: 1.5779e-01 lr: 1.5779e-01  eta: 0:16:53  time: 0.2647  data_time: 0.0048  memory: 5352  grad_norm: 0.5747  loss: 0.5880  loss_cls: 0.3725  loss_bbox: 0.2156
2025/05/12 21:17:50 - mmengine - INFO - Epoch(train) [24][300/563]  base_lr: 1.5777e-01 lr: 1.5777e-01  eta: 0:16:39  time: 0.2636  data_time: 0.0047  memory: 5475  grad_norm: 0.5509  loss: 0.5961  loss_cls: 0.3850  loss_bbox: 0.2111
2025/05/12 21:18:03 - mmengine - INFO - Epoch(train) [24][350/563]  base_lr: 1.5775e-01 lr: 1.5775e-01  eta: 0:16:25  time: 0.2610  data_time: 0.0049  memory: 5414  grad_norm: 0.5523  loss: 0.5736  loss_cls: 0.3746  loss_bbox: 0.1991
2025/05/12 21:18:16 - mmengine - INFO - Epoch(train) [24][400/563]  base_lr: 1.5773e-01 lr: 1.5773e-01  eta: 0:16:11  time: 0.2617  data_time: 0.0048  memory: 5275  grad_norm: 0.4967  loss: 0.5658  loss_cls: 0.3760  loss_bbox: 0.1899
2025/05/12 21:18:29 - mmengine - INFO - Epoch(train) [24][450/563]  base_lr: 1.5772e-01 lr: 1.5772e-01  eta: 0:15:57  time: 0.2649  data_time: 0.0049  memory: 5321  grad_norm: 0.5331  loss: 0.6097  loss_cls: 0.4149  loss_bbox: 0.1948
2025/05/12 21:18:43 - mmengine - INFO - Epoch(train) [24][500/563]  base_lr: 1.5770e-01 lr: 1.5770e-01  eta: 0:15:43  time: 0.2682  data_time: 0.0048  memory: 5481  grad_norm: 0.5396  loss: 0.5888  loss_cls: 0.3898  loss_bbox: 0.1991
2025/05/12 21:18:56 - mmengine - INFO - Epoch(train) [24][550/563]  base_lr: 1.5768e-01 lr: 1.5768e-01  eta: 0:15:29  time: 0.2662  data_time: 0.0049  memory: 5460  grad_norm: 0.5509  loss: 0.5942  loss_cls: 0.3941  loss_bbox: 0.2001
2025/05/12 21:18:59 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:19:03 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:19:04 - mmengine - INFO - bbox_mAP_copypaste: 0.200 0.354 0.208 -1.000 0.121 0.218
2025/05/12 21:19:04 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.2000  coco/bbox_mAP_50: 0.3540  coco/bbox_mAP_75: 0.2080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1210  coco/bbox_mAP_l: 0.2180  data_time: 0.0015  time: 0.0776
2025/05/12 21:19:04 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_18.pth is removed
2025/05/12 21:19:05 - mmengine - INFO - The best checkpoint with 0.2000 coco/bbox_mAP at 24 epoch is saved to best_coco_bbox_mAP_epoch_24.pth.
2025/05/12 21:19:20 - mmengine - INFO - Epoch(train) [25][ 50/563]  base_lr: 1.5766e-01 lr: 1.5766e-01  eta: 0:15:12  time: 0.2895  data_time: 0.0058  memory: 5383  grad_norm: 0.5181  loss: 0.5631  loss_cls: 0.3724  loss_bbox: 0.1906
2025/05/12 21:19:33 - mmengine - INFO - Epoch(train) [25][100/563]  base_lr: 1.5764e-01 lr: 1.5764e-01  eta: 0:14:59  time: 0.2664  data_time: 0.0048  memory: 5382  grad_norm: 0.5250  loss: 0.5596  loss_cls: 0.3702  loss_bbox: 0.1894
2025/05/12 21:19:46 - mmengine - INFO - Epoch(train) [25][150/563]  base_lr: 1.5762e-01 lr: 1.5762e-01  eta: 0:14:45  time: 0.2615  data_time: 0.0048  memory: 5413  grad_norm: 0.5406  loss: 0.5832  loss_cls: 0.3781  loss_bbox: 0.2051
2025/05/12 21:19:59 - mmengine - INFO - Epoch(train) [25][200/563]  base_lr: 1.5760e-01 lr: 1.5760e-01  eta: 0:14:31  time: 0.2645  data_time: 0.0048  memory: 5383  grad_norm: 0.5744  loss: 0.5851  loss_cls: 0.3759  loss_bbox: 0.2092
2025/05/12 21:20:13 - mmengine - INFO - Epoch(train) [25][250/563]  base_lr: 1.5759e-01 lr: 1.5759e-01  eta: 0:14:17  time: 0.2619  data_time: 0.0048  memory: 5429  grad_norm: 0.5081  loss: 0.5570  loss_cls: 0.3694  loss_bbox: 0.1876
2025/05/12 21:20:26 - mmengine - INFO - Epoch(train) [25][300/563]  base_lr: 1.5757e-01 lr: 1.5757e-01  eta: 0:14:03  time: 0.2627  data_time: 0.0048  memory: 5347  grad_norm: 0.5319  loss: 0.5687  loss_cls: 0.3835  loss_bbox: 0.1853
2025/05/12 21:20:39 - mmengine - INFO - Epoch(train) [25][350/563]  base_lr: 1.5755e-01 lr: 1.5755e-01  eta: 0:13:49  time: 0.2630  data_time: 0.0049  memory: 5290  grad_norm: 0.5966  loss: 0.5886  loss_cls: 0.3880  loss_bbox: 0.2006
2025/05/12 21:20:52 - mmengine - INFO - Epoch(train) [25][400/563]  base_lr: 1.5753e-01 lr: 1.5753e-01  eta: 0:13:36  time: 0.2641  data_time: 0.0048  memory: 5454  grad_norm: 0.5468  loss: 0.5967  loss_cls: 0.4072  loss_bbox: 0.1895
2025/05/12 21:21:05 - mmengine - INFO - Epoch(train) [25][450/563]  base_lr: 1.5751e-01 lr: 1.5751e-01  eta: 0:13:22  time: 0.2609  data_time: 0.0049  memory: 5352  grad_norm: 0.5432  loss: 0.5762  loss_cls: 0.3863  loss_bbox: 0.1899
2025/05/12 21:21:15 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:21:19 - mmengine - INFO - Epoch(train) [25][500/563]  base_lr: 1.5749e-01 lr: 1.5749e-01  eta: 0:13:08  time: 0.2708  data_time: 0.0051  memory: 5306  grad_norm: 0.5926  loss: 0.6027  loss_cls: 0.4057  loss_bbox: 0.1970
2025/05/12 21:21:32 - mmengine - INFO - Epoch(train) [25][550/563]  base_lr: 1.5748e-01 lr: 1.5748e-01  eta: 0:12:54  time: 0.2670  data_time: 0.0047  memory: 5442  grad_norm: 0.5261  loss: 0.5690  loss_cls: 0.3829  loss_bbox: 0.1861
2025/05/12 21:21:35 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:21:39 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:21:41 - mmengine - INFO - bbox_mAP_copypaste: 0.205 0.366 0.217 -1.000 0.119 0.225
2025/05/12 21:21:41 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.2050  coco/bbox_mAP_50: 0.3660  coco/bbox_mAP_75: 0.2170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1190  coco/bbox_mAP_l: 0.2250  data_time: 0.0015  time: 0.0772
2025/05/12 21:21:41 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_24.pth is removed
2025/05/12 21:21:42 - mmengine - INFO - The best checkpoint with 0.2050 coco/bbox_mAP at 25 epoch is saved to best_coco_bbox_mAP_epoch_25.pth.
2025/05/12 21:21:56 - mmengine - INFO - Epoch(train) [26][ 50/563]  base_lr: 1.5745e-01 lr: 1.5745e-01  eta: 0:12:37  time: 0.2853  data_time: 0.0058  memory: 5373  grad_norm: 0.5460  loss: 0.5648  loss_cls: 0.3694  loss_bbox: 0.1954
2025/05/12 21:22:09 - mmengine - INFO - Epoch(train) [26][100/563]  base_lr: 1.5743e-01 lr: 1.5743e-01  eta: 0:12:23  time: 0.2685  data_time: 0.0048  memory: 5399  grad_norm: 0.5262  loss: 0.5614  loss_cls: 0.3696  loss_bbox: 0.1918
2025/05/12 21:22:22 - mmengine - INFO - Epoch(train) [26][150/563]  base_lr: 1.5741e-01 lr: 1.5741e-01  eta: 0:12:09  time: 0.2630  data_time: 0.0048  memory: 5341  grad_norm: 0.5164  loss: 0.5660  loss_cls: 0.3699  loss_bbox: 0.1961
2025/05/12 21:22:36 - mmengine - INFO - Epoch(train) [26][200/563]  base_lr: 1.5740e-01 lr: 1.5740e-01  eta: 0:11:56  time: 0.2679  data_time: 0.0048  memory: 5405  grad_norm: 0.5182  loss: 0.5397  loss_cls: 0.3629  loss_bbox: 0.1767
2025/05/12 21:22:49 - mmengine - INFO - Epoch(train) [26][250/563]  base_lr: 1.5738e-01 lr: 1.5738e-01  eta: 0:11:42  time: 0.2672  data_time: 0.0048  memory: 5465  grad_norm: 0.5493  loss: 0.5730  loss_cls: 0.3727  loss_bbox: 0.2003
2025/05/12 21:23:02 - mmengine - INFO - Epoch(train) [26][300/563]  base_lr: 1.5736e-01 lr: 1.5736e-01  eta: 0:11:28  time: 0.2643  data_time: 0.0049  memory: 5310  grad_norm: 0.6148  loss: 0.6008  loss_cls: 0.3882  loss_bbox: 0.2125
2025/05/12 21:23:16 - mmengine - INFO - Epoch(train) [26][350/563]  base_lr: 1.5734e-01 lr: 1.5734e-01  eta: 0:11:14  time: 0.2641  data_time: 0.0048  memory: 5306  grad_norm: 0.5215  loss: 0.5875  loss_cls: 0.3799  loss_bbox: 0.2077
2025/05/12 21:23:29 - mmengine - INFO - Epoch(train) [26][400/563]  base_lr: 1.5732e-01 lr: 1.5732e-01  eta: 0:11:01  time: 0.2665  data_time: 0.0048  memory: 5232  grad_norm: 0.5515  loss: 0.5487  loss_cls: 0.3653  loss_bbox: 0.1834
2025/05/12 21:23:42 - mmengine - INFO - Epoch(train) [26][450/563]  base_lr: 1.5730e-01 lr: 1.5730e-01  eta: 0:10:47  time: 0.2628  data_time: 0.0049  memory: 5295  grad_norm: 0.5614  loss: 0.5609  loss_cls: 0.3725  loss_bbox: 0.1884
2025/05/12 21:23:55 - mmengine - INFO - Epoch(train) [26][500/563]  base_lr: 1.5728e-01 lr: 1.5728e-01  eta: 0:10:33  time: 0.2641  data_time: 0.0048  memory: 5406  grad_norm: 0.5777  loss: 0.5980  loss_cls: 0.3967  loss_bbox: 0.2012
2025/05/12 21:24:09 - mmengine - INFO - Epoch(train) [26][550/563]  base_lr: 1.5726e-01 lr: 1.5726e-01  eta: 0:10:19  time: 0.2673  data_time: 0.0049  memory: 5337  grad_norm: 0.5300  loss: 0.5450  loss_cls: 0.3661  loss_bbox: 0.1788
2025/05/12 21:24:12 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:24:16 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:24:17 - mmengine - INFO - bbox_mAP_copypaste: 0.210 0.374 0.220 -1.000 0.127 0.230
2025/05/12 21:24:18 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.2100  coco/bbox_mAP_50: 0.3740  coco/bbox_mAP_75: 0.2200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1270  coco/bbox_mAP_l: 0.2300  data_time: 0.0015  time: 0.0813
2025/05/12 21:24:18 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_25.pth is removed
2025/05/12 21:24:18 - mmengine - INFO - The best checkpoint with 0.2100 coco/bbox_mAP at 26 epoch is saved to best_coco_bbox_mAP_epoch_26.pth.
2025/05/12 21:24:33 - mmengine - INFO - Epoch(train) [27][ 50/563]  base_lr: 1.5724e-01 lr: 1.5724e-01  eta: 0:10:02  time: 0.2890  data_time: 0.0058  memory: 5367  grad_norm: 0.6381  loss: 0.5718  loss_cls: 0.3724  loss_bbox: 0.1994
2025/05/12 21:24:46 - mmengine - INFO - Epoch(train) [27][100/563]  base_lr: 1.5722e-01 lr: 1.5722e-01  eta: 0:09:49  time: 0.2672  data_time: 0.0048  memory: 5342  grad_norm: 0.4994  loss: 0.5181  loss_cls: 0.3528  loss_bbox: 0.1653
2025/05/12 21:24:59 - mmengine - INFO - Epoch(train) [27][150/563]  base_lr: 1.5720e-01 lr: 1.5720e-01  eta: 0:09:35  time: 0.2628  data_time: 0.0049  memory: 5274  grad_norm: 0.6019  loss: 0.6116  loss_cls: 0.4054  loss_bbox: 0.2062
2025/05/12 21:25:13 - mmengine - INFO - Epoch(train) [27][200/563]  base_lr: 1.5718e-01 lr: 1.5718e-01  eta: 0:09:21  time: 0.2648  data_time: 0.0049  memory: 5310  grad_norm: 0.5301  loss: 0.5793  loss_cls: 0.3895  loss_bbox: 0.1898
2025/05/12 21:25:26 - mmengine - INFO - Epoch(train) [27][250/563]  base_lr: 1.5716e-01 lr: 1.5716e-01  eta: 0:09:07  time: 0.2658  data_time: 0.0048  memory: 5289  grad_norm: 0.5147  loss: 0.5254  loss_cls: 0.3440  loss_bbox: 0.1814
2025/05/12 21:25:39 - mmengine - INFO - Epoch(train) [27][300/563]  base_lr: 1.5714e-01 lr: 1.5714e-01  eta: 0:08:54  time: 0.2682  data_time: 0.0049  memory: 5409  grad_norm: 0.5123  loss: 0.5461  loss_cls: 0.3619  loss_bbox: 0.1842
2025/05/12 21:25:52 - mmengine - INFO - Epoch(train) [27][350/563]  base_lr: 1.5712e-01 lr: 1.5712e-01  eta: 0:08:40  time: 0.2641  data_time: 0.0049  memory: 5449  grad_norm: 0.5501  loss: 0.5711  loss_cls: 0.3754  loss_bbox: 0.1957
2025/05/12 21:25:56 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:26:06 - mmengine - INFO - Epoch(train) [27][400/563]  base_lr: 1.5710e-01 lr: 1.5710e-01  eta: 0:08:26  time: 0.2656  data_time: 0.0049  memory: 5342  grad_norm: 0.5575  loss: 0.5728  loss_cls: 0.3880  loss_bbox: 0.1847
2025/05/12 21:26:19 - mmengine - INFO - Epoch(train) [27][450/563]  base_lr: 1.5708e-01 lr: 1.5708e-01  eta: 0:08:12  time: 0.2677  data_time: 0.0047  memory: 5445  grad_norm: 0.5363  loss: 0.5447  loss_cls: 0.3504  loss_bbox: 0.1942
2025/05/12 21:26:33 - mmengine - INFO - Epoch(train) [27][500/563]  base_lr: 1.5706e-01 lr: 1.5706e-01  eta: 0:07:59  time: 0.2710  data_time: 0.0050  memory: 5413  grad_norm: 0.5103  loss: 0.5522  loss_cls: 0.3704  loss_bbox: 0.1818
2025/05/12 21:26:46 - mmengine - INFO - Epoch(train) [27][550/563]  base_lr: 1.5704e-01 lr: 1.5704e-01  eta: 0:07:45  time: 0.2622  data_time: 0.0048  memory: 5405  grad_norm: 0.5840  loss: 0.5892  loss_cls: 0.3833  loss_bbox: 0.2059
2025/05/12 21:26:49 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:26:53 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:26:54 - mmengine - INFO - bbox_mAP_copypaste: 0.217 0.382 0.230 -1.000 0.133 0.238
2025/05/12 21:26:55 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.2170  coco/bbox_mAP_50: 0.3820  coco/bbox_mAP_75: 0.2300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1330  coco/bbox_mAP_l: 0.2380  data_time: 0.0017  time: 0.0787
2025/05/12 21:26:55 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_26.pth is removed
2025/05/12 21:26:55 - mmengine - INFO - The best checkpoint with 0.2170 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2025/05/12 21:27:10 - mmengine - INFO - Epoch(train) [28][ 50/563]  base_lr: 1.5701e-01 lr: 1.5701e-01  eta: 0:07:28  time: 0.2880  data_time: 0.0057  memory: 5419  grad_norm: 0.5220  loss: 0.5588  loss_cls: 0.3604  loss_bbox: 0.1985
2025/05/12 21:27:23 - mmengine - INFO - Epoch(train) [28][100/563]  base_lr: 1.5699e-01 lr: 1.5699e-01  eta: 0:07:14  time: 0.2702  data_time: 0.0048  memory: 5414  grad_norm: 0.5182  loss: 0.5473  loss_cls: 0.3631  loss_bbox: 0.1842
2025/05/12 21:27:37 - mmengine - INFO - Epoch(train) [28][150/563]  base_lr: 1.5697e-01 lr: 1.5697e-01  eta: 0:07:00  time: 0.2661  data_time: 0.0048  memory: 5429  grad_norm: 0.5513  loss: 0.5380  loss_cls: 0.3593  loss_bbox: 0.1787
2025/05/12 21:27:50 - mmengine - INFO - Epoch(train) [28][200/563]  base_lr: 1.5695e-01 lr: 1.5695e-01  eta: 0:06:47  time: 0.2665  data_time: 0.0048  memory: 5399  grad_norm: 0.5723  loss: 0.5777  loss_cls: 0.3720  loss_bbox: 0.2057
2025/05/12 21:28:03 - mmengine - INFO - Epoch(train) [28][250/563]  base_lr: 1.5693e-01 lr: 1.5693e-01  eta: 0:06:33  time: 0.2645  data_time: 0.0049  memory: 5356  grad_norm: 0.6155  loss: 0.6057  loss_cls: 0.3966  loss_bbox: 0.2091
2025/05/12 21:28:16 - mmengine - INFO - Epoch(train) [28][300/563]  base_lr: 1.5691e-01 lr: 1.5691e-01  eta: 0:06:19  time: 0.2640  data_time: 0.0048  memory: 5413  grad_norm: 0.5313  loss: 0.5500  loss_cls: 0.3673  loss_bbox: 0.1827
2025/05/12 21:28:30 - mmengine - INFO - Epoch(train) [28][350/563]  base_lr: 1.5689e-01 lr: 1.5689e-01  eta: 0:06:06  time: 0.2664  data_time: 0.0049  memory: 5382  grad_norm: 0.5423  loss: 0.5501  loss_cls: 0.3684  loss_bbox: 0.1816
2025/05/12 21:28:43 - mmengine - INFO - Epoch(train) [28][400/563]  base_lr: 1.5687e-01 lr: 1.5687e-01  eta: 0:05:52  time: 0.2661  data_time: 0.0048  memory: 5321  grad_norm: 0.5271  loss: 0.5599  loss_cls: 0.3734  loss_bbox: 0.1865
2025/05/12 21:28:56 - mmengine - INFO - Epoch(train) [28][450/563]  base_lr: 1.5685e-01 lr: 1.5685e-01  eta: 0:05:38  time: 0.2650  data_time: 0.0049  memory: 5337  grad_norm: 0.5222  loss: 0.5717  loss_cls: 0.3838  loss_bbox: 0.1879
2025/05/12 21:29:10 - mmengine - INFO - Epoch(train) [28][500/563]  base_lr: 1.5683e-01 lr: 1.5683e-01  eta: 0:05:24  time: 0.2658  data_time: 0.0048  memory: 5406  grad_norm: 0.4774  loss: 0.5086  loss_cls: 0.3327  loss_bbox: 0.1759
2025/05/12 21:29:23 - mmengine - INFO - Epoch(train) [28][550/563]  base_lr: 1.5681e-01 lr: 1.5681e-01  eta: 0:05:11  time: 0.2639  data_time: 0.0047  memory: 5347  grad_norm: 0.5208  loss: 0.5295  loss_cls: 0.3608  loss_bbox: 0.1686
2025/05/12 21:29:26 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:29:30 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:29:31 - mmengine - INFO - bbox_mAP_copypaste: 0.216 0.379 0.229 -1.000 0.129 0.237
2025/05/12 21:29:32 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.2160  coco/bbox_mAP_50: 0.3790  coco/bbox_mAP_75: 0.2290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1290  coco/bbox_mAP_l: 0.2370  data_time: 0.0016  time: 0.0781
2025/05/12 21:29:45 - mmengine - INFO - Epoch(train) [29][ 50/563]  base_lr: 1.5678e-01 lr: 1.5678e-01  eta: 0:04:53  time: 0.2632  data_time: 0.0057  memory: 5378  grad_norm: 0.5450  loss: 0.5368  loss_cls: 0.3506  loss_bbox: 0.1862
2025/05/12 21:29:58 - mmengine - INFO - Epoch(train) [29][100/563]  base_lr: 1.5676e-01 lr: 1.5676e-01  eta: 0:04:40  time: 0.2628  data_time: 0.0049  memory: 5290  grad_norm: 0.5622  loss: 0.5746  loss_cls: 0.3862  loss_bbox: 0.1883
2025/05/12 21:30:11 - mmengine - INFO - Epoch(train) [29][150/563]  base_lr: 1.5674e-01 lr: 1.5674e-01  eta: 0:04:26  time: 0.2644  data_time: 0.0048  memory: 5383  grad_norm: 0.5857  loss: 0.5631  loss_cls: 0.3704  loss_bbox: 0.1927
2025/05/12 21:30:24 - mmengine - INFO - Epoch(train) [29][200/563]  base_lr: 1.5672e-01 lr: 1.5672e-01  eta: 0:04:12  time: 0.2627  data_time: 0.0048  memory: 5429  grad_norm: 0.5687  loss: 0.5834  loss_cls: 0.3960  loss_bbox: 0.1873
2025/05/12 21:30:34 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:30:37 - mmengine - INFO - Epoch(train) [29][250/563]  base_lr: 1.5670e-01 lr: 1.5670e-01  eta: 0:03:59  time: 0.2657  data_time: 0.0050  memory: 5424  grad_norm: 0.5185  loss: 0.5392  loss_cls: 0.3556  loss_bbox: 0.1836
2025/05/12 21:30:51 - mmengine - INFO - Epoch(train) [29][300/563]  base_lr: 1.5668e-01 lr: 1.5668e-01  eta: 0:03:45  time: 0.2616  data_time: 0.0049  memory: 5347  grad_norm: 0.5098  loss: 0.5288  loss_cls: 0.3459  loss_bbox: 0.1829
2025/05/12 21:31:05 - mmengine - INFO - Epoch(train) [29][350/563]  base_lr: 1.5665e-01 lr: 1.5665e-01  eta: 0:03:31  time: 0.2921  data_time: 0.0050  memory: 5419  grad_norm: 0.5731  loss: 0.5658  loss_cls: 0.3716  loss_bbox: 0.1941
2025/05/12 21:31:19 - mmengine - INFO - Epoch(train) [29][400/563]  base_lr: 1.5663e-01 lr: 1.5663e-01  eta: 0:03:18  time: 0.2672  data_time: 0.0049  memory: 5383  grad_norm: 0.5570  loss: 0.5725  loss_cls: 0.3802  loss_bbox: 0.1924
2025/05/12 21:31:32 - mmengine - INFO - Epoch(train) [29][450/563]  base_lr: 1.5661e-01 lr: 1.5661e-01  eta: 0:03:04  time: 0.2714  data_time: 0.0050  memory: 5336  grad_norm: 0.4909  loss: 0.5325  loss_cls: 0.3501  loss_bbox: 0.1824
2025/05/12 21:31:45 - mmengine - INFO - Epoch(train) [29][500/563]  base_lr: 1.5659e-01 lr: 1.5659e-01  eta: 0:02:50  time: 0.2635  data_time: 0.0049  memory: 5275  grad_norm: 0.5480  loss: 0.5525  loss_cls: 0.3703  loss_bbox: 0.1822
2025/05/12 21:31:59 - mmengine - INFO - Epoch(train) [29][550/563]  base_lr: 1.5657e-01 lr: 1.5657e-01  eta: 0:02:37  time: 0.2710  data_time: 0.0049  memory: 5470  grad_norm: 0.5613  loss: 0.5684  loss_cls: 0.3669  loss_bbox: 0.2015
2025/05/12 21:32:03 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:32:08 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:32:09 - mmengine - INFO - bbox_mAP_copypaste: 0.219 0.385 0.233 -1.000 0.133 0.241
2025/05/12 21:32:09 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.2190  coco/bbox_mAP_50: 0.3850  coco/bbox_mAP_75: 0.2330  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1330  coco/bbox_mAP_l: 0.2410  data_time: 0.0017  time: 0.0937
2025/05/12 21:32:09 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_27.pth is removed
2025/05/12 21:32:10 - mmengine - INFO - The best checkpoint with 0.2190 coco/bbox_mAP at 29 epoch is saved to best_coco_bbox_mAP_epoch_29.pth.
2025/05/12 21:32:25 - mmengine - INFO - Epoch(train) [30][ 50/563]  base_lr: 1.5654e-01 lr: 1.5654e-01  eta: 0:02:20  time: 0.2992  data_time: 0.0059  memory: 5316  grad_norm: 0.6449  loss: 0.6243  loss_cls: 0.4132  loss_bbox: 0.2110
2025/05/12 21:32:38 - mmengine - INFO - Epoch(train) [30][100/563]  base_lr: 1.5652e-01 lr: 1.5652e-01  eta: 0:02:06  time: 0.2694  data_time: 0.0049  memory: 5435  grad_norm: 0.5285  loss: 0.5454  loss_cls: 0.3579  loss_bbox: 0.1875
2025/05/12 21:32:52 - mmengine - INFO - Epoch(train) [30][150/563]  base_lr: 1.5650e-01 lr: 1.5650e-01  eta: 0:01:52  time: 0.2746  data_time: 0.0049  memory: 5383  grad_norm: 0.5291  loss: 0.5474  loss_cls: 0.3520  loss_bbox: 0.1953
2025/05/12 21:33:07 - mmengine - INFO - Epoch(train) [30][200/563]  base_lr: 1.5648e-01 lr: 1.5648e-01  eta: 0:01:39  time: 0.2990  data_time: 0.0049  memory: 5398  grad_norm: 0.5170  loss: 0.5378  loss_cls: 0.3456  loss_bbox: 0.1922
2025/05/12 21:33:22 - mmengine - INFO - Epoch(train) [30][250/563]  base_lr: 1.5645e-01 lr: 1.5645e-01  eta: 0:01:25  time: 0.2997  data_time: 0.0049  memory: 5290  grad_norm: 0.5269  loss: 0.5482  loss_cls: 0.3579  loss_bbox: 0.1903
2025/05/12 21:33:36 - mmengine - INFO - Epoch(train) [30][300/563]  base_lr: 1.5643e-01 lr: 1.5643e-01  eta: 0:01:11  time: 0.2734  data_time: 0.0049  memory: 5305  grad_norm: 0.5614  loss: 0.5693  loss_cls: 0.3728  loss_bbox: 0.1965
2025/05/12 21:33:49 - mmengine - INFO - Epoch(train) [30][350/563]  base_lr: 1.5641e-01 lr: 1.5641e-01  eta: 0:00:58  time: 0.2752  data_time: 0.0049  memory: 5476  grad_norm: 0.5840  loss: 0.5575  loss_cls: 0.3678  loss_bbox: 0.1897
2025/05/12 21:34:03 - mmengine - INFO - Epoch(train) [30][400/563]  base_lr: 1.5639e-01 lr: 1.5639e-01  eta: 0:00:44  time: 0.2758  data_time: 0.0049  memory: 5337  grad_norm: 0.5462  loss: 0.5588  loss_cls: 0.3801  loss_bbox: 0.1786
2025/05/12 21:34:19 - mmengine - INFO - Epoch(train) [30][450/563]  base_lr: 1.5637e-01 lr: 1.5637e-01  eta: 0:00:30  time: 0.3212  data_time: 0.0049  memory: 5449  grad_norm: 0.5231  loss: 0.5606  loss_cls: 0.3636  loss_bbox: 0.1969
2025/05/12 21:34:33 - mmengine - INFO - Epoch(train) [30][500/563]  base_lr: 1.5634e-01 lr: 1.5634e-01  eta: 0:00:17  time: 0.2746  data_time: 0.0049  memory: 5460  grad_norm: 0.5152  loss: 0.5340  loss_cls: 0.3512  loss_bbox: 0.1828
2025/05/12 21:34:47 - mmengine - INFO - Epoch(train) [30][550/563]  base_lr: 1.5632e-01 lr: 1.5632e-01  eta: 0:00:03  time: 0.2747  data_time: 0.0049  memory: 5399  grad_norm: 0.5805  loss: 0.5757  loss_cls: 0.3709  loss_bbox: 0.2048
2025/05/12 21:34:50 - mmengine - INFO - Exp name: efficientdet_pt_pmd_aff_20250512_201441
2025/05/12 21:34:50 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/12 21:34:55 - mmengine - INFO - Evaluating bbox...
2025/05/12 21:34:57 - mmengine - INFO - bbox_mAP_copypaste: 0.231 0.406 0.245 -1.000 0.140 0.254
2025/05/12 21:34:57 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.2310  coco/bbox_mAP_50: 0.4060  coco/bbox_mAP_75: 0.2450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1400  coco/bbox_mAP_l: 0.2540  data_time: 0.0016  time: 0.0797
2025/05/12 21:34:57 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_29.pth is removed
2025/05/12 21:34:58 - mmengine - INFO - The best checkpoint with 0.2310 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
