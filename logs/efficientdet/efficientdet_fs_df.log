2025/05/17 13:01:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1512290049
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1512290049
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/17 13:01:54 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=128, enable=False)
backend_args = None
batch_augments = [
    dict(size=(
        896,
        896,
    ), type='BatchFixedSizePad'),
]
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=49,
        type='EMAHook',
        update_buffers=True),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'projects.EfficientDet.efficientdet',
    ])
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet',
        interval=0,
        save_best='coco/bbox_mAP',
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet', type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evalute_type = 'CocoMetric'
image_size = 896
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet', by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 300
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        arch='b3',
        conv_cfg=dict(type='Conv2dSamePadding'),
        drop_path_rate=0.3,
        frozen_stages=0,
        init_cfg=dict(
            checkpoint=
            'D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth',
            prefix='backbone',
            type='Pretrained'),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        norm_eval=False,
        out_indices=(
            3,
            4,
            5,
        ),
        type='EfficientNet'),
    bbox_head=dict(
        anchor_generator=dict(
            center_offset=0.5,
            octave_base_scale=4,
            ratios=[
                1.0,
                0.5,
                2.0,
            ],
            scales_per_octave=3,
            strides=[
                8,
                16,
                32,
                64,
                128,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=160,
        in_channels=160,
        loss_bbox=dict(beta=0.1, loss_weight=50, type='HuberLoss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=1.5,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_classes=4,
        num_ins=5,
        stacked_convs=4,
        type='EfficientDetSepBNHead'),
    data_preprocessor=dict(
        batch_augments=[
            dict(size=(
                896,
                896,
            ), type='BatchFixedSizePad'),
        ],
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=896,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            48,
            136,
            384,
        ],
        norm_cfg=dict(
            eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN'),
        num_stages=6,
        out_channels=160,
        start_level=0,
        type='BiFPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(
            iou_threshold=0.3,
            method='gaussian',
            min_score=0.001,
            sigma=0.5,
            type='soft_nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        allowed_border=-1,
        assigner=dict(
            ignore_iof_thr=-1,
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='MaxIoUAssigner'),
        debug=False,
        pos_weight=-1,
        sampler=dict(type='PseudoSampler')),
    type='EfficientDet')
norm_cfg = dict(eps=0.001, momentum=0.01, requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    _scope_='mmdet',
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.16, momentum=0.9, type='SGD', weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=917, start_factor=0.1, type='LinearLR'),
    dict(
        T_max=299,
        begin=1,
        by_epoch=True,
        convert_to_iter_based=True,
        end=300,
        eta_min=0.0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(_scope_='mmdet', type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        896,
        896,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(
    _scope_='mmdet', max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(_scope_='mmdet', type='AspectRatioBatchSampler'),
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.1,
                    2.0,
                ),
                scale=(
                    896,
                    896,
                ),
                type='RandomResize'),
            dict(crop_size=(
                896,
                896,
            ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.1,
            2.0,
        ),
        scale=(
            896,
            896,
        ),
        type='RandomResize'),
    dict(crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(_scope_='mmdet', type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet',
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                896,
                896,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet',
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    _scope_='mmdet',
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '25-05-09/efficientdet'

2025/05/17 13:01:55 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/17 13:01:56 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.0.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.1.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.2.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.3.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.8.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.4.9.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.0.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.1.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.2.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.3.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.4.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.5.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.6.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.expand_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.depthwise_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv1.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.se.conv2.conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- backbone.layers.5.7.linear_conv.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_down_channel.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_down_channel.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p3_down_channel.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_to_p6.0.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p4_level_connection.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.down_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.p5_level_connection.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.0.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.1.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.2.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.3.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.4.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv3_up.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv4_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv5_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv6_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- neck.bifpn.5.conv7_down.bn.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.0.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.1.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.2.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.cls_conv_list.3.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.0.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.1.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.2.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.3.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.weight:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.0.4.bias:weight_decay=0.0
2025/05/17 13:01:56 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.1.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.2.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_bn_list.3.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.0.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.1.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.2.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.0.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.1.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.2.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.3.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.weight:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_bn_list.3.4.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.cls_header.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:57 - mmengine - INFO - paramwise_options -- bbox_head.reg_header.pointwise_conv.bias:weight_decay=0.0
2025/05/17 13:01:58 - mmengine - INFO - load backbone in model from: D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth
2025/05/17 13:01:58 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layers.6.bn.running_var, layers.6.bn.running_mean, layers.6.bn.weight, layers.6.bn.bias, layers.6.conv.weight

Name of parameter - Initialization information

backbone.layers.0.conv.weight - torch.Size([40, 3, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.0.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.depthwise_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.weight - torch.Size([10, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv1.conv.bias - torch.Size([10]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.weight - torch.Size([40, 10, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.se.conv2.conv.bias - torch.Size([40]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.0.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.conv.weight - torch.Size([24, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.weight - torch.Size([6, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.weight - torch.Size([24, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.se.conv2.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.1.1.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.weight - torch.Size([6, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv1.conv.bias - torch.Size([6]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.weight - torch.Size([144, 6, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.0.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.1.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.2.2.linear_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.expand_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.weight - torch.Size([8, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.weight - torch.Size([192, 8, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.se.conv2.conv.bias - torch.Size([192]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.0.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.1.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.conv.weight - torch.Size([288, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.3.2.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.conv.weight - torch.Size([288, 48, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.expand_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.conv.weight - torch.Size([288, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.weight - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.depthwise_conv.bn.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.weight - torch.Size([12, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv1.conv.bias - torch.Size([12]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.weight - torch.Size([288, 12, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.se.conv2.conv.bias - torch.Size([288]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.conv.weight - torch.Size([96, 288, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.0.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.1.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.2.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.3.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.conv.weight - torch.Size([576, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.conv.weight - torch.Size([96, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.4.linear_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.conv.weight - torch.Size([576, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.expand_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.conv.weight - torch.Size([576, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.weight - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.depthwise_conv.bn.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.weight - torch.Size([24, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.weight - torch.Size([576, 24, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.se.conv2.conv.bias - torch.Size([576]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.conv.weight - torch.Size([136, 576, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.5.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.6.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.7.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.8.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.conv.weight - torch.Size([136, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.weight - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.4.9.linear_conv.bn.bias - torch.Size([136]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.conv.weight - torch.Size([816, 136, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.expand_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.conv.weight - torch.Size([816, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.weight - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.depthwise_conv.bn.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.weight - torch.Size([34, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv1.conv.bias - torch.Size([34]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.weight - torch.Size([816, 34, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.se.conv2.conv.bias - torch.Size([816]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.conv.weight - torch.Size([232, 816, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.0.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.1.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.2.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.3.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.4.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.conv.weight - torch.Size([1392, 1, 5, 5]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.conv.weight - torch.Size([232, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.weight - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.5.linear_conv.bn.bias - torch.Size([232]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.conv.weight - torch.Size([1392, 232, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.expand_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.conv.weight - torch.Size([1392, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.weight - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.depthwise_conv.bn.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.weight - torch.Size([58, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv1.conv.bias - torch.Size([58]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.weight - torch.Size([1392, 58, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.se.conv2.conv.bias - torch.Size([1392]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.conv.weight - torch.Size([384, 1392, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.6.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.conv.weight - torch.Size([2304, 384, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.expand_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.conv.weight - torch.Size([2304, 1, 3, 3]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.weight - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.depthwise_conv.bn.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.weight - torch.Size([96, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv1.conv.bias - torch.Size([96]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.weight - torch.Size([2304, 96, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.se.conv2.conv.bias - torch.Size([2304]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.conv.weight - torch.Size([384, 2304, 1, 1]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

backbone.layers.5.7.linear_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from D:/Repositories/test/25-05-09/efficientdet/weights/efficientnet-b3_3rdparty_8xb32-aa-advprop_in1k_20220119-53b41118.pth 

neck.bifpn.0.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.weight - torch.Size([160, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p3_down_channel.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_to_p6.0.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.weight - torch.Size([160, 136, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p4_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.weight - torch.Size([160, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.down_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.p5_level_connection.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.0.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.1.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.2.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.3.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.4.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p3_w1 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p4_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p5_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p6_w2 - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.p7_w2 - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv3_up.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv4_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv5_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv6_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.pointwise_conv.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

neck.bifpn.5.conv7_down.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.0.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.0.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.1.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.1.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.2.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.2.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.cls_conv_list.3.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_conv_list.3.pointwise_conv.bias - torch.Size([160]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.0.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.1.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.2.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.0.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.3.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_bn_list.3.4.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.cls_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  

bbox_head.reg_header.depthwise_conv.weight - torch.Size([160, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.weight - torch.Size([36, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of EfficientDet  

bbox_head.reg_header.pointwise_conv.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in EfficientDetSepBNHead  
2025/05/17 13:01:58 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/17 13:01:58 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/17 13:01:58 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\efficientdet.
2025/05/17 13:02:18 - mmengine - INFO - Epoch(train)  [1][ 50/563]  base_lr: 2.3703e-02 lr: 2.3703e-02  eta: 1:54:34  time: 0.4082  data_time: 0.0896  memory: 5476  grad_norm: 10.8753  loss: 1.9981  loss_cls: 1.1301  loss_bbox: 0.8681
2025/05/17 13:02:31 - mmengine - INFO - Epoch(train)  [1][100/563]  base_lr: 3.1563e-02 lr: 3.1563e-02  eta: 1:31:58  time: 0.2492  data_time: 0.0038  memory: 5325  grad_norm: 2.7144  loss: 1.8375  loss_cls: 1.0312  loss_bbox: 0.8063
2025/05/17 13:02:43 - mmengine - INFO - Epoch(train)  [1][150/563]  base_lr: 3.9424e-02 lr: 3.9424e-02  eta: 1:23:53  time: 0.2447  data_time: 0.0037  memory: 5238  grad_norm: 2.8988  loss: 1.8025  loss_cls: 1.0171  loss_bbox: 0.7854
2025/05/17 13:02:56 - mmengine - INFO - Epoch(train)  [1][200/563]  base_lr: 4.7284e-02 lr: 4.7284e-02  eta: 1:20:21  time: 0.2535  data_time: 0.0039  memory: 5387  grad_norm: 1.4586  loss: 1.5600  loss_cls: 0.8953  loss_bbox: 0.6647
2025/05/17 13:03:08 - mmengine - INFO - Epoch(train)  [1][250/563]  base_lr: 5.5144e-02 lr: 5.5144e-02  eta: 1:17:50  time: 0.2476  data_time: 0.0038  memory: 5433  grad_norm: 1.4007  loss: 1.6712  loss_cls: 0.9342  loss_bbox: 0.7371
2025/05/17 13:03:21 - mmengine - INFO - Epoch(train)  [1][300/563]  base_lr: 6.3004e-02 lr: 6.3004e-02  eta: 1:16:22  time: 0.2540  data_time: 0.0039  memory: 5407  grad_norm: 1.8820  loss: 1.7351  loss_cls: 0.9404  loss_bbox: 0.7947
2025/05/17 13:03:33 - mmengine - INFO - Epoch(train)  [1][350/563]  base_lr: 7.0865e-02 lr: 7.0865e-02  eta: 1:15:06  time: 0.2499  data_time: 0.0040  memory: 5402  grad_norm: 0.8877  loss: 1.5277  loss_cls: 0.8582  loss_bbox: 0.6694
2025/05/17 13:03:46 - mmengine - INFO - Epoch(train)  [1][400/563]  base_lr: 7.8725e-02 lr: 7.8725e-02  eta: 1:14:10  time: 0.2518  data_time: 0.0039  memory: 5299  grad_norm: 0.9965  loss: 1.3754  loss_cls: 0.7913  loss_bbox: 0.5841
2025/05/17 13:03:59 - mmengine - INFO - Epoch(train)  [1][450/563]  base_lr: 8.6585e-02 lr: 8.6585e-02  eta: 1:13:29  time: 0.2550  data_time: 0.0039  memory: 5408  grad_norm: 4.8192  loss: 1.6496  loss_cls: 0.8233  loss_bbox: 0.8263
2025/05/17 13:04:11 - mmengine - INFO - Epoch(train)  [1][500/563]  base_lr: 9.4445e-02 lr: 9.4445e-02  eta: 1:12:45  time: 0.2497  data_time: 0.0038  memory: 5278  grad_norm: 2.5372  loss: 1.3975  loss_cls: 0.7508  loss_bbox: 0.6466
2025/05/17 13:04:24 - mmengine - INFO - Epoch(train)  [1][550/563]  base_lr: 1.0231e-01 lr: 1.0231e-01  eta: 1:12:08  time: 0.2501  data_time: 0.0038  memory: 5311  grad_norm: 1.6075  loss: 1.6546  loss_cls: 0.9084  loss_bbox: 0.7462
2025/05/17 13:04:27 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:04:38 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:04:39 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 0.000 0.000
2025/05/17 13:04:39 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.1642  time: 0.2278
2025/05/17 13:04:40 - mmengine - INFO - The best checkpoint with 0.0000 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/17 13:04:52 - mmengine - INFO - Epoch(train)  [2][ 50/563]  base_lr: 1.1221e-01 lr: 1.1221e-01  eta: 1:11:33  time: 0.2549  data_time: 0.0060  memory: 5465  grad_norm: 1.6319  loss: 1.7997  loss_cls: 1.0027  loss_bbox: 0.7970
2025/05/17 13:05:05 - mmengine - INFO - Epoch(train)  [2][100/563]  base_lr: 1.2007e-01 lr: 1.2007e-01  eta: 1:11:10  time: 0.2555  data_time: 0.0053  memory: 5482  grad_norm: 0.7656  loss: 1.5712  loss_cls: 0.8126  loss_bbox: 0.7586
2025/05/17 13:05:18 - mmengine - INFO - Epoch(train)  [2][150/563]  base_lr: 1.2793e-01 lr: 1.2793e-01  eta: 1:10:41  time: 0.2494  data_time: 0.0053  memory: 5337  grad_norm: 1.4585  loss: 1.4623  loss_cls: 0.7538  loss_bbox: 0.7085
2025/05/17 13:05:30 - mmengine - INFO - Epoch(train)  [2][200/563]  base_lr: 1.3579e-01 lr: 1.3579e-01  eta: 1:10:17  time: 0.2524  data_time: 0.0054  memory: 5356  grad_norm: 2.7951  loss: 1.5293  loss_cls: 0.7822  loss_bbox: 0.7471
2025/05/17 13:05:43 - mmengine - INFO - Epoch(train)  [2][250/563]  base_lr: 1.4365e-01 lr: 1.4365e-01  eta: 1:09:51  time: 0.2483  data_time: 0.0053  memory: 5340  grad_norm: 1.0938  loss: 1.5976  loss_cls: 0.9266  loss_bbox: 0.6710
2025/05/17 13:05:55 - mmengine - INFO - Epoch(train)  [2][300/563]  base_lr: 1.5151e-01 lr: 1.5151e-01  eta: 1:09:31  time: 0.2534  data_time: 0.0054  memory: 5383  grad_norm: 1.4156  loss: 1.8101  loss_cls: 0.9067  loss_bbox: 0.9034
2025/05/17 13:06:08 - mmengine - INFO - Epoch(train)  [2][350/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 1:09:08  time: 0.2483  data_time: 0.0053  memory: 5321  grad_norm: 0.9769  loss: 1.4607  loss_cls: 0.8712  loss_bbox: 0.5895
2025/05/17 13:06:21 - mmengine - INFO - Epoch(train)  [2][400/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:51  time: 0.2551  data_time: 0.0044  memory: 5316  grad_norm: 0.5681  loss: 1.5682  loss_cls: 0.8809  loss_bbox: 0.6873
2025/05/17 13:06:30 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:06:33 - mmengine - INFO - Epoch(train)  [2][450/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:30  time: 0.2485  data_time: 0.0041  memory: 5280  grad_norm: 0.4821  loss: 1.3581  loss_cls: 0.8423  loss_bbox: 0.5158
2025/05/17 13:06:45 - mmengine - INFO - Epoch(train)  [2][500/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:08:09  time: 0.2486  data_time: 0.0042  memory: 5206  grad_norm: 0.6933  loss: 1.3377  loss_cls: 0.8108  loss_bbox: 0.5270
2025/05/17 13:06:58 - mmengine - INFO - Epoch(train)  [2][550/563]  base_lr: 1.6000e-01 lr: 1.6000e-01  eta: 1:07:51  time: 0.2518  data_time: 0.0042  memory: 5387  grad_norm: 0.7532  loss: 1.4629  loss_cls: 0.8918  loss_bbox: 0.5711
2025/05/17 13:07:01 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:07:06 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:07:07 - mmengine - INFO - bbox_mAP_copypaste: 0.018 0.047 0.008 -1.000 0.000 0.022
2025/05/17 13:07:07 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0180  coco/bbox_mAP_50: 0.0470  coco/bbox_mAP_75: 0.0080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0220  data_time: 0.0016  time: 0.0884
2025/05/17 13:07:07 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/17 13:07:08 - mmengine - INFO - The best checkpoint with 0.0180 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/17 13:07:20 - mmengine - INFO - Epoch(train)  [3][ 50/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:07:28  time: 0.2509  data_time: 0.0048  memory: 5409  grad_norm: 0.5386  loss: 1.4675  loss_cls: 0.8730  loss_bbox: 0.5946
2025/05/17 13:07:33 - mmengine - INFO - Epoch(train)  [3][100/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:07:13  time: 0.2549  data_time: 0.0043  memory: 5321  grad_norm: 0.5093  loss: 1.4269  loss_cls: 0.8344  loss_bbox: 0.5925
2025/05/17 13:07:46 - mmengine - INFO - Epoch(train)  [3][150/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:58  time: 0.2533  data_time: 0.0041  memory: 5454  grad_norm: 0.8548  loss: 1.5862  loss_cls: 0.8688  loss_bbox: 0.7174
2025/05/17 13:07:58 - mmengine - INFO - Epoch(train)  [3][200/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:40  time: 0.2494  data_time: 0.0042  memory: 5404  grad_norm: 0.8115  loss: 1.5644  loss_cls: 0.8475  loss_bbox: 0.7169
2025/05/17 13:08:11 - mmengine - INFO - Epoch(train)  [3][250/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:21  time: 0.2458  data_time: 0.0043  memory: 5342  grad_norm: 0.6608  loss: 1.3641  loss_cls: 0.7936  loss_bbox: 0.5705
2025/05/17 13:08:23 - mmengine - INFO - Epoch(train)  [3][300/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:06:07  time: 0.2539  data_time: 0.0042  memory: 5337  grad_norm: 0.7124  loss: 1.2947  loss_cls: 0.7650  loss_bbox: 0.5298
2025/05/17 13:08:36 - mmengine - INFO - Epoch(train)  [3][350/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:51  time: 0.2503  data_time: 0.0041  memory: 5486  grad_norm: 0.8014  loss: 1.4105  loss_cls: 0.8042  loss_bbox: 0.6063
2025/05/17 13:08:48 - mmengine - INFO - Epoch(train)  [3][400/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:35  time: 0.2510  data_time: 0.0042  memory: 5388  grad_norm: 0.6699  loss: 1.2201  loss_cls: 0.7183  loss_bbox: 0.5018
2025/05/17 13:09:01 - mmengine - INFO - Epoch(train)  [3][450/563]  base_lr: 1.5999e-01 lr: 1.5999e-01  eta: 1:05:17  time: 0.2457  data_time: 0.0042  memory: 5290  grad_norm: 0.7159  loss: 1.4327  loss_cls: 0.8104  loss_bbox: 0.6223
2025/05/17 13:09:13 - mmengine - INFO - Epoch(train)  [3][500/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:05:00  time: 0.2467  data_time: 0.0042  memory: 5465  grad_norm: 0.7176  loss: 1.2584  loss_cls: 0.7142  loss_bbox: 0.5441
2025/05/17 13:09:25 - mmengine - INFO - Epoch(train)  [3][550/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:43  time: 0.2452  data_time: 0.0041  memory: 5402  grad_norm: 14.6165  loss: 2.8455  loss_cls: 2.2148  loss_bbox: 0.6307
2025/05/17 13:09:29 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:09:34 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:09:35 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 0.000 0.000
2025/05/17 13:09:35 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.0016  time: 0.1093
2025/05/17 13:09:47 - mmengine - INFO - Epoch(train)  [4][ 50/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:24  time: 0.2507  data_time: 0.0048  memory: 5320  grad_norm: 25.5261  loss: 7.3982  loss_cls: 6.8963  loss_bbox: 0.5019
2025/05/17 13:10:00 - mmengine - INFO - Epoch(train)  [4][100/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:04:10  time: 0.2520  data_time: 0.0041  memory: 5486  grad_norm: 53.7741  loss: 10.8919  loss_cls: 10.1786  loss_bbox: 0.7134
2025/05/17 13:10:12 - mmengine - INFO - Epoch(train)  [4][150/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:03:54  time: 0.2478  data_time: 0.0042  memory: 5273  grad_norm: 73.5406  loss: 17.3952  loss_cls: 16.6592  loss_bbox: 0.7360
2025/05/17 13:10:25 - mmengine - INFO - Epoch(train)  [4][200/563]  base_lr: 1.5998e-01 lr: 1.5998e-01  eta: 1:03:39  time: 0.2487  data_time: 0.0041  memory: 5402  grad_norm: 79.4989  loss: 13.7905  loss_cls: 13.0500  loss_bbox: 0.7405
2025/05/17 13:10:37 - mmengine - INFO - Epoch(train)  [4][250/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:03:24  time: 0.2479  data_time: 0.0041  memory: 5471  grad_norm: 42.1813  loss: 11.6136  loss_cls: 10.8595  loss_bbox: 0.7541
2025/05/17 13:10:50 - mmengine - INFO - Epoch(train)  [4][300/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:03:10  time: 0.2506  data_time: 0.0041  memory: 5388  grad_norm: 3.5815  loss: 3.2910  loss_cls: 2.5883  loss_bbox: 0.7027
2025/05/17 13:10:52 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:11:02 - mmengine - INFO - Epoch(train)  [4][350/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:02:54  time: 0.2457  data_time: 0.0042  memory: 5346  grad_norm: 3.2957  loss: 3.5781  loss_cls: 2.9569  loss_bbox: 0.6212
2025/05/17 13:11:14 - mmengine - INFO - Epoch(train)  [4][400/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:02:40  time: 0.2502  data_time: 0.0041  memory: 5397  grad_norm: 9.9531  loss: 3.6825  loss_cls: 2.9938  loss_bbox: 0.6887
2025/05/17 13:11:27 - mmengine - INFO - Epoch(train)  [4][450/563]  base_lr: 1.5997e-01 lr: 1.5997e-01  eta: 1:02:25  time: 0.2497  data_time: 0.0041  memory: 5403  grad_norm: 1.0704  loss: 1.8878  loss_cls: 1.2200  loss_bbox: 0.6678
2025/05/17 13:11:39 - mmengine - INFO - Epoch(train)  [4][500/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:02:11  time: 0.2495  data_time: 0.0042  memory: 5315  grad_norm: 0.8966  loss: 2.1826  loss_cls: 1.3526  loss_bbox: 0.8300
2025/05/17 13:11:52 - mmengine - INFO - Epoch(train)  [4][550/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:01:56  time: 0.2461  data_time: 0.0041  memory: 5315  grad_norm: 0.6067  loss: 1.6560  loss_cls: 1.0645  loss_bbox: 0.5915
2025/05/17 13:11:55 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:11:58 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:12:00 - mmengine - INFO - bbox_mAP_copypaste: 0.001 0.002 0.000 -1.000 0.001 0.001
2025/05/17 13:12:00 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.0010  coco/bbox_mAP_50: 0.0020  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0010  coco/bbox_mAP_l: 0.0010  data_time: 0.0016  time: 0.0711
2025/05/17 13:12:12 - mmengine - INFO - Epoch(train)  [5][ 50/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:01:38  time: 0.2492  data_time: 0.0047  memory: 5476  grad_norm: 0.4385  loss: 1.4630  loss_cls: 0.8674  loss_bbox: 0.5956
2025/05/17 13:12:25 - mmengine - INFO - Epoch(train)  [5][100/563]  base_lr: 1.5996e-01 lr: 1.5996e-01  eta: 1:01:25  time: 0.2519  data_time: 0.0043  memory: 5347  grad_norm: 0.5191  loss: 1.5403  loss_cls: 0.9282  loss_bbox: 0.6121
2025/05/17 13:12:37 - mmengine - INFO - Epoch(train)  [5][150/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:01:10  time: 0.2477  data_time: 0.0041  memory: 5388  grad_norm: 0.5089  loss: 1.5677  loss_cls: 0.8900  loss_bbox: 0.6776
2025/05/17 13:12:50 - mmengine - INFO - Epoch(train)  [5][200/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:00:58  time: 0.2536  data_time: 0.0041  memory: 5470  grad_norm: 0.5380  loss: 1.5975  loss_cls: 0.9156  loss_bbox: 0.6819
2025/05/17 13:13:02 - mmengine - INFO - Epoch(train)  [5][250/563]  base_lr: 1.5995e-01 lr: 1.5995e-01  eta: 1:00:43  time: 0.2466  data_time: 0.0041  memory: 5419  grad_norm: 0.4958  loss: 1.6360  loss_cls: 0.9398  loss_bbox: 0.6962
2025/05/17 13:13:15 - mmengine - INFO - Epoch(train)  [5][300/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:29  time: 0.2490  data_time: 0.0041  memory: 5351  grad_norm: 0.4830  loss: 1.5056  loss_cls: 0.8567  loss_bbox: 0.6489
2025/05/17 13:13:27 - mmengine - INFO - Epoch(train)  [5][350/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:16  time: 0.2515  data_time: 0.0041  memory: 5483  grad_norm: 0.4627  loss: 1.4748  loss_cls: 0.8447  loss_bbox: 0.6302
2025/05/17 13:13:40 - mmengine - INFO - Epoch(train)  [5][400/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 1:00:03  time: 0.2494  data_time: 0.0041  memory: 5409  grad_norm: 0.5491  loss: 1.6238  loss_cls: 0.9553  loss_bbox: 0.6686
2025/05/17 13:13:52 - mmengine - INFO - Epoch(train)  [5][450/563]  base_lr: 1.5994e-01 lr: 1.5994e-01  eta: 0:59:49  time: 0.2511  data_time: 0.0041  memory: 5280  grad_norm: 0.5138  loss: 1.5552  loss_cls: 0.9813  loss_bbox: 0.5739
2025/05/17 13:14:05 - mmengine - INFO - Epoch(train)  [5][500/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 0:59:37  time: 0.2519  data_time: 0.0042  memory: 5326  grad_norm: 0.4250  loss: 1.4332  loss_cls: 0.8767  loss_bbox: 0.5565
2025/05/17 13:14:17 - mmengine - INFO - Epoch(train)  [5][550/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 0:59:23  time: 0.2491  data_time: 0.0042  memory: 5249  grad_norm: 0.4605  loss: 1.6543  loss_cls: 0.9699  loss_bbox: 0.6844
2025/05/17 13:14:21 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:14:24 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:14:25 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.001 0.000 -1.000 0.000 0.000
2025/05/17 13:14:25 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0010  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.0016  time: 0.0690
2025/05/17 13:14:38 - mmengine - INFO - Epoch(train)  [6][ 50/563]  base_lr: 1.5993e-01 lr: 1.5993e-01  eta: 0:59:06  time: 0.2535  data_time: 0.0049  memory: 5485  grad_norm: 0.4826  loss: 1.5763  loss_cls: 0.8831  loss_bbox: 0.6932
2025/05/17 13:14:50 - mmengine - INFO - Epoch(train)  [6][100/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:58:53  time: 0.2487  data_time: 0.0041  memory: 5435  grad_norm: 0.4084  loss: 1.4852  loss_cls: 0.8885  loss_bbox: 0.5968
2025/05/17 13:15:03 - mmengine - INFO - Epoch(train)  [6][150/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:58:40  time: 0.2515  data_time: 0.0041  memory: 5464  grad_norm: 0.4335  loss: 1.5359  loss_cls: 0.8851  loss_bbox: 0.6508
2025/05/17 13:15:11 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:15:15 - mmengine - INFO - Epoch(train)  [6][200/563]  base_lr: 1.5992e-01 lr: 1.5992e-01  eta: 0:58:27  time: 0.2501  data_time: 0.0042  memory: 5475  grad_norm: 0.4436  loss: 1.5383  loss_cls: 0.9286  loss_bbox: 0.6097
2025/05/17 13:15:28 - mmengine - INFO - Epoch(train)  [6][250/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:58:14  time: 0.2525  data_time: 0.0042  memory: 5409  grad_norm: 0.3984  loss: 1.5061  loss_cls: 0.8711  loss_bbox: 0.6349
2025/05/17 13:15:40 - mmengine - INFO - Epoch(train)  [6][300/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:58:00  time: 0.2485  data_time: 0.0041  memory: 5404  grad_norm: 0.3851  loss: 1.4836  loss_cls: 0.8556  loss_bbox: 0.6279
2025/05/17 13:15:53 - mmengine - INFO - Epoch(train)  [6][350/563]  base_lr: 1.5991e-01 lr: 1.5991e-01  eta: 0:57:47  time: 0.2518  data_time: 0.0041  memory: 5388  grad_norm: 0.4550  loss: 1.5258  loss_cls: 0.8684  loss_bbox: 0.6574
2025/05/17 13:16:05 - mmengine - INFO - Epoch(train)  [6][400/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 0:57:34  time: 0.2487  data_time: 0.0041  memory: 5299  grad_norm: 0.4323  loss: 1.5772  loss_cls: 0.8646  loss_bbox: 0.7127
2025/05/17 13:16:18 - mmengine - INFO - Epoch(train)  [6][450/563]  base_lr: 1.5990e-01 lr: 1.5990e-01  eta: 0:57:21  time: 0.2489  data_time: 0.0042  memory: 5402  grad_norm: 0.5330  loss: 1.5172  loss_cls: 0.8752  loss_bbox: 0.6419
2025/05/17 13:16:30 - mmengine - INFO - Epoch(train)  [6][500/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:57:07  time: 0.2487  data_time: 0.0042  memory: 5470  grad_norm: 0.3920  loss: 1.4656  loss_cls: 0.8864  loss_bbox: 0.5792
2025/05/17 13:16:43 - mmengine - INFO - Epoch(train)  [6][550/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:56:54  time: 0.2513  data_time: 0.0042  memory: 5404  grad_norm: 0.3871  loss: 1.4094  loss_cls: 0.8126  loss_bbox: 0.5969
2025/05/17 13:16:46 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:16:50 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:16:51 - mmengine - INFO - bbox_mAP_copypaste: 0.001 0.003 0.000 -1.000 0.000 0.001
2025/05/17 13:16:51 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.0010  coco/bbox_mAP_50: 0.0030  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0010  data_time: 0.0016  time: 0.0730
2025/05/17 13:17:03 - mmengine - INFO - Epoch(train)  [7][ 50/563]  base_lr: 1.5989e-01 lr: 1.5989e-01  eta: 0:56:37  time: 0.2461  data_time: 0.0048  memory: 5305  grad_norm: 0.3897  loss: 1.4174  loss_cls: 0.8520  loss_bbox: 0.5654
2025/05/17 13:17:16 - mmengine - INFO - Epoch(train)  [7][100/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 0:56:24  time: 0.2492  data_time: 0.0041  memory: 5404  grad_norm: 0.4725  loss: 1.4197  loss_cls: 0.8502  loss_bbox: 0.5694
2025/05/17 13:17:28 - mmengine - INFO - Epoch(train)  [7][150/563]  base_lr: 1.5988e-01 lr: 1.5988e-01  eta: 0:56:10  time: 0.2493  data_time: 0.0043  memory: 5388  grad_norm: 0.7240  loss: 1.6477  loss_cls: 0.8813  loss_bbox: 0.7664
2025/05/17 13:17:40 - mmengine - INFO - Epoch(train)  [7][200/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 0:55:56  time: 0.2451  data_time: 0.0041  memory: 5357  grad_norm: 0.5551  loss: 1.5969  loss_cls: 0.8793  loss_bbox: 0.7176
2025/05/17 13:17:53 - mmengine - INFO - Epoch(train)  [7][250/563]  base_lr: 1.5987e-01 lr: 1.5987e-01  eta: 0:55:44  time: 0.2534  data_time: 0.0042  memory: 5326  grad_norm: 0.3930  loss: 1.4659  loss_cls: 0.8819  loss_bbox: 0.5840
2025/05/17 13:18:05 - mmengine - INFO - Epoch(train)  [7][300/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:55:30  time: 0.2449  data_time: 0.0042  memory: 5320  grad_norm: 0.4826  loss: 1.5100  loss_cls: 0.9662  loss_bbox: 0.5438
2025/05/17 13:18:18 - mmengine - INFO - Epoch(train)  [7][350/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:55:17  time: 0.2505  data_time: 0.0041  memory: 5408  grad_norm: 0.4511  loss: 1.4689  loss_cls: 0.9002  loss_bbox: 0.5687
2025/05/17 13:18:30 - mmengine - INFO - Epoch(train)  [7][400/563]  base_lr: 1.5986e-01 lr: 1.5986e-01  eta: 0:55:04  time: 0.2467  data_time: 0.0041  memory: 5419  grad_norm: 0.4454  loss: 1.3949  loss_cls: 0.8449  loss_bbox: 0.5500
2025/05/17 13:18:43 - mmengine - INFO - Epoch(train)  [7][450/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:54:51  time: 0.2536  data_time: 0.0041  memory: 5429  grad_norm: 0.4191  loss: 1.3791  loss_cls: 0.8331  loss_bbox: 0.5461
2025/05/17 13:18:56 - mmengine - INFO - Epoch(train)  [7][500/563]  base_lr: 1.5985e-01 lr: 1.5985e-01  eta: 0:54:39  time: 0.2516  data_time: 0.0041  memory: 5476  grad_norm: 0.4602  loss: 1.3925  loss_cls: 0.8243  loss_bbox: 0.5682
2025/05/17 13:19:08 - mmengine - INFO - Epoch(train)  [7][550/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:54:27  time: 0.2550  data_time: 0.0041  memory: 5342  grad_norm: 0.5157  loss: 1.5159  loss_cls: 0.8859  loss_bbox: 0.6300
2025/05/17 13:19:11 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:19:15 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:19:17 - mmengine - INFO - bbox_mAP_copypaste: 0.002 0.009 0.000 -1.000 0.000 0.002
2025/05/17 13:19:17 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.0020  coco/bbox_mAP_50: 0.0090  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0020  data_time: 0.0015  time: 0.0742
2025/05/17 13:19:29 - mmengine - INFO - Epoch(train)  [8][ 50/563]  base_lr: 1.5984e-01 lr: 1.5984e-01  eta: 0:54:11  time: 0.2541  data_time: 0.0047  memory: 5465  grad_norm: 0.5631  loss: 1.6338  loss_cls: 0.9762  loss_bbox: 0.6576
2025/05/17 13:19:32 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:19:42 - mmengine - INFO - Epoch(train)  [8][100/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:53:58  time: 0.2489  data_time: 0.0041  memory: 5409  grad_norm: 0.4913  loss: 1.4287  loss_cls: 0.8520  loss_bbox: 0.5767
2025/05/17 13:19:54 - mmengine - INFO - Epoch(train)  [8][150/563]  base_lr: 1.5983e-01 lr: 1.5983e-01  eta: 0:53:45  time: 0.2519  data_time: 0.0042  memory: 5409  grad_norm: 0.5208  loss: 1.4114  loss_cls: 0.8353  loss_bbox: 0.5761
2025/05/17 13:20:07 - mmengine - INFO - Epoch(train)  [8][200/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:53:32  time: 0.2495  data_time: 0.0041  memory: 5352  grad_norm: 0.6060  loss: 1.4275  loss_cls: 0.8436  loss_bbox: 0.5839
2025/05/17 13:20:19 - mmengine - INFO - Epoch(train)  [8][250/563]  base_lr: 1.5982e-01 lr: 1.5982e-01  eta: 0:53:19  time: 0.2501  data_time: 0.0041  memory: 5336  grad_norm: 0.5257  loss: 1.4660  loss_cls: 0.8605  loss_bbox: 0.6054
2025/05/17 13:20:32 - mmengine - INFO - Epoch(train)  [8][300/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:53:06  time: 0.2490  data_time: 0.0042  memory: 5357  grad_norm: 0.4485  loss: 1.2691  loss_cls: 0.7827  loss_bbox: 0.4864
2025/05/17 13:20:44 - mmengine - INFO - Epoch(train)  [8][350/563]  base_lr: 1.5981e-01 lr: 1.5981e-01  eta: 0:52:53  time: 0.2482  data_time: 0.0042  memory: 5242  grad_norm: 0.4823  loss: 1.2704  loss_cls: 0.7960  loss_bbox: 0.4744
2025/05/17 13:20:57 - mmengine - INFO - Epoch(train)  [8][400/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:52:41  time: 0.2543  data_time: 0.0044  memory: 5476  grad_norm: 0.5305  loss: 1.2842  loss_cls: 0.7691  loss_bbox: 0.5152
2025/05/17 13:21:10 - mmengine - INFO - Epoch(train)  [8][450/563]  base_lr: 1.5980e-01 lr: 1.5980e-01  eta: 0:52:28  time: 0.2529  data_time: 0.0043  memory: 5398  grad_norm: 0.5686  loss: 1.2573  loss_cls: 0.7396  loss_bbox: 0.5177
2025/05/17 13:21:22 - mmengine - INFO - Epoch(train)  [8][500/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:52:15  time: 0.2454  data_time: 0.0041  memory: 5434  grad_norm: 0.6776  loss: 1.3602  loss_cls: 0.7804  loss_bbox: 0.5797
2025/05/17 13:21:35 - mmengine - INFO - Epoch(train)  [8][550/563]  base_lr: 1.5979e-01 lr: 1.5979e-01  eta: 0:52:03  time: 0.2564  data_time: 0.0041  memory: 5455  grad_norm: 0.5108  loss: 1.2766  loss_cls: 0.7661  loss_bbox: 0.5105
2025/05/17 13:21:38 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:21:42 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:21:44 - mmengine - INFO - bbox_mAP_copypaste: 0.014 0.041 0.005 -1.000 0.000 0.018
2025/05/17 13:21:44 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.0140  coco/bbox_mAP_50: 0.0410  coco/bbox_mAP_75: 0.0050  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0180  data_time: 0.0015  time: 0.0886
2025/05/17 13:21:56 - mmengine - INFO - Epoch(train)  [9][ 50/563]  base_lr: 1.5978e-01 lr: 1.5978e-01  eta: 0:51:47  time: 0.2531  data_time: 0.0047  memory: 5486  grad_norm: 0.4973  loss: 1.2551  loss_cls: 0.7701  loss_bbox: 0.4850
2025/05/17 13:22:09 - mmengine - INFO - Epoch(train)  [9][100/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:51:34  time: 0.2514  data_time: 0.0042  memory: 5397  grad_norm: 0.6481  loss: 1.3129  loss_cls: 0.7780  loss_bbox: 0.5349
2025/05/17 13:22:22 - mmengine - INFO - Epoch(train)  [9][150/563]  base_lr: 1.5977e-01 lr: 1.5977e-01  eta: 0:51:23  time: 0.2578  data_time: 0.0042  memory: 5357  grad_norm: 0.4974  loss: 1.3581  loss_cls: 0.7839  loss_bbox: 0.5742
2025/05/17 13:22:34 - mmengine - INFO - Epoch(train)  [9][200/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:51:10  time: 0.2491  data_time: 0.0042  memory: 5280  grad_norm: 0.4480  loss: 1.2052  loss_cls: 0.7327  loss_bbox: 0.4725
2025/05/17 13:22:47 - mmengine - INFO - Epoch(train)  [9][250/563]  base_lr: 1.5976e-01 lr: 1.5976e-01  eta: 0:50:57  time: 0.2507  data_time: 0.0041  memory: 5413  grad_norm: 0.5413  loss: 1.2316  loss_cls: 0.7139  loss_bbox: 0.5177
2025/05/17 13:22:59 - mmengine - INFO - Epoch(train)  [9][300/563]  base_lr: 1.5975e-01 lr: 1.5975e-01  eta: 0:50:44  time: 0.2471  data_time: 0.0042  memory: 5268  grad_norm: 0.4788  loss: 1.2478  loss_cls: 0.7631  loss_bbox: 0.4847
2025/05/17 13:23:12 - mmengine - INFO - Epoch(train)  [9][350/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:50:32  time: 0.2579  data_time: 0.0041  memory: 5336  grad_norm: 0.5406  loss: 1.4961  loss_cls: 0.7858  loss_bbox: 0.7103
2025/05/17 13:23:24 - mmengine - INFO - Epoch(train)  [9][400/563]  base_lr: 1.5974e-01 lr: 1.5974e-01  eta: 0:50:18  time: 0.2461  data_time: 0.0041  memory: 5476  grad_norm: 0.5314  loss: 1.2890  loss_cls: 0.7184  loss_bbox: 0.5706
2025/05/17 13:23:37 - mmengine - INFO - Epoch(train)  [9][450/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:50:06  time: 0.2496  data_time: 0.0040  memory: 5264  grad_norm: 0.4939  loss: 1.1841  loss_cls: 0.6951  loss_bbox: 0.4890
2025/05/17 13:23:48 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:23:49 - mmengine - INFO - Epoch(train)  [9][500/563]  base_lr: 1.5973e-01 lr: 1.5973e-01  eta: 0:49:53  time: 0.2502  data_time: 0.0042  memory: 5304  grad_norm: 0.4692  loss: 1.2077  loss_cls: 0.7182  loss_bbox: 0.4896
2025/05/17 13:24:02 - mmengine - INFO - Epoch(train)  [9][550/563]  base_lr: 1.5972e-01 lr: 1.5972e-01  eta: 0:49:40  time: 0.2525  data_time: 0.0041  memory: 5409  grad_norm: 0.5894  loss: 1.2298  loss_cls: 0.7156  loss_bbox: 0.5142
2025/05/17 13:24:05 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:24:09 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:24:11 - mmengine - INFO - bbox_mAP_copypaste: 0.063 0.140 0.044 -1.000 0.008 0.070
2025/05/17 13:24:11 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.0630  coco/bbox_mAP_50: 0.1400  coco/bbox_mAP_75: 0.0440  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0080  coco/bbox_mAP_l: 0.0700  data_time: 0.0016  time: 0.0822
2025/05/17 13:24:11 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/17 13:24:12 - mmengine - INFO - The best checkpoint with 0.0630 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/17 13:24:24 - mmengine - INFO - Epoch(train) [10][ 50/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:49:25  time: 0.2560  data_time: 0.0048  memory: 5455  grad_norm: 0.5833  loss: 1.1932  loss_cls: 0.7185  loss_bbox: 0.4747
2025/05/17 13:24:37 - mmengine - INFO - Epoch(train) [10][100/563]  base_lr: 1.5971e-01 lr: 1.5971e-01  eta: 0:49:12  time: 0.2493  data_time: 0.0043  memory: 5321  grad_norm: 0.4932  loss: 1.1778  loss_cls: 0.6952  loss_bbox: 0.4826
2025/05/17 13:24:49 - mmengine - INFO - Epoch(train) [10][150/563]  base_lr: 1.5970e-01 lr: 1.5970e-01  eta: 0:48:59  time: 0.2495  data_time: 0.0041  memory: 5357  grad_norm: 0.8263  loss: 1.4424  loss_cls: 0.8161  loss_bbox: 0.6263
2025/05/17 13:25:02 - mmengine - INFO - Epoch(train) [10][200/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:48:46  time: 0.2479  data_time: 0.0042  memory: 5175  grad_norm: 0.6924  loss: 1.5561  loss_cls: 0.9655  loss_bbox: 0.5906
2025/05/17 13:25:14 - mmengine - INFO - Epoch(train) [10][250/563]  base_lr: 1.5969e-01 lr: 1.5969e-01  eta: 0:48:34  time: 0.2546  data_time: 0.0042  memory: 5486  grad_norm: 0.4274  loss: 1.2586  loss_cls: 0.8172  loss_bbox: 0.4413
2025/05/17 13:25:27 - mmengine - INFO - Epoch(train) [10][300/563]  base_lr: 1.5968e-01 lr: 1.5968e-01  eta: 0:48:21  time: 0.2487  data_time: 0.0041  memory: 5316  grad_norm: 0.8449  loss: 1.4138  loss_cls: 0.7885  loss_bbox: 0.6254
2025/05/17 13:25:39 - mmengine - INFO - Epoch(train) [10][350/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:48:08  time: 0.2522  data_time: 0.0041  memory: 5382  grad_norm: 0.8102  loss: 1.3664  loss_cls: 0.7831  loss_bbox: 0.5834
2025/05/17 13:25:52 - mmengine - INFO - Epoch(train) [10][400/563]  base_lr: 1.5967e-01 lr: 1.5967e-01  eta: 0:47:55  time: 0.2477  data_time: 0.0041  memory: 5470  grad_norm: 0.7110  loss: 1.3092  loss_cls: 0.7844  loss_bbox: 0.5248
2025/05/17 13:26:05 - mmengine - INFO - Epoch(train) [10][450/563]  base_lr: 1.5966e-01 lr: 1.5966e-01  eta: 0:47:43  time: 0.2529  data_time: 0.0042  memory: 5259  grad_norm: 0.8418  loss: 1.3455  loss_cls: 0.7473  loss_bbox: 0.5982
2025/05/17 13:26:17 - mmengine - INFO - Epoch(train) [10][500/563]  base_lr: 1.5965e-01 lr: 1.5965e-01  eta: 0:47:30  time: 0.2526  data_time: 0.0042  memory: 5347  grad_norm: 0.5279  loss: 1.3065  loss_cls: 0.7354  loss_bbox: 0.5711
2025/05/17 13:26:30 - mmengine - INFO - Epoch(train) [10][550/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:47:18  time: 0.2555  data_time: 0.0041  memory: 5482  grad_norm: 0.6527  loss: 1.3956  loss_cls: 0.7599  loss_bbox: 0.6357
2025/05/17 13:26:33 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:26:37 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:26:39 - mmengine - INFO - bbox_mAP_copypaste: 0.050 0.123 0.028 -1.000 0.001 0.056
2025/05/17 13:26:39 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.0500  coco/bbox_mAP_50: 0.1230  coco/bbox_mAP_75: 0.0280  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0010  coco/bbox_mAP_l: 0.0560  data_time: 0.0017  time: 0.0828
2025/05/17 13:26:52 - mmengine - INFO - Epoch(train) [11][ 50/563]  base_lr: 1.5964e-01 lr: 1.5964e-01  eta: 0:47:02  time: 0.2531  data_time: 0.0047  memory: 5476  grad_norm: 0.7130  loss: 1.3426  loss_cls: 0.7162  loss_bbox: 0.6264
2025/05/17 13:27:04 - mmengine - INFO - Epoch(train) [11][100/563]  base_lr: 1.5963e-01 lr: 1.5963e-01  eta: 0:46:49  time: 0.2459  data_time: 0.0040  memory: 5244  grad_norm: 0.5310  loss: 1.2352  loss_cls: 0.7052  loss_bbox: 0.5300
2025/05/17 13:27:17 - mmengine - INFO - Epoch(train) [11][150/563]  base_lr: 1.5962e-01 lr: 1.5962e-01  eta: 0:46:37  time: 0.2549  data_time: 0.0043  memory: 5464  grad_norm: 0.4432  loss: 1.1144  loss_cls: 0.6737  loss_bbox: 0.4407
2025/05/17 13:27:29 - mmengine - INFO - Epoch(train) [11][200/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:46:24  time: 0.2486  data_time: 0.0041  memory: 5325  grad_norm: 0.5676  loss: 1.1952  loss_cls: 0.7140  loss_bbox: 0.4811
2025/05/17 13:27:42 - mmengine - INFO - Epoch(train) [11][250/563]  base_lr: 1.5961e-01 lr: 1.5961e-01  eta: 0:46:11  time: 0.2514  data_time: 0.0041  memory: 5485  grad_norm: 0.4580  loss: 1.1849  loss_cls: 0.7184  loss_bbox: 0.4666
2025/05/17 13:27:54 - mmengine - INFO - Epoch(train) [11][300/563]  base_lr: 1.5960e-01 lr: 1.5960e-01  eta: 0:45:59  time: 0.2493  data_time: 0.0041  memory: 5397  grad_norm: 0.5251  loss: 1.1678  loss_cls: 0.6651  loss_bbox: 0.5027
2025/05/17 13:28:07 - mmengine - INFO - Epoch(train) [11][350/563]  base_lr: 1.5959e-01 lr: 1.5959e-01  eta: 0:45:46  time: 0.2526  data_time: 0.0041  memory: 5311  grad_norm: 0.6954  loss: 1.3780  loss_cls: 0.8010  loss_bbox: 0.5769
2025/05/17 13:28:12 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:28:19 - mmengine - INFO - Epoch(train) [11][400/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:45:33  time: 0.2488  data_time: 0.0042  memory: 5347  grad_norm: 2.7632  loss: 1.6938  loss_cls: 1.1761  loss_bbox: 0.5177
2025/05/17 13:28:32 - mmengine - INFO - Epoch(train) [11][450/563]  base_lr: 1.5958e-01 lr: 1.5958e-01  eta: 0:45:21  time: 0.2526  data_time: 0.0041  memory: 5454  grad_norm: 0.5756  loss: 1.4780  loss_cls: 0.8606  loss_bbox: 0.6175
2025/05/17 13:28:44 - mmengine - INFO - Epoch(train) [11][500/563]  base_lr: 1.5957e-01 lr: 1.5957e-01  eta: 0:45:08  time: 0.2521  data_time: 0.0041  memory: 5387  grad_norm: 0.5591  loss: 1.2763  loss_cls: 0.7389  loss_bbox: 0.5374
2025/05/17 13:28:57 - mmengine - INFO - Epoch(train) [11][550/563]  base_lr: 1.5956e-01 lr: 1.5956e-01  eta: 0:44:56  time: 0.2526  data_time: 0.0042  memory: 5409  grad_norm: 0.5502  loss: 1.2634  loss_cls: 0.7165  loss_bbox: 0.5468
2025/05/17 13:29:00 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:29:05 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:29:06 - mmengine - INFO - bbox_mAP_copypaste: 0.041 0.096 0.026 -1.000 0.002 0.045
2025/05/17 13:29:06 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.0410  coco/bbox_mAP_50: 0.0960  coco/bbox_mAP_75: 0.0260  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0020  coco/bbox_mAP_l: 0.0450  data_time: 0.0015  time: 0.0843
2025/05/17 13:29:18 - mmengine - INFO - Epoch(train) [12][ 50/563]  base_lr: 1.5955e-01 lr: 1.5955e-01  eta: 0:44:40  time: 0.2513  data_time: 0.0047  memory: 5398  grad_norm: 0.4614  loss: 1.1910  loss_cls: 0.7104  loss_bbox: 0.4807
2025/05/17 13:29:31 - mmengine - INFO - Epoch(train) [12][100/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:44:27  time: 0.2520  data_time: 0.0041  memory: 5342  grad_norm: 0.4396  loss: 1.0946  loss_cls: 0.6761  loss_bbox: 0.4186
2025/05/17 13:29:44 - mmengine - INFO - Epoch(train) [12][150/563]  base_lr: 1.5954e-01 lr: 1.5954e-01  eta: 0:44:15  time: 0.2519  data_time: 0.0040  memory: 5269  grad_norm: 0.7946  loss: 1.4248  loss_cls: 0.7906  loss_bbox: 0.6342
2025/05/17 13:29:56 - mmengine - INFO - Epoch(train) [12][200/563]  base_lr: 1.5953e-01 lr: 1.5953e-01  eta: 0:44:02  time: 0.2486  data_time: 0.0043  memory: 5475  grad_norm: 0.6138  loss: 1.4468  loss_cls: 0.9767  loss_bbox: 0.4701
2025/05/17 13:30:09 - mmengine - INFO - Epoch(train) [12][250/563]  base_lr: 1.5952e-01 lr: 1.5952e-01  eta: 0:43:49  time: 0.2498  data_time: 0.0042  memory: 5409  grad_norm: 0.6049  loss: 1.3251  loss_cls: 0.8593  loss_bbox: 0.4658
2025/05/17 13:30:21 - mmengine - INFO - Epoch(train) [12][300/563]  base_lr: 1.5951e-01 lr: 1.5951e-01  eta: 0:43:36  time: 0.2486  data_time: 0.0041  memory: 5464  grad_norm: 0.7282  loss: 1.5474  loss_cls: 1.0198  loss_bbox: 0.5276
2025/05/17 13:30:34 - mmengine - INFO - Epoch(train) [12][350/563]  base_lr: 1.5950e-01 lr: 1.5950e-01  eta: 0:43:24  time: 0.2529  data_time: 0.0041  memory: 5270  grad_norm: 0.5793  loss: 1.4180  loss_cls: 0.8564  loss_bbox: 0.5616
2025/05/17 13:30:46 - mmengine - INFO - Epoch(train) [12][400/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:43:11  time: 0.2555  data_time: 0.0042  memory: 5408  grad_norm: 0.6192  loss: 1.2883  loss_cls: 0.7793  loss_bbox: 0.5090
2025/05/17 13:30:59 - mmengine - INFO - Epoch(train) [12][450/563]  base_lr: 1.5949e-01 lr: 1.5949e-01  eta: 0:42:59  time: 0.2518  data_time: 0.0041  memory: 5434  grad_norm: 0.5428  loss: 1.2672  loss_cls: 0.7753  loss_bbox: 0.4919
2025/05/17 13:31:12 - mmengine - INFO - Epoch(train) [12][500/563]  base_lr: 1.5948e-01 lr: 1.5948e-01  eta: 0:42:46  time: 0.2514  data_time: 0.0042  memory: 5371  grad_norm: 0.5500  loss: 1.3626  loss_cls: 0.7459  loss_bbox: 0.6167
2025/05/17 13:31:24 - mmengine - INFO - Epoch(train) [12][550/563]  base_lr: 1.5947e-01 lr: 1.5947e-01  eta: 0:42:33  time: 0.2505  data_time: 0.0044  memory: 5485  grad_norm: 0.4452  loss: 1.1666  loss_cls: 0.7063  loss_bbox: 0.4604
2025/05/17 13:31:27 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:31:32 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:31:33 - mmengine - INFO - bbox_mAP_copypaste: 0.001 0.003 0.001 -1.000 0.000 0.001
2025/05/17 13:31:33 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.0010  coco/bbox_mAP_50: 0.0030  coco/bbox_mAP_75: 0.0010  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0000  coco/bbox_mAP_l: 0.0010  data_time: 0.0015  time: 0.0928
2025/05/17 13:31:46 - mmengine - INFO - Epoch(train) [13][ 50/563]  base_lr: 1.5946e-01 lr: 1.5946e-01  eta: 0:42:18  time: 0.2564  data_time: 0.0047  memory: 5387  grad_norm: 0.4837  loss: 1.1121  loss_cls: 0.6714  loss_bbox: 0.4407
2025/05/17 13:31:58 - mmengine - INFO - Epoch(train) [13][100/563]  base_lr: 1.5945e-01 lr: 1.5945e-01  eta: 0:42:05  time: 0.2513  data_time: 0.0041  memory: 5433  grad_norm: 0.4825  loss: 1.2047  loss_cls: 0.7028  loss_bbox: 0.5018
2025/05/17 13:32:11 - mmengine - INFO - Epoch(train) [13][150/563]  base_lr: 1.5944e-01 lr: 1.5944e-01  eta: 0:41:53  time: 0.2513  data_time: 0.0041  memory: 5404  grad_norm: 0.5246  loss: 1.2320  loss_cls: 0.7028  loss_bbox: 0.5292
2025/05/17 13:32:23 - mmengine - INFO - Epoch(train) [13][200/563]  base_lr: 1.5943e-01 lr: 1.5943e-01  eta: 0:41:40  time: 0.2492  data_time: 0.0041  memory: 5387  grad_norm: 0.5873  loss: 1.2182  loss_cls: 0.6942  loss_bbox: 0.5240
2025/05/17 13:32:35 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:32:36 - mmengine - INFO - Epoch(train) [13][250/563]  base_lr: 1.5942e-01 lr: 1.5942e-01  eta: 0:41:28  time: 0.2539  data_time: 0.0040  memory: 5388  grad_norm: 0.5500  loss: 1.2320  loss_cls: 0.6794  loss_bbox: 0.5526
2025/05/17 13:32:49 - mmengine - INFO - Epoch(train) [13][300/563]  base_lr: 1.5941e-01 lr: 1.5941e-01  eta: 0:41:15  time: 0.2489  data_time: 0.0042  memory: 5342  grad_norm: 0.5701  loss: 1.1966  loss_cls: 0.6865  loss_bbox: 0.5100
2025/05/17 13:33:01 - mmengine - INFO - Epoch(train) [13][350/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:41:02  time: 0.2489  data_time: 0.0042  memory: 5397  grad_norm: 0.5797  loss: 1.2719  loss_cls: 0.7034  loss_bbox: 0.5685
2025/05/17 13:33:13 - mmengine - INFO - Epoch(train) [13][400/563]  base_lr: 1.5940e-01 lr: 1.5940e-01  eta: 0:40:49  time: 0.2474  data_time: 0.0042  memory: 5367  grad_norm: 1.0082  loss: 1.4990  loss_cls: 0.7246  loss_bbox: 0.7745
2025/05/17 13:33:26 - mmengine - INFO - Epoch(train) [13][450/563]  base_lr: 1.5939e-01 lr: 1.5939e-01  eta: 0:40:36  time: 0.2494  data_time: 0.0042  memory: 5341  grad_norm: 0.5489  loss: 1.1685  loss_cls: 0.6644  loss_bbox: 0.5041
2025/05/17 13:33:38 - mmengine - INFO - Epoch(train) [13][500/563]  base_lr: 1.5938e-01 lr: 1.5938e-01  eta: 0:40:24  time: 0.2513  data_time: 0.0042  memory: 5471  grad_norm: 0.5229  loss: 1.2236  loss_cls: 0.6714  loss_bbox: 0.5521
2025/05/17 13:33:51 - mmengine - INFO - Epoch(train) [13][550/563]  base_lr: 1.5937e-01 lr: 1.5937e-01  eta: 0:40:11  time: 0.2493  data_time: 0.0042  memory: 5409  grad_norm: 0.5819  loss: 1.1787  loss_cls: 0.6691  loss_bbox: 0.5096
2025/05/17 13:33:54 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:33:58 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:33:59 - mmengine - INFO - bbox_mAP_copypaste: 0.074 0.158 0.057 -1.000 0.017 0.082
2025/05/17 13:33:59 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.0740  coco/bbox_mAP_50: 0.1580  coco/bbox_mAP_75: 0.0570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0170  coco/bbox_mAP_l: 0.0820  data_time: 0.0016  time: 0.0727
2025/05/17 13:33:59 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/17 13:34:00 - mmengine - INFO - The best checkpoint with 0.0740 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2025/05/17 13:34:13 - mmengine - INFO - Epoch(train) [14][ 50/563]  base_lr: 1.5936e-01 lr: 1.5936e-01  eta: 0:39:55  time: 0.2534  data_time: 0.0049  memory: 5409  grad_norm: 0.5784  loss: 1.1773  loss_cls: 0.6510  loss_bbox: 0.5263
2025/05/17 13:34:25 - mmengine - INFO - Epoch(train) [14][100/563]  base_lr: 1.5935e-01 lr: 1.5935e-01  eta: 0:39:43  time: 0.2484  data_time: 0.0042  memory: 5476  grad_norm: 0.5135  loss: 1.2235  loss_cls: 0.6660  loss_bbox: 0.5575
2025/05/17 13:34:38 - mmengine - INFO - Epoch(train) [14][150/563]  base_lr: 1.5934e-01 lr: 1.5934e-01  eta: 0:39:30  time: 0.2506  data_time: 0.0041  memory: 5383  grad_norm: 0.5302  loss: 1.2614  loss_cls: 0.6693  loss_bbox: 0.5921
2025/05/17 13:34:50 - mmengine - INFO - Epoch(train) [14][200/563]  base_lr: 1.5933e-01 lr: 1.5933e-01  eta: 0:39:17  time: 0.2500  data_time: 0.0041  memory: 5483  grad_norm: 0.5190  loss: 1.1720  loss_cls: 0.6428  loss_bbox: 0.5292
2025/05/17 13:35:03 - mmengine - INFO - Epoch(train) [14][250/563]  base_lr: 1.5932e-01 lr: 1.5932e-01  eta: 0:39:05  time: 0.2525  data_time: 0.0042  memory: 5409  grad_norm: 0.5956  loss: 1.2032  loss_cls: 0.6541  loss_bbox: 0.5491
2025/05/17 13:35:15 - mmengine - INFO - Epoch(train) [14][300/563]  base_lr: 1.5931e-01 lr: 1.5931e-01  eta: 0:38:52  time: 0.2501  data_time: 0.0042  memory: 5377  grad_norm: 0.4697  loss: 1.0558  loss_cls: 0.6284  loss_bbox: 0.4273
2025/05/17 13:35:28 - mmengine - INFO - Epoch(train) [14][350/563]  base_lr: 1.5930e-01 lr: 1.5930e-01  eta: 0:38:39  time: 0.2508  data_time: 0.0041  memory: 5326  grad_norm: 0.5684  loss: 1.2609  loss_cls: 0.6319  loss_bbox: 0.6290
2025/05/17 13:35:40 - mmengine - INFO - Epoch(train) [14][400/563]  base_lr: 1.5929e-01 lr: 1.5929e-01  eta: 0:38:27  time: 0.2493  data_time: 0.0041  memory: 5471  grad_norm: 0.5980  loss: 1.1779  loss_cls: 0.6485  loss_bbox: 0.5295
2025/05/17 13:35:53 - mmengine - INFO - Epoch(train) [14][450/563]  base_lr: 1.5928e-01 lr: 1.5928e-01  eta: 0:38:14  time: 0.2544  data_time: 0.0042  memory: 5464  grad_norm: 0.6096  loss: 1.2948  loss_cls: 0.7812  loss_bbox: 0.5136
2025/05/17 13:36:06 - mmengine - INFO - Epoch(train) [14][500/563]  base_lr: 1.5927e-01 lr: 1.5927e-01  eta: 0:38:02  time: 0.2501  data_time: 0.0042  memory: 5280  grad_norm: 0.5436  loss: 1.2265  loss_cls: 0.6993  loss_bbox: 0.5272
2025/05/17 13:36:18 - mmengine - INFO - Epoch(train) [14][550/563]  base_lr: 1.5926e-01 lr: 1.5926e-01  eta: 0:37:49  time: 0.2510  data_time: 0.0042  memory: 5280  grad_norm: 0.7830  loss: 1.2191  loss_cls: 0.6867  loss_bbox: 0.5324
2025/05/17 13:36:21 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:36:25 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:36:26 - mmengine - INFO - bbox_mAP_copypaste: 0.067 0.140 0.051 -1.000 0.032 0.073
2025/05/17 13:36:26 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.0670  coco/bbox_mAP_50: 0.1400  coco/bbox_mAP_75: 0.0510  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0320  coco/bbox_mAP_l: 0.0730  data_time: 0.0016  time: 0.0718
2025/05/17 13:36:39 - mmengine - INFO - Epoch(train) [15][ 50/563]  base_lr: 1.5924e-01 lr: 1.5924e-01  eta: 0:37:33  time: 0.2528  data_time: 0.0048  memory: 5320  grad_norm: 0.5215  loss: 1.1275  loss_cls: 0.6583  loss_bbox: 0.4692
2025/05/17 13:36:52 - mmengine - INFO - Epoch(train) [15][100/563]  base_lr: 1.5923e-01 lr: 1.5923e-01  eta: 0:37:21  time: 0.2554  data_time: 0.0042  memory: 5486  grad_norm: 0.6307  loss: 1.3511  loss_cls: 0.6818  loss_bbox: 0.6692
2025/05/17 13:36:56 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:37:04 - mmengine - INFO - Epoch(train) [15][150/563]  base_lr: 1.5922e-01 lr: 1.5922e-01  eta: 0:37:08  time: 0.2519  data_time: 0.0041  memory: 5409  grad_norm: 0.6216  loss: 1.2444  loss_cls: 0.6752  loss_bbox: 0.5692
2025/05/17 13:37:17 - mmengine - INFO - Epoch(train) [15][200/563]  base_lr: 1.5921e-01 lr: 1.5921e-01  eta: 0:36:56  time: 0.2506  data_time: 0.0042  memory: 5409  grad_norm: 0.5008  loss: 1.1190  loss_cls: 0.6331  loss_bbox: 0.4859
2025/05/17 13:37:29 - mmengine - INFO - Epoch(train) [15][250/563]  base_lr: 1.5920e-01 lr: 1.5920e-01  eta: 0:36:43  time: 0.2515  data_time: 0.0043  memory: 5387  grad_norm: 0.4992  loss: 1.0575  loss_cls: 0.6019  loss_bbox: 0.4556
2025/05/17 13:37:42 - mmengine - INFO - Epoch(train) [15][300/563]  base_lr: 1.5919e-01 lr: 1.5919e-01  eta: 0:36:31  time: 0.2519  data_time: 0.0042  memory: 5346  grad_norm: 0.4850  loss: 1.0941  loss_cls: 0.6419  loss_bbox: 0.4521
2025/05/17 13:37:55 - mmengine - INFO - Epoch(train) [15][350/563]  base_lr: 1.5918e-01 lr: 1.5918e-01  eta: 0:36:18  time: 0.2519  data_time: 0.0041  memory: 5402  grad_norm: 0.5720  loss: 1.1415  loss_cls: 0.6195  loss_bbox: 0.5219
2025/05/17 13:38:07 - mmengine - INFO - Epoch(train) [15][400/563]  base_lr: 1.5917e-01 lr: 1.5917e-01  eta: 0:36:05  time: 0.2488  data_time: 0.0041  memory: 5466  grad_norm: 0.5750  loss: 1.2220  loss_cls: 0.6278  loss_bbox: 0.5942
2025/05/17 13:38:20 - mmengine - INFO - Epoch(train) [15][450/563]  base_lr: 1.5916e-01 lr: 1.5916e-01  eta: 0:35:53  time: 0.2507  data_time: 0.0041  memory: 5269  grad_norm: 0.8606  loss: 1.1621  loss_cls: 0.6396  loss_bbox: 0.5224
2025/05/17 13:38:32 - mmengine - INFO - Epoch(train) [15][500/563]  base_lr: 1.5915e-01 lr: 1.5915e-01  eta: 0:35:40  time: 0.2499  data_time: 0.0041  memory: 5352  grad_norm: 0.6334  loss: 1.2000  loss_cls: 0.6305  loss_bbox: 0.5695
2025/05/17 13:38:44 - mmengine - INFO - Epoch(train) [15][550/563]  base_lr: 1.5914e-01 lr: 1.5914e-01  eta: 0:35:27  time: 0.2497  data_time: 0.0042  memory: 5409  grad_norm: 0.4882  loss: 1.0843  loss_cls: 0.6563  loss_bbox: 0.4280
2025/05/17 13:38:48 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:38:52 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:38:53 - mmengine - INFO - bbox_mAP_copypaste: 0.088 0.163 0.081 -1.000 0.025 0.097
2025/05/17 13:38:53 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.0880  coco/bbox_mAP_50: 0.1630  coco/bbox_mAP_75: 0.0810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0250  coco/bbox_mAP_l: 0.0970  data_time: 0.0016  time: 0.0825
2025/05/17 13:38:53 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_13.pth is removed
2025/05/17 13:38:54 - mmengine - INFO - The best checkpoint with 0.0880 coco/bbox_mAP at 15 epoch is saved to best_coco_bbox_mAP_epoch_15.pth.
2025/05/17 13:39:07 - mmengine - INFO - Epoch(train) [16][ 50/563]  base_lr: 1.5913e-01 lr: 1.5913e-01  eta: 0:35:12  time: 0.2612  data_time: 0.0047  memory: 5483  grad_norm: 0.5671  loss: 1.2008  loss_cls: 0.6338  loss_bbox: 0.5671
2025/05/17 13:39:20 - mmengine - INFO - Epoch(train) [16][100/563]  base_lr: 1.5911e-01 lr: 1.5911e-01  eta: 0:34:59  time: 0.2509  data_time: 0.0042  memory: 5434  grad_norm: 0.5438  loss: 1.1105  loss_cls: 0.6130  loss_bbox: 0.4975
2025/05/17 13:39:32 - mmengine - INFO - Epoch(train) [16][150/563]  base_lr: 1.5910e-01 lr: 1.5910e-01  eta: 0:34:47  time: 0.2530  data_time: 0.0041  memory: 5475  grad_norm: 0.5497  loss: 1.0967  loss_cls: 0.6212  loss_bbox: 0.4755
2025/05/17 13:39:45 - mmengine - INFO - Epoch(train) [16][200/563]  base_lr: 1.5909e-01 lr: 1.5909e-01  eta: 0:34:34  time: 0.2509  data_time: 0.0041  memory: 5470  grad_norm: 0.5420  loss: 1.1415  loss_cls: 0.6355  loss_bbox: 0.5060
2025/05/17 13:39:58 - mmengine - INFO - Epoch(train) [16][250/563]  base_lr: 1.5908e-01 lr: 1.5908e-01  eta: 0:34:22  time: 0.2535  data_time: 0.0041  memory: 5356  grad_norm: 0.4778  loss: 1.0760  loss_cls: 0.6198  loss_bbox: 0.4563
2025/05/17 13:40:10 - mmengine - INFO - Epoch(train) [16][300/563]  base_lr: 1.5907e-01 lr: 1.5907e-01  eta: 0:34:09  time: 0.2521  data_time: 0.0042  memory: 5268  grad_norm: 0.4850  loss: 1.0580  loss_cls: 0.5794  loss_bbox: 0.4786
2025/05/17 13:40:23 - mmengine - INFO - Epoch(train) [16][350/563]  base_lr: 1.5906e-01 lr: 1.5906e-01  eta: 0:33:57  time: 0.2544  data_time: 0.0041  memory: 5419  grad_norm: 0.4921  loss: 1.0037  loss_cls: 0.5895  loss_bbox: 0.4143
2025/05/17 13:40:35 - mmengine - INFO - Epoch(train) [16][400/563]  base_lr: 1.5905e-01 lr: 1.5905e-01  eta: 0:33:44  time: 0.2489  data_time: 0.0042  memory: 5408  grad_norm: 0.5203  loss: 0.9871  loss_cls: 0.5870  loss_bbox: 0.4001
2025/05/17 13:40:48 - mmengine - INFO - Epoch(train) [16][450/563]  base_lr: 1.5904e-01 lr: 1.5904e-01  eta: 0:33:31  time: 0.2541  data_time: 0.0041  memory: 5295  grad_norm: 0.4961  loss: 1.1438  loss_cls: 0.6011  loss_bbox: 0.5426
2025/05/17 13:41:00 - mmengine - INFO - Epoch(train) [16][500/563]  base_lr: 1.5902e-01 lr: 1.5902e-01  eta: 0:33:19  time: 0.2480  data_time: 0.0043  memory: 5336  grad_norm: 0.5036  loss: 1.1062  loss_cls: 0.5884  loss_bbox: 0.5178
2025/05/17 13:41:13 - mmengine - INFO - Epoch(train) [16][550/563]  base_lr: 1.5901e-01 lr: 1.5901e-01  eta: 0:33:06  time: 0.2518  data_time: 0.0042  memory: 5295  grad_norm: 0.5619  loss: 1.0607  loss_cls: 0.6365  loss_bbox: 0.4242
2025/05/17 13:41:14 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:41:16 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:41:20 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:41:21 - mmengine - INFO - bbox_mAP_copypaste: 0.093 0.170 0.089 -1.000 0.018 0.103
2025/05/17 13:41:21 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.0930  coco/bbox_mAP_50: 0.1700  coco/bbox_mAP_75: 0.0890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0180  coco/bbox_mAP_l: 0.1030  data_time: 0.0014  time: 0.0707
2025/05/17 13:41:21 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_15.pth is removed
2025/05/17 13:41:22 - mmengine - INFO - The best checkpoint with 0.0930 coco/bbox_mAP at 16 epoch is saved to best_coco_bbox_mAP_epoch_16.pth.
2025/05/17 13:41:35 - mmengine - INFO - Epoch(train) [17][ 50/563]  base_lr: 1.5900e-01 lr: 1.5900e-01  eta: 0:32:51  time: 0.2595  data_time: 0.0048  memory: 5485  grad_norm: 0.4921  loss: 0.9755  loss_cls: 0.5588  loss_bbox: 0.4167
2025/05/17 13:41:48 - mmengine - INFO - Epoch(train) [17][100/563]  base_lr: 1.5899e-01 lr: 1.5899e-01  eta: 0:32:38  time: 0.2540  data_time: 0.0041  memory: 5315  grad_norm: 0.4411  loss: 1.0452  loss_cls: 0.6108  loss_bbox: 0.4343
2025/05/17 13:42:00 - mmengine - INFO - Epoch(train) [17][150/563]  base_lr: 1.5897e-01 lr: 1.5897e-01  eta: 0:32:26  time: 0.2515  data_time: 0.0041  memory: 5383  grad_norm: 0.5271  loss: 1.0409  loss_cls: 0.5946  loss_bbox: 0.4463
2025/05/17 13:42:13 - mmengine - INFO - Epoch(train) [17][200/563]  base_lr: 1.5896e-01 lr: 1.5896e-01  eta: 0:32:13  time: 0.2470  data_time: 0.0042  memory: 5309  grad_norm: 0.5184  loss: 1.0738  loss_cls: 0.6108  loss_bbox: 0.4630
2025/05/17 13:42:25 - mmengine - INFO - Epoch(train) [17][250/563]  base_lr: 1.5895e-01 lr: 1.5895e-01  eta: 0:32:00  time: 0.2558  data_time: 0.0043  memory: 5387  grad_norm: 0.6332  loss: 1.2463  loss_cls: 0.5955  loss_bbox: 0.6508
2025/05/17 13:42:38 - mmengine - INFO - Epoch(train) [17][300/563]  base_lr: 1.5894e-01 lr: 1.5894e-01  eta: 0:31:48  time: 0.2500  data_time: 0.0042  memory: 5409  grad_norm: 0.5603  loss: 1.1135  loss_cls: 0.5923  loss_bbox: 0.5213
2025/05/17 13:42:50 - mmengine - INFO - Epoch(train) [17][350/563]  base_lr: 1.5893e-01 lr: 1.5893e-01  eta: 0:31:35  time: 0.2493  data_time: 0.0042  memory: 5316  grad_norm: 0.5372  loss: 1.2138  loss_cls: 0.6653  loss_bbox: 0.5485
2025/05/17 13:43:03 - mmengine - INFO - Epoch(train) [17][400/563]  base_lr: 1.5891e-01 lr: 1.5891e-01  eta: 0:31:23  time: 0.2542  data_time: 0.0041  memory: 5402  grad_norm: 0.6074  loss: 1.1880  loss_cls: 0.6124  loss_bbox: 0.5756
2025/05/17 13:43:16 - mmengine - INFO - Epoch(train) [17][450/563]  base_lr: 1.5890e-01 lr: 1.5890e-01  eta: 0:31:10  time: 0.2496  data_time: 0.0041  memory: 5464  grad_norm: 0.6997  loss: 1.1626  loss_cls: 0.5808  loss_bbox: 0.5818
2025/05/17 13:43:28 - mmengine - INFO - Epoch(train) [17][500/563]  base_lr: 1.5889e-01 lr: 1.5889e-01  eta: 0:30:57  time: 0.2491  data_time: 0.0041  memory: 5433  grad_norm: 0.5786  loss: 1.2564  loss_cls: 0.5858  loss_bbox: 0.6707
2025/05/17 13:43:41 - mmengine - INFO - Epoch(train) [17][550/563]  base_lr: 1.5888e-01 lr: 1.5888e-01  eta: 0:30:45  time: 0.2513  data_time: 0.0041  memory: 5483  grad_norm: 0.4619  loss: 1.0100  loss_cls: 0.5664  loss_bbox: 0.4436
2025/05/17 13:43:44 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:43:48 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:43:49 - mmengine - INFO - bbox_mAP_copypaste: 0.093 0.171 0.092 -1.000 0.030 0.102
2025/05/17 13:43:49 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.0930  coco/bbox_mAP_50: 0.1710  coco/bbox_mAP_75: 0.0920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0300  coco/bbox_mAP_l: 0.1020  data_time: 0.0016  time: 0.0732
2025/05/17 13:44:01 - mmengine - INFO - Epoch(train) [18][ 50/563]  base_lr: 1.5886e-01 lr: 1.5886e-01  eta: 0:30:29  time: 0.2516  data_time: 0.0048  memory: 5397  grad_norm: 0.5993  loss: 1.1688  loss_cls: 0.6015  loss_bbox: 0.5673
2025/05/17 13:44:14 - mmengine - INFO - Epoch(train) [18][100/563]  base_lr: 1.5885e-01 lr: 1.5885e-01  eta: 0:30:16  time: 0.2505  data_time: 0.0041  memory: 5316  grad_norm: 0.5392  loss: 1.1492  loss_cls: 0.6409  loss_bbox: 0.5083
2025/05/17 13:44:26 - mmengine - INFO - Epoch(train) [18][150/563]  base_lr: 1.5883e-01 lr: 1.5883e-01  eta: 0:30:03  time: 0.2506  data_time: 0.0041  memory: 5342  grad_norm: 0.4379  loss: 1.0469  loss_cls: 0.5826  loss_bbox: 0.4643
2025/05/17 13:44:39 - mmengine - INFO - Epoch(train) [18][200/563]  base_lr: 1.5882e-01 lr: 1.5882e-01  eta: 0:29:51  time: 0.2537  data_time: 0.0042  memory: 5404  grad_norm: 0.5446  loss: 1.1612  loss_cls: 0.5928  loss_bbox: 0.5685
2025/05/17 13:44:52 - mmengine - INFO - Epoch(train) [18][250/563]  base_lr: 1.5881e-01 lr: 1.5881e-01  eta: 0:29:38  time: 0.2505  data_time: 0.0040  memory: 5198  grad_norm: 0.4909  loss: 0.9694  loss_cls: 0.5775  loss_bbox: 0.3919
2025/05/17 13:45:04 - mmengine - INFO - Epoch(train) [18][300/563]  base_lr: 1.5880e-01 lr: 1.5880e-01  eta: 0:29:26  time: 0.2536  data_time: 0.0042  memory: 5404  grad_norm: 0.5606  loss: 1.0727  loss_cls: 0.5740  loss_bbox: 0.4987
2025/05/17 13:45:17 - mmengine - INFO - Epoch(train) [18][350/563]  base_lr: 1.5878e-01 lr: 1.5878e-01  eta: 0:29:13  time: 0.2554  data_time: 0.0042  memory: 5387  grad_norm: 0.7593  loss: 1.1036  loss_cls: 0.5686  loss_bbox: 0.5350
2025/05/17 13:45:30 - mmengine - INFO - Epoch(train) [18][400/563]  base_lr: 1.5877e-01 lr: 1.5877e-01  eta: 0:29:01  time: 0.2505  data_time: 0.0041  memory: 5466  grad_norm: 0.5607  loss: 1.1261  loss_cls: 0.5985  loss_bbox: 0.5276
2025/05/17 13:45:37 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:45:42 - mmengine - INFO - Epoch(train) [18][450/563]  base_lr: 1.5876e-01 lr: 1.5876e-01  eta: 0:28:48  time: 0.2482  data_time: 0.0042  memory: 5419  grad_norm: 0.6011  loss: 1.1275  loss_cls: 0.5763  loss_bbox: 0.5511
2025/05/17 13:45:55 - mmengine - INFO - Epoch(train) [18][500/563]  base_lr: 1.5874e-01 lr: 1.5874e-01  eta: 0:28:36  time: 0.2557  data_time: 0.0041  memory: 5326  grad_norm: 0.5190  loss: 1.0759  loss_cls: 0.5887  loss_bbox: 0.4872
2025/05/17 13:46:07 - mmengine - INFO - Epoch(train) [18][550/563]  base_lr: 1.5873e-01 lr: 1.5873e-01  eta: 0:28:23  time: 0.2465  data_time: 0.0043  memory: 5294  grad_norm: 0.5079  loss: 1.0157  loss_cls: 0.5962  loss_bbox: 0.4195
2025/05/17 13:46:10 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:46:15 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:46:16 - mmengine - INFO - bbox_mAP_copypaste: 0.075 0.136 0.074 -1.000 0.024 0.082
2025/05/17 13:46:16 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.0750  coco/bbox_mAP_50: 0.1360  coco/bbox_mAP_75: 0.0740  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0240  coco/bbox_mAP_l: 0.0820  data_time: 0.0016  time: 0.0845
2025/05/17 13:46:28 - mmengine - INFO - Epoch(train) [19][ 50/563]  base_lr: 1.5871e-01 lr: 1.5871e-01  eta: 0:28:07  time: 0.2478  data_time: 0.0048  memory: 5387  grad_norm: 0.5127  loss: 1.0093  loss_cls: 0.5791  loss_bbox: 0.4302
2025/05/17 13:46:41 - mmengine - INFO - Epoch(train) [19][100/563]  base_lr: 1.5870e-01 lr: 1.5870e-01  eta: 0:27:54  time: 0.2512  data_time: 0.0042  memory: 5397  grad_norm: 0.5110  loss: 1.0491  loss_cls: 0.5922  loss_bbox: 0.4569
2025/05/17 13:46:54 - mmengine - INFO - Epoch(train) [19][150/563]  base_lr: 1.5869e-01 lr: 1.5869e-01  eta: 0:27:42  time: 0.2528  data_time: 0.0042  memory: 5409  grad_norm: 0.5042  loss: 1.0577  loss_cls: 0.5783  loss_bbox: 0.4794
2025/05/17 13:47:06 - mmengine - INFO - Epoch(train) [19][200/563]  base_lr: 1.5867e-01 lr: 1.5867e-01  eta: 0:27:29  time: 0.2522  data_time: 0.0042  memory: 5465  grad_norm: 0.4861  loss: 1.0184  loss_cls: 0.5706  loss_bbox: 0.4477
2025/05/17 13:47:19 - mmengine - INFO - Epoch(train) [19][250/563]  base_lr: 1.5866e-01 lr: 1.5866e-01  eta: 0:27:17  time: 0.2542  data_time: 0.0042  memory: 5408  grad_norm: 0.6236  loss: 1.1914  loss_cls: 0.5833  loss_bbox: 0.6081
2025/05/17 13:47:31 - mmengine - INFO - Epoch(train) [19][300/563]  base_lr: 1.5865e-01 lr: 1.5865e-01  eta: 0:27:04  time: 0.2469  data_time: 0.0041  memory: 5404  grad_norm: 0.4582  loss: 0.9663  loss_cls: 0.5795  loss_bbox: 0.3868
2025/05/17 13:47:44 - mmengine - INFO - Epoch(train) [19][350/563]  base_lr: 1.5863e-01 lr: 1.5863e-01  eta: 0:26:51  time: 0.2487  data_time: 0.0042  memory: 5368  grad_norm: 0.5587  loss: 1.0765  loss_cls: 0.5626  loss_bbox: 0.5138
2025/05/17 13:47:56 - mmengine - INFO - Epoch(train) [19][400/563]  base_lr: 1.5862e-01 lr: 1.5862e-01  eta: 0:26:39  time: 0.2509  data_time: 0.0042  memory: 5268  grad_norm: 0.5490  loss: 1.0602  loss_cls: 0.5812  loss_bbox: 0.4790
2025/05/17 13:48:09 - mmengine - INFO - Epoch(train) [19][450/563]  base_lr: 1.5861e-01 lr: 1.5861e-01  eta: 0:26:26  time: 0.2465  data_time: 0.0042  memory: 5316  grad_norm: 0.5395  loss: 1.0237  loss_cls: 0.5675  loss_bbox: 0.4562
2025/05/17 13:48:21 - mmengine - INFO - Epoch(train) [19][500/563]  base_lr: 1.5859e-01 lr: 1.5859e-01  eta: 0:26:13  time: 0.2512  data_time: 0.0041  memory: 5433  grad_norm: 0.6118  loss: 1.0550  loss_cls: 0.5742  loss_bbox: 0.4808
2025/05/17 13:48:34 - mmengine - INFO - Epoch(train) [19][550/563]  base_lr: 1.5858e-01 lr: 1.5858e-01  eta: 0:26:01  time: 0.2489  data_time: 0.0041  memory: 5475  grad_norm: 0.6553  loss: 1.1997  loss_cls: 0.6295  loss_bbox: 0.5702
2025/05/17 13:48:37 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:48:41 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:48:42 - mmengine - INFO - bbox_mAP_copypaste: 0.091 0.165 0.089 -1.000 0.029 0.100
2025/05/17 13:48:42 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.0910  coco/bbox_mAP_50: 0.1650  coco/bbox_mAP_75: 0.0890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0290  coco/bbox_mAP_l: 0.1000  data_time: 0.0015  time: 0.0712
2025/05/17 13:48:54 - mmengine - INFO - Epoch(train) [20][ 50/563]  base_lr: 1.5856e-01 lr: 1.5856e-01  eta: 0:25:45  time: 0.2455  data_time: 0.0047  memory: 5402  grad_norm: 0.5157  loss: 1.0758  loss_cls: 0.6006  loss_bbox: 0.4752
2025/05/17 13:49:07 - mmengine - INFO - Epoch(train) [20][100/563]  base_lr: 1.5855e-01 lr: 1.5855e-01  eta: 0:25:32  time: 0.2568  data_time: 0.0041  memory: 5466  grad_norm: 0.5026  loss: 1.0479  loss_cls: 0.5760  loss_bbox: 0.4720
2025/05/17 13:49:19 - mmengine - INFO - Epoch(train) [20][150/563]  base_lr: 1.5853e-01 lr: 1.5853e-01  eta: 0:25:20  time: 0.2484  data_time: 0.0041  memory: 5419  grad_norm: 0.6395  loss: 1.1613  loss_cls: 0.5889  loss_bbox: 0.5724
2025/05/17 13:49:32 - mmengine - INFO - Epoch(train) [20][200/563]  base_lr: 1.5852e-01 lr: 1.5852e-01  eta: 0:25:07  time: 0.2547  data_time: 0.0043  memory: 5466  grad_norm: 0.5304  loss: 1.0669  loss_cls: 0.5648  loss_bbox: 0.5021
2025/05/17 13:49:45 - mmengine - INFO - Epoch(train) [20][250/563]  base_lr: 1.5850e-01 lr: 1.5850e-01  eta: 0:24:54  time: 0.2487  data_time: 0.0042  memory: 5435  grad_norm: 0.5455  loss: 1.0950  loss_cls: 0.6272  loss_bbox: 0.4678
2025/05/17 13:49:57 - mmengine - INFO - Epoch(train) [20][300/563]  base_lr: 1.5849e-01 lr: 1.5849e-01  eta: 0:24:42  time: 0.2522  data_time: 0.0041  memory: 5326  grad_norm: 0.5582  loss: 1.1074  loss_cls: 0.5432  loss_bbox: 0.5642
2025/05/17 13:49:58 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:50:10 - mmengine - INFO - Epoch(train) [20][350/563]  base_lr: 1.5847e-01 lr: 1.5847e-01  eta: 0:24:29  time: 0.2473  data_time: 0.0042  memory: 5263  grad_norm: 0.4816  loss: 0.9303  loss_cls: 0.5328  loss_bbox: 0.3976
2025/05/17 13:50:22 - mmengine - INFO - Epoch(train) [20][400/563]  base_lr: 1.5846e-01 lr: 1.5846e-01  eta: 0:24:17  time: 0.2522  data_time: 0.0043  memory: 5368  grad_norm: 0.5694  loss: 1.1628  loss_cls: 0.5694  loss_bbox: 0.5934
2025/05/17 13:50:35 - mmengine - INFO - Epoch(train) [20][450/563]  base_lr: 1.5844e-01 lr: 1.5844e-01  eta: 0:24:04  time: 0.2497  data_time: 0.0041  memory: 5280  grad_norm: 0.6407  loss: 1.1047  loss_cls: 0.6237  loss_bbox: 0.4810
2025/05/17 13:50:47 - mmengine - INFO - Epoch(train) [20][500/563]  base_lr: 1.5843e-01 lr: 1.5843e-01  eta: 0:23:51  time: 0.2541  data_time: 0.0042  memory: 5387  grad_norm: 0.5820  loss: 1.0605  loss_cls: 0.5981  loss_bbox: 0.4624
2025/05/17 13:51:00 - mmengine - INFO - Epoch(train) [20][550/563]  base_lr: 1.5842e-01 lr: 1.5842e-01  eta: 0:23:39  time: 0.2516  data_time: 0.0042  memory: 5388  grad_norm: 0.5662  loss: 1.0489  loss_cls: 0.5899  loss_bbox: 0.4590
2025/05/17 13:51:03 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:51:07 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:51:09 - mmengine - INFO - bbox_mAP_copypaste: 0.103 0.181 0.106 -1.000 0.031 0.114
2025/05/17 13:51:09 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.1030  coco/bbox_mAP_50: 0.1810  coco/bbox_mAP_75: 0.1060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0310  coco/bbox_mAP_l: 0.1140  data_time: 0.0015  time: 0.0807
2025/05/17 13:51:09 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_16.pth is removed
2025/05/17 13:51:10 - mmengine - INFO - The best checkpoint with 0.1030 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2025/05/17 13:51:22 - mmengine - INFO - Epoch(train) [21][ 50/563]  base_lr: 1.5840e-01 lr: 1.5840e-01  eta: 0:23:23  time: 0.2572  data_time: 0.0049  memory: 5408  grad_norm: 0.6104  loss: 1.1007  loss_cls: 0.5647  loss_bbox: 0.5360
2025/05/17 13:51:35 - mmengine - INFO - Epoch(train) [21][100/563]  base_lr: 1.5838e-01 lr: 1.5838e-01  eta: 0:23:11  time: 0.2550  data_time: 0.0042  memory: 5486  grad_norm: 0.5127  loss: 1.0088  loss_cls: 0.5647  loss_bbox: 0.4442
2025/05/17 13:51:48 - mmengine - INFO - Epoch(train) [21][150/563]  base_lr: 1.5837e-01 lr: 1.5837e-01  eta: 0:22:58  time: 0.2515  data_time: 0.0042  memory: 5483  grad_norm: 0.5314  loss: 0.9456  loss_cls: 0.5276  loss_bbox: 0.4179
2025/05/17 13:52:00 - mmengine - INFO - Epoch(train) [21][200/563]  base_lr: 1.5835e-01 lr: 1.5835e-01  eta: 0:22:46  time: 0.2538  data_time: 0.0041  memory: 5403  grad_norm: 0.7795  loss: 1.1036  loss_cls: 0.5609  loss_bbox: 0.5428
2025/05/17 13:52:13 - mmengine - INFO - Epoch(train) [21][250/563]  base_lr: 1.5834e-01 lr: 1.5834e-01  eta: 0:22:33  time: 0.2462  data_time: 0.0042  memory: 5455  grad_norm: 0.6338  loss: 1.1116  loss_cls: 0.6439  loss_bbox: 0.4677
2025/05/17 13:52:25 - mmengine - INFO - Epoch(train) [21][300/563]  base_lr: 1.5832e-01 lr: 1.5832e-01  eta: 0:22:20  time: 0.2512  data_time: 0.0042  memory: 5269  grad_norm: 0.4582  loss: 1.0106  loss_cls: 0.5759  loss_bbox: 0.4347
2025/05/17 13:52:38 - mmengine - INFO - Epoch(train) [21][350/563]  base_lr: 1.5831e-01 lr: 1.5831e-01  eta: 0:22:08  time: 0.2453  data_time: 0.0041  memory: 5366  grad_norm: 0.5164  loss: 1.0551  loss_cls: 0.5816  loss_bbox: 0.4735
2025/05/17 13:52:50 - mmengine - INFO - Epoch(train) [21][400/563]  base_lr: 1.5829e-01 lr: 1.5829e-01  eta: 0:21:55  time: 0.2533  data_time: 0.0042  memory: 5402  grad_norm: 0.4653  loss: 0.9369  loss_cls: 0.5513  loss_bbox: 0.3855
2025/05/17 13:53:03 - mmengine - INFO - Epoch(train) [21][450/563]  base_lr: 1.5828e-01 lr: 1.5828e-01  eta: 0:21:42  time: 0.2462  data_time: 0.0041  memory: 5289  grad_norm: 0.4841  loss: 0.9016  loss_cls: 0.5532  loss_bbox: 0.3484
2025/05/17 13:53:15 - mmengine - INFO - Epoch(train) [21][500/563]  base_lr: 1.5826e-01 lr: 1.5826e-01  eta: 0:21:30  time: 0.2573  data_time: 0.0041  memory: 5352  grad_norm: 0.6350  loss: 1.1587  loss_cls: 0.5824  loss_bbox: 0.5763
2025/05/17 13:53:28 - mmengine - INFO - Epoch(train) [21][550/563]  base_lr: 1.5824e-01 lr: 1.5824e-01  eta: 0:21:17  time: 0.2495  data_time: 0.0042  memory: 5387  grad_norm: 0.5684  loss: 1.0720  loss_cls: 0.5731  loss_bbox: 0.4989
2025/05/17 13:53:31 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:53:35 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:53:36 - mmengine - INFO - bbox_mAP_copypaste: 0.101 0.180 0.101 -1.000 0.048 0.109
2025/05/17 13:53:37 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.1010  coco/bbox_mAP_50: 0.1800  coco/bbox_mAP_75: 0.1010  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0480  coco/bbox_mAP_l: 0.1090  data_time: 0.0016  time: 0.0787
2025/05/17 13:53:49 - mmengine - INFO - Epoch(train) [22][ 50/563]  base_lr: 1.5822e-01 lr: 1.5822e-01  eta: 0:21:01  time: 0.2490  data_time: 0.0049  memory: 5321  grad_norm: 0.6606  loss: 1.1508  loss_cls: 0.5773  loss_bbox: 0.5735
2025/05/17 13:54:02 - mmengine - INFO - Epoch(train) [22][100/563]  base_lr: 1.5821e-01 lr: 1.5821e-01  eta: 0:20:49  time: 0.2546  data_time: 0.0043  memory: 5367  grad_norm: 0.5268  loss: 1.0069  loss_cls: 0.5805  loss_bbox: 0.4264
2025/05/17 13:54:14 - mmengine - INFO - Epoch(train) [22][150/563]  base_lr: 1.5819e-01 lr: 1.5819e-01  eta: 0:20:36  time: 0.2496  data_time: 0.0041  memory: 5486  grad_norm: 0.5247  loss: 1.0341  loss_cls: 0.5502  loss_bbox: 0.4839
2025/05/17 13:54:21 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:54:27 - mmengine - INFO - Epoch(train) [22][200/563]  base_lr: 1.5818e-01 lr: 1.5818e-01  eta: 0:20:24  time: 0.2550  data_time: 0.0042  memory: 5454  grad_norm: 0.5463  loss: 1.0156  loss_cls: 0.5677  loss_bbox: 0.4479
2025/05/17 13:54:40 - mmengine - INFO - Epoch(train) [22][250/563]  base_lr: 1.5816e-01 lr: 1.5816e-01  eta: 0:20:11  time: 0.2514  data_time: 0.0042  memory: 5433  grad_norm: 0.5102  loss: 0.9788  loss_cls: 0.5367  loss_bbox: 0.4421
2025/05/17 13:54:52 - mmengine - INFO - Epoch(train) [22][300/563]  base_lr: 1.5815e-01 lr: 1.5815e-01  eta: 0:19:59  time: 0.2533  data_time: 0.0042  memory: 5408  grad_norm: 0.5943  loss: 1.0581  loss_cls: 0.5681  loss_bbox: 0.4900
2025/05/17 13:55:05 - mmengine - INFO - Epoch(train) [22][350/563]  base_lr: 1.5813e-01 lr: 1.5813e-01  eta: 0:19:46  time: 0.2480  data_time: 0.0041  memory: 5340  grad_norm: 0.5135  loss: 0.8992  loss_cls: 0.5377  loss_bbox: 0.3615
2025/05/17 13:55:17 - mmengine - INFO - Epoch(train) [22][400/563]  base_lr: 1.5811e-01 lr: 1.5811e-01  eta: 0:19:33  time: 0.2515  data_time: 0.0041  memory: 5388  grad_norm: 0.5042  loss: 0.9444  loss_cls: 0.5439  loss_bbox: 0.4005
2025/05/17 13:55:30 - mmengine - INFO - Epoch(train) [22][450/563]  base_lr: 1.5810e-01 lr: 1.5810e-01  eta: 0:19:21  time: 0.2471  data_time: 0.0042  memory: 5397  grad_norm: 0.6455  loss: 1.0393  loss_cls: 0.5249  loss_bbox: 0.5143
2025/05/17 13:55:42 - mmengine - INFO - Epoch(train) [22][500/563]  base_lr: 1.5808e-01 lr: 1.5808e-01  eta: 0:19:08  time: 0.2553  data_time: 0.0042  memory: 5242  grad_norm: 0.5582  loss: 0.9267  loss_cls: 0.5325  loss_bbox: 0.3943
2025/05/17 13:55:55 - mmengine - INFO - Epoch(train) [22][550/563]  base_lr: 1.5807e-01 lr: 1.5807e-01  eta: 0:18:56  time: 0.2496  data_time: 0.0042  memory: 5387  grad_norm: 0.4881  loss: 0.9428  loss_cls: 0.5319  loss_bbox: 0.4109
2025/05/17 13:55:58 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:56:02 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:56:03 - mmengine - INFO - bbox_mAP_copypaste: 0.104 0.183 0.106 -1.000 0.047 0.113
2025/05/17 13:56:03 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.1040  coco/bbox_mAP_50: 0.1830  coco/bbox_mAP_75: 0.1060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0470  coco/bbox_mAP_l: 0.1130  data_time: 0.0015  time: 0.0765
2025/05/17 13:56:03 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_20.pth is removed
2025/05/17 13:56:04 - mmengine - INFO - The best checkpoint with 0.1040 coco/bbox_mAP at 22 epoch is saved to best_coco_bbox_mAP_epoch_22.pth.
2025/05/17 13:56:17 - mmengine - INFO - Epoch(train) [23][ 50/563]  base_lr: 1.5804e-01 lr: 1.5804e-01  eta: 0:18:40  time: 0.2559  data_time: 0.0048  memory: 5465  grad_norm: 0.5122  loss: 0.8910  loss_cls: 0.5378  loss_bbox: 0.3532
2025/05/17 13:56:29 - mmengine - INFO - Epoch(train) [23][100/563]  base_lr: 1.5803e-01 lr: 1.5803e-01  eta: 0:18:27  time: 0.2527  data_time: 0.0043  memory: 5326  grad_norm: 0.5048  loss: 0.9240  loss_cls: 0.5392  loss_bbox: 0.3849
2025/05/17 13:56:42 - mmengine - INFO - Epoch(train) [23][150/563]  base_lr: 1.5801e-01 lr: 1.5801e-01  eta: 0:18:15  time: 0.2469  data_time: 0.0041  memory: 5295  grad_norm: 0.5075  loss: 0.9487  loss_cls: 0.5527  loss_bbox: 0.3961
2025/05/17 13:56:54 - mmengine - INFO - Epoch(train) [23][200/563]  base_lr: 1.5799e-01 lr: 1.5799e-01  eta: 0:18:02  time: 0.2534  data_time: 0.0042  memory: 5387  grad_norm: 0.5648  loss: 0.9885  loss_cls: 0.5769  loss_bbox: 0.4116
2025/05/17 13:57:07 - mmengine - INFO - Epoch(train) [23][250/563]  base_lr: 1.5798e-01 lr: 1.5798e-01  eta: 0:17:50  time: 0.2509  data_time: 0.0041  memory: 5455  grad_norm: 0.5596  loss: 0.9448  loss_cls: 0.5310  loss_bbox: 0.4138
2025/05/17 13:57:20 - mmengine - INFO - Epoch(train) [23][300/563]  base_lr: 1.5796e-01 lr: 1.5796e-01  eta: 0:17:37  time: 0.2528  data_time: 0.0041  memory: 5486  grad_norm: 0.7226  loss: 1.1070  loss_cls: 0.5926  loss_bbox: 0.5144
2025/05/17 13:57:32 - mmengine - INFO - Epoch(train) [23][350/563]  base_lr: 1.5794e-01 lr: 1.5794e-01  eta: 0:17:24  time: 0.2462  data_time: 0.0041  memory: 5325  grad_norm: 0.5183  loss: 0.9616  loss_cls: 0.5128  loss_bbox: 0.4488
2025/05/17 13:57:45 - mmengine - INFO - Epoch(train) [23][400/563]  base_lr: 1.5793e-01 lr: 1.5793e-01  eta: 0:17:12  time: 0.2521  data_time: 0.0043  memory: 5469  grad_norm: 0.5719  loss: 0.9828  loss_cls: 0.5214  loss_bbox: 0.4614
2025/05/17 13:57:57 - mmengine - INFO - Epoch(train) [23][450/563]  base_lr: 1.5791e-01 lr: 1.5791e-01  eta: 0:16:59  time: 0.2424  data_time: 0.0041  memory: 5187  grad_norm: 0.6285  loss: 1.0093  loss_cls: 0.5362  loss_bbox: 0.4731
2025/05/17 13:58:09 - mmengine - INFO - Epoch(train) [23][500/563]  base_lr: 1.5789e-01 lr: 1.5789e-01  eta: 0:16:47  time: 0.2553  data_time: 0.0043  memory: 5409  grad_norm: 0.6433  loss: 1.0510  loss_cls: 0.5473  loss_bbox: 0.5036
2025/05/17 13:58:22 - mmengine - INFO - Epoch(train) [23][550/563]  base_lr: 1.5788e-01 lr: 1.5788e-01  eta: 0:16:34  time: 0.2520  data_time: 0.0042  memory: 5402  grad_norm: 0.6485  loss: 1.0924  loss_cls: 0.5739  loss_bbox: 0.5184
2025/05/17 13:58:25 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:58:29 - mmengine - INFO - Evaluating bbox...
2025/05/17 13:58:30 - mmengine - INFO - bbox_mAP_copypaste: 0.103 0.182 0.106 -1.000 0.038 0.113
2025/05/17 13:58:30 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.1030  coco/bbox_mAP_50: 0.1820  coco/bbox_mAP_75: 0.1060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0380  coco/bbox_mAP_l: 0.1130  data_time: 0.0016  time: 0.0744
2025/05/17 13:58:43 - mmengine - INFO - Epoch(train) [24][ 50/563]  base_lr: 1.5786e-01 lr: 1.5786e-01  eta: 0:16:18  time: 0.2520  data_time: 0.0049  memory: 5485  grad_norm: 0.5452  loss: 0.9957  loss_cls: 0.5638  loss_bbox: 0.4319
2025/05/17 13:58:43 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 13:58:56 - mmengine - INFO - Epoch(train) [24][100/563]  base_lr: 1.5784e-01 lr: 1.5784e-01  eta: 0:16:06  time: 0.2544  data_time: 0.0042  memory: 5388  grad_norm: 0.5435  loss: 0.9973  loss_cls: 0.5341  loss_bbox: 0.4631
2025/05/17 13:59:08 - mmengine - INFO - Epoch(train) [24][150/563]  base_lr: 1.5782e-01 lr: 1.5782e-01  eta: 0:15:53  time: 0.2553  data_time: 0.0041  memory: 5347  grad_norm: 0.5690  loss: 1.0649  loss_cls: 0.5414  loss_bbox: 0.5235
2025/05/17 13:59:21 - mmengine - INFO - Epoch(train) [24][200/563]  base_lr: 1.5780e-01 lr: 1.5780e-01  eta: 0:15:41  time: 0.2520  data_time: 0.0041  memory: 5402  grad_norm: 0.6187  loss: 1.1062  loss_cls: 0.5712  loss_bbox: 0.5350
2025/05/17 13:59:34 - mmengine - INFO - Epoch(train) [24][250/563]  base_lr: 1.5779e-01 lr: 1.5779e-01  eta: 0:15:28  time: 0.2514  data_time: 0.0042  memory: 5336  grad_norm: 0.5594  loss: 0.9866  loss_cls: 0.5597  loss_bbox: 0.4269
2025/05/17 13:59:46 - mmengine - INFO - Epoch(train) [24][300/563]  base_lr: 1.5777e-01 lr: 1.5777e-01  eta: 0:15:15  time: 0.2544  data_time: 0.0042  memory: 5403  grad_norm: 0.5192  loss: 0.9566  loss_cls: 0.5372  loss_bbox: 0.4194
2025/05/17 13:59:59 - mmengine - INFO - Epoch(train) [24][350/563]  base_lr: 1.5775e-01 lr: 1.5775e-01  eta: 0:15:03  time: 0.2541  data_time: 0.0042  memory: 5483  grad_norm: 0.5229  loss: 0.9059  loss_cls: 0.5280  loss_bbox: 0.3778
2025/05/17 14:00:12 - mmengine - INFO - Epoch(train) [24][400/563]  base_lr: 1.5773e-01 lr: 1.5773e-01  eta: 0:14:50  time: 0.2565  data_time: 0.0042  memory: 5321  grad_norm: 0.5418  loss: 0.9246  loss_cls: 0.4985  loss_bbox: 0.4261
2025/05/17 14:00:24 - mmengine - INFO - Epoch(train) [24][450/563]  base_lr: 1.5772e-01 lr: 1.5772e-01  eta: 0:14:38  time: 0.2485  data_time: 0.0042  memory: 5326  grad_norm: 0.5571  loss: 0.9994  loss_cls: 0.5358  loss_bbox: 0.4636
2025/05/17 14:00:37 - mmengine - INFO - Epoch(train) [24][500/563]  base_lr: 1.5770e-01 lr: 1.5770e-01  eta: 0:14:25  time: 0.2515  data_time: 0.0042  memory: 5471  grad_norm: 0.5007  loss: 0.9049  loss_cls: 0.5279  loss_bbox: 0.3770
2025/05/17 14:00:49 - mmengine - INFO - Epoch(train) [24][550/563]  base_lr: 1.5768e-01 lr: 1.5768e-01  eta: 0:14:13  time: 0.2474  data_time: 0.0042  memory: 5382  grad_norm: 0.6028  loss: 0.9526  loss_cls: 0.5211  loss_bbox: 0.4315
2025/05/17 14:00:53 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:00:56 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:00:58 - mmengine - INFO - bbox_mAP_copypaste: 0.107 0.189 0.109 -1.000 0.048 0.116
2025/05/17 14:00:58 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.1070  coco/bbox_mAP_50: 0.1890  coco/bbox_mAP_75: 0.1090  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0480  coco/bbox_mAP_l: 0.1160  data_time: 0.0016  time: 0.0731
2025/05/17 14:00:58 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\efficientdet\best_coco_bbox_mAP_epoch_22.pth is removed
2025/05/17 14:00:59 - mmengine - INFO - The best checkpoint with 0.1070 coco/bbox_mAP at 24 epoch is saved to best_coco_bbox_mAP_epoch_24.pth.
2025/05/17 14:01:11 - mmengine - INFO - Epoch(train) [25][ 50/563]  base_lr: 1.5766e-01 lr: 1.5766e-01  eta: 0:13:57  time: 0.2533  data_time: 0.0050  memory: 5486  grad_norm: 0.7207  loss: 1.1209  loss_cls: 0.6578  loss_bbox: 0.4631
2025/05/17 14:01:24 - mmengine - INFO - Epoch(train) [25][100/563]  base_lr: 1.5764e-01 lr: 1.5764e-01  eta: 0:13:44  time: 0.2528  data_time: 0.0042  memory: 5471  grad_norm: 0.4686  loss: 1.1310  loss_cls: 0.7086  loss_bbox: 0.4223
2025/05/17 14:01:36 - mmengine - INFO - Epoch(train) [25][150/563]  base_lr: 1.5762e-01 lr: 1.5762e-01  eta: 0:13:32  time: 0.2484  data_time: 0.0042  memory: 5382  grad_norm: 0.5605  loss: 1.1145  loss_cls: 0.6234  loss_bbox: 0.4912
2025/05/17 14:01:49 - mmengine - INFO - Epoch(train) [25][200/563]  base_lr: 1.5760e-01 lr: 1.5760e-01  eta: 0:13:19  time: 0.2478  data_time: 0.0041  memory: 5342  grad_norm: 0.5228  loss: 1.0287  loss_cls: 0.5653  loss_bbox: 0.4635
2025/05/17 14:02:01 - mmengine - INFO - Epoch(train) [25][250/563]  base_lr: 1.5759e-01 lr: 1.5759e-01  eta: 0:13:06  time: 0.2485  data_time: 0.0041  memory: 5476  grad_norm: 0.5436  loss: 0.9580  loss_cls: 0.5645  loss_bbox: 0.3935
2025/05/17 14:02:14 - mmengine - INFO - Epoch(train) [25][300/563]  base_lr: 1.5757e-01 lr: 1.5757e-01  eta: 0:12:54  time: 0.2528  data_time: 0.0043  memory: 5403  grad_norm: 0.5864  loss: 1.0711  loss_cls: 0.5841  loss_bbox: 0.4870
2025/05/17 14:02:26 - mmengine - INFO - Epoch(train) [25][350/563]  base_lr: 1.5755e-01 lr: 1.5755e-01  eta: 0:12:41  time: 0.2509  data_time: 0.0041  memory: 5254  grad_norm: 0.5689  loss: 1.0336  loss_cls: 0.5662  loss_bbox: 0.4675
2025/05/17 14:02:39 - mmengine - INFO - Epoch(train) [25][400/563]  base_lr: 1.5753e-01 lr: 1.5753e-01  eta: 0:12:29  time: 0.2517  data_time: 0.0041  memory: 5336  grad_norm: 0.5210  loss: 0.8982  loss_cls: 0.5228  loss_bbox: 0.3754
2025/05/17 14:02:51 - mmengine - INFO - Epoch(train) [25][450/563]  base_lr: 1.5751e-01 lr: 1.5751e-01  eta: 0:12:16  time: 0.2477  data_time: 0.0041  memory: 5326  grad_norm: 0.5455  loss: 0.9757  loss_cls: 0.5597  loss_bbox: 0.4160
2025/05/17 14:03:01 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:03:04 - mmengine - INFO - Epoch(train) [25][500/563]  base_lr: 1.5749e-01 lr: 1.5749e-01  eta: 0:12:03  time: 0.2539  data_time: 0.0042  memory: 5387  grad_norm: 0.5728  loss: 1.0369  loss_cls: 0.5595  loss_bbox: 0.4774
2025/05/17 14:03:16 - mmengine - INFO - Epoch(train) [25][550/563]  base_lr: 1.5748e-01 lr: 1.5748e-01  eta: 0:11:51  time: 0.2483  data_time: 0.0041  memory: 5309  grad_norm: 0.5296  loss: 0.9707  loss_cls: 0.5483  loss_bbox: 0.4224
2025/05/17 14:03:20 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:03:23 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:03:25 - mmengine - INFO - bbox_mAP_copypaste: 0.062 0.127 0.053 -1.000 0.032 0.067
2025/05/17 14:03:25 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.0620  coco/bbox_mAP_50: 0.1270  coco/bbox_mAP_75: 0.0530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0320  coco/bbox_mAP_l: 0.0670  data_time: 0.0017  time: 0.0743
2025/05/17 14:03:37 - mmengine - INFO - Epoch(train) [26][ 50/563]  base_lr: 1.5745e-01 lr: 1.5745e-01  eta: 0:11:35  time: 0.2498  data_time: 0.0047  memory: 5486  grad_norm: 0.6157  loss: 0.9800  loss_cls: 0.5551  loss_bbox: 0.4249
2025/05/17 14:03:50 - mmengine - INFO - Epoch(train) [26][100/563]  base_lr: 1.5743e-01 lr: 1.5743e-01  eta: 0:11:22  time: 0.2488  data_time: 0.0043  memory: 5304  grad_norm: 0.5147  loss: 0.9260  loss_cls: 0.5410  loss_bbox: 0.3850
2025/05/17 14:04:02 - mmengine - INFO - Epoch(train) [26][150/563]  base_lr: 1.5741e-01 lr: 1.5741e-01  eta: 0:11:10  time: 0.2474  data_time: 0.0041  memory: 5471  grad_norm: 0.5631  loss: 0.9786  loss_cls: 0.5367  loss_bbox: 0.4419
2025/05/17 14:04:14 - mmengine - INFO - Epoch(train) [26][200/563]  base_lr: 1.5740e-01 lr: 1.5740e-01  eta: 0:10:57  time: 0.2492  data_time: 0.0041  memory: 5382  grad_norm: 0.5009  loss: 0.8525  loss_cls: 0.5004  loss_bbox: 0.3520
2025/05/17 14:04:27 - mmengine - INFO - Epoch(train) [26][250/563]  base_lr: 1.5738e-01 lr: 1.5738e-01  eta: 0:10:45  time: 0.2494  data_time: 0.0042  memory: 5398  grad_norm: 0.6344  loss: 1.0300  loss_cls: 0.5825  loss_bbox: 0.4475
2025/05/17 14:04:39 - mmengine - INFO - Epoch(train) [26][300/563]  base_lr: 1.5736e-01 lr: 1.5736e-01  eta: 0:10:32  time: 0.2497  data_time: 0.0041  memory: 5409  grad_norm: 0.5857  loss: 1.0272  loss_cls: 0.5405  loss_bbox: 0.4867
2025/05/17 14:04:52 - mmengine - INFO - Epoch(train) [26][350/563]  base_lr: 1.5734e-01 lr: 1.5734e-01  eta: 0:10:19  time: 0.2467  data_time: 0.0042  memory: 5315  grad_norm: 0.5270  loss: 0.8977  loss_cls: 0.5026  loss_bbox: 0.3951
2025/05/17 14:05:04 - mmengine - INFO - Epoch(train) [26][400/563]  base_lr: 1.5732e-01 lr: 1.5732e-01  eta: 0:10:07  time: 0.2513  data_time: 0.0042  memory: 5387  grad_norm: 0.6207  loss: 0.9531  loss_cls: 0.4925  loss_bbox: 0.4606
2025/05/17 14:05:17 - mmengine - INFO - Epoch(train) [26][450/563]  base_lr: 1.5730e-01 lr: 1.5730e-01  eta: 0:09:54  time: 0.2471  data_time: 0.0041  memory: 5454  grad_norm: 0.5681  loss: 1.0172  loss_cls: 0.5296  loss_bbox: 0.4876
2025/05/17 14:05:29 - mmengine - INFO - Epoch(train) [26][500/563]  base_lr: 1.5728e-01 lr: 1.5728e-01  eta: 0:09:42  time: 0.2549  data_time: 0.0041  memory: 5337  grad_norm: 0.6098  loss: 0.9463  loss_cls: 0.5145  loss_bbox: 0.4317
2025/05/17 14:05:42 - mmengine - INFO - Epoch(train) [26][550/563]  base_lr: 1.5726e-01 lr: 1.5726e-01  eta: 0:09:29  time: 0.2467  data_time: 0.0041  memory: 5243  grad_norm: 0.6232  loss: 0.9613  loss_cls: 0.5321  loss_bbox: 0.4291
2025/05/17 14:05:45 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:05:48 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:05:50 - mmengine - INFO - bbox_mAP_copypaste: 0.072 0.136 0.068 -1.000 0.047 0.076
2025/05/17 14:05:50 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.0720  coco/bbox_mAP_50: 0.1360  coco/bbox_mAP_75: 0.0680  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0470  coco/bbox_mAP_l: 0.0760  data_time: 0.0015  time: 0.0722
2025/05/17 14:06:02 - mmengine - INFO - Epoch(train) [27][ 50/563]  base_lr: 1.5724e-01 lr: 1.5724e-01  eta: 0:09:13  time: 0.2503  data_time: 0.0048  memory: 5404  grad_norm: 0.5981  loss: 1.0170  loss_cls: 0.5382  loss_bbox: 0.4788
2025/05/17 14:06:15 - mmengine - INFO - Epoch(train) [27][100/563]  base_lr: 1.5722e-01 lr: 1.5722e-01  eta: 0:09:01  time: 0.2546  data_time: 0.0042  memory: 5434  grad_norm: 0.5702  loss: 0.8954  loss_cls: 0.5274  loss_bbox: 0.3680
2025/05/17 14:06:27 - mmengine - INFO - Epoch(train) [27][150/563]  base_lr: 1.5720e-01 lr: 1.5720e-01  eta: 0:08:48  time: 0.2512  data_time: 0.0042  memory: 5352  grad_norm: 0.5690  loss: 0.9618  loss_cls: 0.5592  loss_bbox: 0.4026
2025/05/17 14:06:40 - mmengine - INFO - Epoch(train) [27][200/563]  base_lr: 1.5718e-01 lr: 1.5718e-01  eta: 0:08:35  time: 0.2541  data_time: 0.0041  memory: 5408  grad_norm: 0.6274  loss: 0.9809  loss_cls: 0.5058  loss_bbox: 0.4751
2025/05/17 14:06:53 - mmengine - INFO - Epoch(train) [27][250/563]  base_lr: 1.5716e-01 lr: 1.5716e-01  eta: 0:08:23  time: 0.2533  data_time: 0.0042  memory: 5315  grad_norm: 0.6789  loss: 0.9981  loss_cls: 0.4955  loss_bbox: 0.5027
2025/05/17 14:07:06 - mmengine - INFO - Epoch(train) [27][300/563]  base_lr: 1.5714e-01 lr: 1.5714e-01  eta: 0:08:10  time: 0.2535  data_time: 0.0042  memory: 5280  grad_norm: 0.5489  loss: 0.9940  loss_cls: 0.5042  loss_bbox: 0.4899
2025/05/17 14:07:18 - mmengine - INFO - Epoch(train) [27][350/563]  base_lr: 1.5712e-01 lr: 1.5712e-01  eta: 0:07:58  time: 0.2525  data_time: 0.0042  memory: 5383  grad_norm: 0.5713  loss: 0.8453  loss_cls: 0.5093  loss_bbox: 0.3360
2025/05/17 14:07:21 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:07:31 - mmengine - INFO - Epoch(train) [27][400/563]  base_lr: 1.5710e-01 lr: 1.5710e-01  eta: 0:07:45  time: 0.2527  data_time: 0.0042  memory: 5301  grad_norm: 0.5381  loss: 0.9153  loss_cls: 0.5256  loss_bbox: 0.3897
2025/05/17 14:07:43 - mmengine - INFO - Epoch(train) [27][450/563]  base_lr: 1.5708e-01 lr: 1.5708e-01  eta: 0:07:33  time: 0.2490  data_time: 0.0041  memory: 5398  grad_norm: 0.5934  loss: 0.9158  loss_cls: 0.5106  loss_bbox: 0.4051
2025/05/17 14:07:56 - mmengine - INFO - Epoch(train) [27][500/563]  base_lr: 1.5706e-01 lr: 1.5706e-01  eta: 0:07:20  time: 0.2545  data_time: 0.0041  memory: 5466  grad_norm: 0.5608  loss: 0.9187  loss_cls: 0.5414  loss_bbox: 0.3773
2025/05/17 14:08:08 - mmengine - INFO - Epoch(train) [27][550/563]  base_lr: 1.5704e-01 lr: 1.5704e-01  eta: 0:07:08  time: 0.2497  data_time: 0.0042  memory: 5264  grad_norm: 0.5820  loss: 0.9382  loss_cls: 0.5216  loss_bbox: 0.4166
2025/05/17 14:08:12 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:08:15 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:08:17 - mmengine - INFO - bbox_mAP_copypaste: 0.079 0.146 0.078 -1.000 0.044 0.085
2025/05/17 14:08:17 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.0790  coco/bbox_mAP_50: 0.1460  coco/bbox_mAP_75: 0.0780  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0440  coco/bbox_mAP_l: 0.0850  data_time: 0.0015  time: 0.0739
2025/05/17 14:08:29 - mmengine - INFO - Epoch(train) [28][ 50/563]  base_lr: 1.5701e-01 lr: 1.5701e-01  eta: 0:06:52  time: 0.2506  data_time: 0.0047  memory: 5321  grad_norm: 0.5800  loss: 0.9584  loss_cls: 0.5279  loss_bbox: 0.4305
2025/05/17 14:08:42 - mmengine - INFO - Epoch(train) [28][100/563]  base_lr: 1.5699e-01 lr: 1.5699e-01  eta: 0:06:39  time: 0.2512  data_time: 0.0042  memory: 5398  grad_norm: 0.5682  loss: 0.9518  loss_cls: 0.5575  loss_bbox: 0.3942
2025/05/17 14:08:54 - mmengine - INFO - Epoch(train) [28][150/563]  base_lr: 1.5697e-01 lr: 1.5697e-01  eta: 0:06:27  time: 0.2502  data_time: 0.0042  memory: 5464  grad_norm: 0.5832  loss: 0.9516  loss_cls: 0.5331  loss_bbox: 0.4185
2025/05/17 14:09:07 - mmengine - INFO - Epoch(train) [28][200/563]  base_lr: 1.5695e-01 lr: 1.5695e-01  eta: 0:06:14  time: 0.2533  data_time: 0.0042  memory: 5408  grad_norm: 0.6189  loss: 0.9829  loss_cls: 0.5177  loss_bbox: 0.4652
2025/05/17 14:09:20 - mmengine - INFO - Epoch(train) [28][250/563]  base_lr: 1.5693e-01 lr: 1.5693e-01  eta: 0:06:01  time: 0.2532  data_time: 0.0042  memory: 5409  grad_norm: 0.5191  loss: 0.8848  loss_cls: 0.4998  loss_bbox: 0.3850
2025/05/17 14:09:32 - mmengine - INFO - Epoch(train) [28][300/563]  base_lr: 1.5691e-01 lr: 1.5691e-01  eta: 0:05:49  time: 0.2549  data_time: 0.0042  memory: 5388  grad_norm: 0.6228  loss: 0.9318  loss_cls: 0.5236  loss_bbox: 0.4082
2025/05/17 14:09:45 - mmengine - INFO - Epoch(train) [28][350/563]  base_lr: 1.5689e-01 lr: 1.5689e-01  eta: 0:05:36  time: 0.2510  data_time: 0.0041  memory: 5402  grad_norm: 0.5954  loss: 0.9897  loss_cls: 0.5768  loss_bbox: 0.4129
2025/05/17 14:09:58 - mmengine - INFO - Epoch(train) [28][400/563]  base_lr: 1.5687e-01 lr: 1.5687e-01  eta: 0:05:24  time: 0.2541  data_time: 0.0041  memory: 5485  grad_norm: 0.5260  loss: 0.8296  loss_cls: 0.4794  loss_bbox: 0.3502
2025/05/17 14:10:10 - mmengine - INFO - Epoch(train) [28][450/563]  base_lr: 1.5685e-01 lr: 1.5685e-01  eta: 0:05:11  time: 0.2470  data_time: 0.0043  memory: 5388  grad_norm: 0.5410  loss: 0.8219  loss_cls: 0.4962  loss_bbox: 0.3257
2025/05/17 14:10:23 - mmengine - INFO - Epoch(train) [28][500/563]  base_lr: 1.5683e-01 lr: 1.5683e-01  eta: 0:04:59  time: 0.2561  data_time: 0.0041  memory: 5435  grad_norm: 0.5572  loss: 0.9372  loss_cls: 0.5110  loss_bbox: 0.4262
2025/05/17 14:10:35 - mmengine - INFO - Epoch(train) [28][550/563]  base_lr: 1.5681e-01 lr: 1.5681e-01  eta: 0:04:46  time: 0.2507  data_time: 0.0042  memory: 5280  grad_norm: 0.6360  loss: 0.8790  loss_cls: 0.5031  loss_bbox: 0.3759
2025/05/17 14:10:38 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:10:42 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:10:43 - mmengine - INFO - bbox_mAP_copypaste: 0.087 0.157 0.088 -1.000 0.039 0.095
2025/05/17 14:10:43 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.0870  coco/bbox_mAP_50: 0.1570  coco/bbox_mAP_75: 0.0880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0390  coco/bbox_mAP_l: 0.0950  data_time: 0.0015  time: 0.0726
2025/05/17 14:10:56 - mmengine - INFO - Epoch(train) [29][ 50/563]  base_lr: 1.5678e-01 lr: 1.5678e-01  eta: 0:04:30  time: 0.2567  data_time: 0.0047  memory: 5398  grad_norm: 0.6834  loss: 0.9992  loss_cls: 0.5139  loss_bbox: 0.4853
2025/05/17 14:11:09 - mmengine - INFO - Epoch(train) [29][100/563]  base_lr: 1.5676e-01 lr: 1.5676e-01  eta: 0:04:18  time: 0.2520  data_time: 0.0041  memory: 5471  grad_norm: 0.5420  loss: 0.9091  loss_cls: 0.5053  loss_bbox: 0.4038
2025/05/17 14:11:21 - mmengine - INFO - Epoch(train) [29][150/563]  base_lr: 1.5674e-01 lr: 1.5674e-01  eta: 0:04:05  time: 0.2540  data_time: 0.0041  memory: 5455  grad_norm: 0.6922  loss: 0.9918  loss_cls: 0.5850  loss_bbox: 0.4069
2025/05/17 14:11:34 - mmengine - INFO - Epoch(train) [29][200/563]  base_lr: 1.5672e-01 lr: 1.5672e-01  eta: 0:03:52  time: 0.2535  data_time: 0.0042  memory: 5280  grad_norm: 0.6898  loss: 1.1840  loss_cls: 0.6726  loss_bbox: 0.5114
2025/05/17 14:11:43 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:11:47 - mmengine - INFO - Epoch(train) [29][250/563]  base_lr: 1.5670e-01 lr: 1.5670e-01  eta: 0:03:40  time: 0.2530  data_time: 0.0041  memory: 5433  grad_norm: 0.5474  loss: 0.9260  loss_cls: 0.5334  loss_bbox: 0.3926
2025/05/17 14:11:59 - mmengine - INFO - Epoch(train) [29][300/563]  base_lr: 1.5668e-01 lr: 1.5668e-01  eta: 0:03:27  time: 0.2525  data_time: 0.0042  memory: 5388  grad_norm: 0.5636  loss: 0.9439  loss_cls: 0.5427  loss_bbox: 0.4012
2025/05/17 14:12:12 - mmengine - INFO - Epoch(train) [29][350/563]  base_lr: 1.5665e-01 lr: 1.5665e-01  eta: 0:03:15  time: 0.2504  data_time: 0.0042  memory: 5315  grad_norm: 0.5333  loss: 0.9111  loss_cls: 0.5497  loss_bbox: 0.3614
2025/05/17 14:12:24 - mmengine - INFO - Epoch(train) [29][400/563]  base_lr: 1.5663e-01 lr: 1.5663e-01  eta: 0:03:02  time: 0.2502  data_time: 0.0041  memory: 5402  grad_norm: 0.6088  loss: 0.9303  loss_cls: 0.5295  loss_bbox: 0.4008
2025/05/17 14:12:37 - mmengine - INFO - Epoch(train) [29][450/563]  base_lr: 1.5661e-01 lr: 1.5661e-01  eta: 0:02:50  time: 0.2495  data_time: 0.0043  memory: 5483  grad_norm: 0.5644  loss: 0.8901  loss_cls: 0.5122  loss_bbox: 0.3780
2025/05/17 14:12:50 - mmengine - INFO - Epoch(train) [29][500/563]  base_lr: 1.5659e-01 lr: 1.5659e-01  eta: 0:02:37  time: 0.2526  data_time: 0.0043  memory: 5366  grad_norm: 0.5790  loss: 0.9101  loss_cls: 0.5173  loss_bbox: 0.3928
2025/05/17 14:13:02 - mmengine - INFO - Epoch(train) [29][550/563]  base_lr: 1.5657e-01 lr: 1.5657e-01  eta: 0:02:24  time: 0.2490  data_time: 0.0041  memory: 5409  grad_norm: 0.5252  loss: 0.8683  loss_cls: 0.4711  loss_bbox: 0.3972
2025/05/17 14:13:05 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:13:09 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:13:10 - mmengine - INFO - bbox_mAP_copypaste: 0.091 0.163 0.093 -1.000 0.042 0.099
2025/05/17 14:13:10 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.0910  coco/bbox_mAP_50: 0.1630  coco/bbox_mAP_75: 0.0930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0420  coco/bbox_mAP_l: 0.0990  data_time: 0.0016  time: 0.0710
2025/05/17 14:13:23 - mmengine - INFO - Epoch(train) [30][ 50/563]  base_lr: 1.5654e-01 lr: 1.5654e-01  eta: 0:02:09  time: 0.2511  data_time: 0.0047  memory: 5388  grad_norm: 0.5613  loss: 0.9080  loss_cls: 0.5005  loss_bbox: 0.4076
2025/05/17 14:13:35 - mmengine - INFO - Epoch(train) [30][100/563]  base_lr: 1.5652e-01 lr: 1.5652e-01  eta: 0:01:56  time: 0.2491  data_time: 0.0042  memory: 5259  grad_norm: 0.5495  loss: 0.8672  loss_cls: 0.5182  loss_bbox: 0.3490
2025/05/17 14:13:48 - mmengine - INFO - Epoch(train) [30][150/563]  base_lr: 1.5650e-01 lr: 1.5650e-01  eta: 0:01:43  time: 0.2534  data_time: 0.0042  memory: 5337  grad_norm: 0.6457  loss: 0.9126  loss_cls: 0.5310  loss_bbox: 0.3817
2025/05/17 14:14:00 - mmengine - INFO - Epoch(train) [30][200/563]  base_lr: 1.5648e-01 lr: 1.5648e-01  eta: 0:01:31  time: 0.2541  data_time: 0.0041  memory: 5341  grad_norm: 0.5255  loss: 0.8330  loss_cls: 0.5039  loss_bbox: 0.3291
2025/05/17 14:14:13 - mmengine - INFO - Epoch(train) [30][250/563]  base_lr: 1.5645e-01 lr: 1.5645e-01  eta: 0:01:18  time: 0.2520  data_time: 0.0043  memory: 5366  grad_norm: 0.5744  loss: 0.8530  loss_cls: 0.4875  loss_bbox: 0.3655
2025/05/17 14:14:25 - mmengine - INFO - Epoch(train) [30][300/563]  base_lr: 1.5643e-01 lr: 1.5643e-01  eta: 0:01:06  time: 0.2506  data_time: 0.0042  memory: 5419  grad_norm: 0.6107  loss: 0.9233  loss_cls: 0.5334  loss_bbox: 0.3899
2025/05/17 14:14:38 - mmengine - INFO - Epoch(train) [30][350/563]  base_lr: 1.5641e-01 lr: 1.5641e-01  eta: 0:00:53  time: 0.2549  data_time: 0.0042  memory: 5483  grad_norm: 0.8022  loss: 1.0371  loss_cls: 0.4999  loss_bbox: 0.5372
2025/05/17 14:14:51 - mmengine - INFO - Epoch(train) [30][400/563]  base_lr: 1.5639e-01 lr: 1.5639e-01  eta: 0:00:40  time: 0.2489  data_time: 0.0041  memory: 5321  grad_norm: 0.5679  loss: 0.8882  loss_cls: 0.5045  loss_bbox: 0.3837
2025/05/17 14:15:03 - mmengine - INFO - Epoch(train) [30][450/563]  base_lr: 1.5637e-01 lr: 1.5637e-01  eta: 0:00:28  time: 0.2560  data_time: 0.0042  memory: 5398  grad_norm: 0.6503  loss: 0.9406  loss_cls: 0.4969  loss_bbox: 0.4437
2025/05/17 14:15:16 - mmengine - INFO - Epoch(train) [30][500/563]  base_lr: 1.5634e-01 lr: 1.5634e-01  eta: 0:00:15  time: 0.2493  data_time: 0.0041  memory: 5469  grad_norm: 0.6329  loss: 0.9390  loss_cls: 0.4892  loss_bbox: 0.4498
2025/05/17 14:15:29 - mmengine - INFO - Epoch(train) [30][550/563]  base_lr: 1.5632e-01 lr: 1.5632e-01  eta: 0:00:03  time: 0.2532  data_time: 0.0041  memory: 5485  grad_norm: 0.4963  loss: 0.8137  loss_cls: 0.4775  loss_bbox: 0.3362
2025/05/17 14:15:32 - mmengine - INFO - Exp name: efficientdet_fs_df_20250517_130149
2025/05/17 14:15:32 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/17 14:15:37 - mmengine - INFO - Evaluating bbox...
2025/05/17 14:15:38 - mmengine - INFO - bbox_mAP_copypaste: 0.091 0.162 0.094 -1.000 0.041 0.099
2025/05/17 14:15:38 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.0910  coco/bbox_mAP_50: 0.1620  coco/bbox_mAP_75: 0.0940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0410  coco/bbox_mAP_l: 0.0990  data_time: 0.0014  time: 0.0714
