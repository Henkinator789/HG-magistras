2025/05/19 14:17:54 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 824590650
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 824590650
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/19 14:17:54 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=4,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=4,
    dataset=dict(
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(prob=0.5, type='ShearX'),
            dict(prob=0.5, type='ShearY'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(prob=0.5, type='ShearX'),
    dict(prob=0.5, type='ShearY'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/fasterrcnn'

2025/05/19 14:17:55 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/19 14:17:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/19 14:17:56 - mmengine - INFO - load model from: torchvision://resnet50
2025/05/19 14:17:56 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2025/05/19 14:17:56 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([5, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([16, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([16]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2025/05/19 14:17:56 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/19 14:17:56 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/19 14:17:56 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\fasterrcnn.
2025/05/19 14:18:19 - mmengine - INFO - Epoch(train)  [1][ 50/141]  lr: 1.9820e-03  eta: 0:31:54  time: 0.4581  data_time: 0.0914  memory: 4359  loss: nan  loss_rpn_cls: 0.6317  loss_rpn_bbox: 0.2775  loss_cls: 0.8365  acc: 80.3223  loss_bbox: nan
2025/05/19 14:18:37 - mmengine - INFO - Epoch(train)  [1][100/141]  lr: 3.9840e-03  eta: 0:28:15  time: 0.3632  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.3919  loss_rpn_bbox: 0.2525  loss_cls: 0.6817  acc: 76.1719  loss_bbox: nan
2025/05/19 14:18:52 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:19:02 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:19:03 - mmengine - INFO - bbox_mAP_copypaste: 0.105 0.313 0.024 -1.000 0.034 0.119
2025/05/19 14:19:03 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.1050  coco/bbox_mAP_50: 0.3130  coco/bbox_mAP_75: 0.0240  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0340  coco/bbox_mAP_l: 0.1190  data_time: 0.1630  time: 0.2040
2025/05/19 14:19:04 - mmengine - INFO - The best checkpoint with 0.1050 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/19 14:19:23 - mmengine - INFO - Epoch(train)  [2][ 50/141]  lr: 7.6276e-03  eta: 0:26:23  time: 0.3761  data_time: 0.0049  memory: 4358  loss: nan  loss_rpn_cls: 0.2426  loss_rpn_bbox: 0.2421  loss_cls: 0.6239  acc: 79.2969  loss_bbox: nan
2025/05/19 14:19:41 - mmengine - INFO - Epoch(train)  [2][100/141]  lr: 9.6296e-03  eta: 0:25:40  time: 0.3634  data_time: 0.0022  memory: 4358  loss: nan  loss_rpn_cls: 0.2026  loss_rpn_bbox: 0.2312  loss_cls: 0.5848  acc: 78.4180  loss_bbox: nan
2025/05/19 14:19:56 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:19:58 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:19:59 - mmengine - INFO - bbox_mAP_copypaste: 0.235 0.521 0.157 -1.000 0.124 0.263
2025/05/19 14:19:59 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.2350  coco/bbox_mAP_50: 0.5210  coco/bbox_mAP_75: 0.1570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1240  coco/bbox_mAP_l: 0.2630  data_time: 0.0016  time: 0.0377
2025/05/19 14:19:59 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/19 14:20:00 - mmengine - INFO - The best checkpoint with 0.2350 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/19 14:20:19 - mmengine - INFO - Epoch(train)  [3][ 50/141]  lr: 1.3273e-02  eta: 0:24:41  time: 0.3678  data_time: 0.0052  memory: 4358  loss: nan  loss_rpn_cls: 0.1671  loss_rpn_bbox: 0.2130  loss_cls: 0.5695  acc: 76.3184  loss_bbox: nan
2025/05/19 14:20:37 - mmengine - INFO - Epoch(train)  [3][100/141]  lr: 1.5275e-02  eta: 0:24:13  time: 0.3636  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.1360  loss_rpn_bbox: 0.2121  loss_cls: 0.5579  acc: 77.6855  loss_bbox: nan
2025/05/19 14:20:52 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:20:53 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:20:55 - mmengine - INFO - bbox_mAP_copypaste: 0.283 0.554 0.245 -1.000 0.186 0.307
2025/05/19 14:20:55 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.2830  coco/bbox_mAP_50: 0.5540  coco/bbox_mAP_75: 0.2450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1860  coco/bbox_mAP_l: 0.3070  data_time: 0.0016  time: 0.0375
2025/05/19 14:20:55 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/19 14:20:56 - mmengine - INFO - The best checkpoint with 0.2830 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/19 14:21:14 - mmengine - INFO - Epoch(train)  [4][ 50/141]  lr: 1.8919e-02  eta: 0:23:28  time: 0.3669  data_time: 0.0048  memory: 4359  loss: nan  loss_rpn_cls: 0.1363  loss_rpn_bbox: 0.2024  loss_cls: 0.5204  acc: 80.8594  loss_bbox: nan
2025/05/19 14:21:32 - mmengine - INFO - Epoch(train)  [4][100/141]  lr: 2.0000e-02  eta: 0:23:04  time: 0.3600  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.1280  loss_rpn_bbox: 0.1874  loss_cls: 0.5121  acc: 81.2342  loss_bbox: nan
2025/05/19 14:21:47 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:21:49 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:21:50 - mmengine - INFO - bbox_mAP_copypaste: 0.265 0.581 0.176 -1.000 0.198 0.279
2025/05/19 14:21:50 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.2650  coco/bbox_mAP_50: 0.5810  coco/bbox_mAP_75: 0.1760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1980  coco/bbox_mAP_l: 0.2790  data_time: 0.0016  time: 0.0382
2025/05/19 14:22:09 - mmengine - INFO - Epoch(train)  [5][ 50/141]  lr: 2.0000e-02  eta: 0:22:24  time: 0.3625  data_time: 0.0050  memory: 4358  loss: nan  loss_rpn_cls: 0.1236  loss_rpn_bbox: 0.1833  loss_cls: 0.5052  acc: 81.0768  loss_bbox: nan
2025/05/19 14:22:27 - mmengine - INFO - Epoch(train)  [5][100/141]  lr: 2.0000e-02  eta: 0:22:02  time: 0.3601  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.1046  loss_rpn_bbox: 0.1846  loss_cls: 0.4863  acc: 82.6660  loss_bbox: nan
2025/05/19 14:22:41 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:22:43 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:22:45 - mmengine - INFO - bbox_mAP_copypaste: 0.312 0.578 0.293 -1.000 0.237 0.328
2025/05/19 14:22:45 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.3120  coco/bbox_mAP_50: 0.5780  coco/bbox_mAP_75: 0.2930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2370  coco/bbox_mAP_l: 0.3280  data_time: 0.0014  time: 0.0373
2025/05/19 14:22:45 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/19 14:22:45 - mmengine - INFO - The best checkpoint with 0.3120 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/19 14:23:03 - mmengine - INFO - Epoch(train)  [6][ 50/141]  lr: 2.0000e-02  eta: 0:21:24  time: 0.3621  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0959  loss_rpn_bbox: 0.1717  loss_cls: 0.4375  acc: 84.9609  loss_bbox: nan
2025/05/19 14:23:21 - mmengine - INFO - Epoch(train)  [6][100/141]  lr: 2.0000e-02  eta: 0:21:03  time: 0.3586  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0895  loss_rpn_bbox: 0.1728  loss_cls: 0.4467  acc: 81.8359  loss_bbox: nan
2025/05/19 14:23:36 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:23:38 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:23:39 - mmengine - INFO - bbox_mAP_copypaste: 0.245 0.618 0.103 -1.000 0.163 0.264
2025/05/19 14:23:39 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.2450  coco/bbox_mAP_50: 0.6180  coco/bbox_mAP_75: 0.1030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1630  coco/bbox_mAP_l: 0.2640  data_time: 0.0015  time: 0.0382
2025/05/19 14:23:58 - mmengine - INFO - Epoch(train)  [7][ 50/141]  lr: 2.0000e-02  eta: 0:20:26  time: 0.3649  data_time: 0.0049  memory: 4358  loss: nan  loss_rpn_cls: 0.0955  loss_rpn_bbox: 0.1742  loss_cls: 0.4311  acc: 82.1175  loss_bbox: nan
2025/05/19 14:24:15 - mmengine - INFO - Epoch(train)  [7][100/141]  lr: 2.0000e-02  eta: 0:20:06  time: 0.3569  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0816  loss_rpn_bbox: 0.1656  loss_cls: 0.4069  acc: 84.4238  loss_bbox: nan
2025/05/19 14:24:30 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:24:32 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:24:33 - mmengine - INFO - bbox_mAP_copypaste: 0.350 0.661 0.321 -1.000 0.237 0.374
2025/05/19 14:24:33 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.3500  coco/bbox_mAP_50: 0.6610  coco/bbox_mAP_75: 0.3210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2370  coco/bbox_mAP_l: 0.3740  data_time: 0.0016  time: 0.0375
2025/05/19 14:24:33 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/19 14:24:34 - mmengine - INFO - The best checkpoint with 0.3500 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/19 14:24:39 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:24:53 - mmengine - INFO - Epoch(train)  [8][ 50/141]  lr: 2.0000e-02  eta: 0:19:31  time: 0.3699  data_time: 0.0052  memory: 4358  loss: nan  loss_rpn_cls: 0.0879  loss_rpn_bbox: 0.1669  loss_cls: 0.4434  acc: 83.3950  loss_bbox: nan
2025/05/19 14:25:11 - mmengine - INFO - Epoch(train)  [8][100/141]  lr: 2.0000e-02  eta: 0:19:12  time: 0.3591  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0804  loss_rpn_bbox: 0.1596  loss_cls: 0.3963  acc: 84.2773  loss_bbox: nan
2025/05/19 14:25:25 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:25:27 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:25:29 - mmengine - INFO - bbox_mAP_copypaste: 0.357 0.691 0.322 -1.000 0.240 0.381
2025/05/19 14:25:29 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.3570  coco/bbox_mAP_50: 0.6910  coco/bbox_mAP_75: 0.3220  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2400  coco/bbox_mAP_l: 0.3810  data_time: 0.0016  time: 0.0369
2025/05/19 14:25:29 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/19 14:25:30 - mmengine - INFO - The best checkpoint with 0.3570 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/19 14:25:48 - mmengine - INFO - Epoch(train)  [9][ 50/141]  lr: 2.0000e-03  eta: 0:18:38  time: 0.3683  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0670  loss_rpn_bbox: 0.1397  loss_cls: 0.3875  acc: 86.6699  loss_bbox: nan
2025/05/19 14:26:06 - mmengine - INFO - Epoch(train)  [9][100/141]  lr: 2.0000e-03  eta: 0:18:19  time: 0.3593  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0635  loss_rpn_bbox: 0.1365  loss_cls: 0.3687  acc: 85.8887  loss_bbox: nan
2025/05/19 14:26:21 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:26:23 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:26:24 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.710 0.473 -1.000 0.279 0.448
2025/05/19 14:26:24 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.7100  coco/bbox_mAP_75: 0.4730  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2790  coco/bbox_mAP_l: 0.4480  data_time: 0.0016  time: 0.0370
2025/05/19 14:26:24 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/19 14:26:25 - mmengine - INFO - The best checkpoint with 0.4230 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/19 14:26:43 - mmengine - INFO - Epoch(train) [10][ 50/141]  lr: 2.0000e-03  eta: 0:17:44  time: 0.3649  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0577  loss_rpn_bbox: 0.1257  loss_cls: 0.3350  acc: 83.8867  loss_bbox: nan
2025/05/19 14:27:01 - mmengine - INFO - Epoch(train) [10][100/141]  lr: 2.0000e-03  eta: 0:17:26  time: 0.3626  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0614  loss_rpn_bbox: 0.1342  loss_cls: 0.3466  acc: 84.3750  loss_bbox: nan
2025/05/19 14:27:16 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:27:18 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:27:19 - mmengine - INFO - bbox_mAP_copypaste: 0.420 0.712 0.461 -1.000 0.277 0.447
2025/05/19 14:27:19 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.4200  coco/bbox_mAP_50: 0.7120  coco/bbox_mAP_75: 0.4610  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2770  coco/bbox_mAP_l: 0.4470  data_time: 0.0015  time: 0.0369
2025/05/19 14:27:37 - mmengine - INFO - Epoch(train) [11][ 50/141]  lr: 2.0000e-03  eta: 0:16:51  time: 0.3609  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0562  loss_rpn_bbox: 0.1289  loss_cls: 0.3347  acc: 80.5664  loss_bbox: nan
2025/05/19 14:27:56 - mmengine - INFO - Epoch(train) [11][100/141]  lr: 2.0000e-03  eta: 0:16:33  time: 0.3632  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0602  loss_rpn_bbox: 0.1301  loss_cls: 0.3376  acc: 88.4277  loss_bbox: nan
2025/05/19 14:28:10 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:28:12 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:28:14 - mmengine - INFO - bbox_mAP_copypaste: 0.418 0.728 0.449 -1.000 0.260 0.444
2025/05/19 14:28:14 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.4180  coco/bbox_mAP_50: 0.7280  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2600  coco/bbox_mAP_l: 0.4440  data_time: 0.0015  time: 0.0369
2025/05/19 14:28:32 - mmengine - INFO - Epoch(train) [12][ 50/141]  lr: 2.0000e-04  eta: 0:15:59  time: 0.3617  data_time: 0.0051  memory: 4358  loss: nan  loss_rpn_cls: 0.0566  loss_rpn_bbox: 0.1304  loss_cls: 0.3409  acc: 88.2324  loss_bbox: nan
2025/05/19 14:28:50 - mmengine - INFO - Epoch(train) [12][100/141]  lr: 2.0000e-04  eta: 0:15:40  time: 0.3622  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0581  loss_rpn_bbox: 0.1295  loss_cls: 0.3331  acc: 83.5938  loss_bbox: nan
2025/05/19 14:29:04 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:29:06 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:29:08 - mmengine - INFO - bbox_mAP_copypaste: 0.425 0.720 0.465 -1.000 0.282 0.451
2025/05/19 14:29:08 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.4250  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.4650  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2820  coco/bbox_mAP_l: 0.4510  data_time: 0.0015  time: 0.0365
2025/05/19 14:29:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/19 14:29:09 - mmengine - INFO - The best checkpoint with 0.4250 coco/bbox_mAP at 12 epoch is saved to best_coco_bbox_mAP_epoch_12.pth.
2025/05/19 14:29:27 - mmengine - INFO - Epoch(train) [13][ 50/141]  lr: 2.0000e-04  eta: 0:15:07  time: 0.3652  data_time: 0.0049  memory: 4359  loss: nan  loss_rpn_cls: 0.0558  loss_rpn_bbox: 0.1300  loss_cls: 0.3419  acc: 83.7891  loss_bbox: nan
2025/05/19 14:29:45 - mmengine - INFO - Epoch(train) [13][100/141]  lr: 2.0000e-04  eta: 0:14:48  time: 0.3641  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.0593  loss_rpn_bbox: 0.1298  loss_cls: 0.3397  acc: 87.3535  loss_bbox: nan
2025/05/19 14:30:00 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:30:02 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:30:03 - mmengine - INFO - bbox_mAP_copypaste: 0.426 0.726 0.469 -1.000 0.278 0.452
2025/05/19 14:30:03 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.4260  coco/bbox_mAP_50: 0.7260  coco/bbox_mAP_75: 0.4690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2780  coco/bbox_mAP_l: 0.4520  data_time: 0.0014  time: 0.0368
2025/05/19 14:30:03 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_12.pth is removed
2025/05/19 14:30:04 - mmengine - INFO - The best checkpoint with 0.4260 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2025/05/19 14:30:22 - mmengine - INFO - Epoch(train) [14][ 50/141]  lr: 2.0000e-04  eta: 0:14:15  time: 0.3645  data_time: 0.0049  memory: 4359  loss: nan  loss_rpn_cls: 0.0568  loss_rpn_bbox: 0.1275  loss_cls: 0.3480  acc: 86.4258  loss_bbox: nan
2025/05/19 14:30:40 - mmengine - INFO - Epoch(train) [14][100/141]  lr: 2.0000e-04  eta: 0:13:57  time: 0.3621  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0562  loss_rpn_bbox: 0.1294  loss_cls: 0.3345  acc: 89.3066  loss_bbox: nan
2025/05/19 14:30:55 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:30:57 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:30:58 - mmengine - INFO - bbox_mAP_copypaste: 0.429 0.729 0.470 -1.000 0.284 0.454
2025/05/19 14:30:58 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.4290  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.4700  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.4540  data_time: 0.0017  time: 0.0372
2025/05/19 14:30:58 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_13.pth is removed
2025/05/19 14:30:59 - mmengine - INFO - The best checkpoint with 0.4290 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/19 14:31:09 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:31:17 - mmengine - INFO - Epoch(train) [15][ 50/141]  lr: 2.0000e-04  eta: 0:13:23  time: 0.3654  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0533  loss_rpn_bbox: 0.1284  loss_cls: 0.3302  acc: 90.9180  loss_bbox: nan
2025/05/19 14:31:35 - mmengine - INFO - Epoch(train) [15][100/141]  lr: 2.0000e-04  eta: 0:13:05  time: 0.3592  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0603  loss_rpn_bbox: 0.1275  loss_cls: 0.3385  acc: 88.8184  loss_bbox: nan
2025/05/19 14:31:50 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:31:52 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:31:53 - mmengine - INFO - bbox_mAP_copypaste: 0.437 0.732 0.486 -1.000 0.287 0.463
2025/05/19 14:31:53 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.4370  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.4860  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2870  coco/bbox_mAP_l: 0.4630  data_time: 0.0015  time: 0.0369
2025/05/19 14:31:54 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/19 14:31:54 - mmengine - INFO - The best checkpoint with 0.4370 coco/bbox_mAP at 15 epoch is saved to best_coco_bbox_mAP_epoch_15.pth.
2025/05/19 14:32:13 - mmengine - INFO - Epoch(train) [16][ 50/141]  lr: 2.0000e-04  eta: 0:12:32  time: 0.3682  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0580  loss_rpn_bbox: 0.1301  loss_cls: 0.3388  acc: 88.5254  loss_bbox: nan
2025/05/19 14:32:31 - mmengine - INFO - Epoch(train) [16][100/141]  lr: 2.0000e-04  eta: 0:12:13  time: 0.3597  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0573  loss_rpn_bbox: 0.1295  loss_cls: 0.3385  acc: 87.3535  loss_bbox: nan
2025/05/19 14:32:45 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:32:47 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:32:49 - mmengine - INFO - bbox_mAP_copypaste: 0.433 0.728 0.477 -1.000 0.286 0.458
2025/05/19 14:32:49 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.4330  coco/bbox_mAP_50: 0.7280  coco/bbox_mAP_75: 0.4770  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2860  coco/bbox_mAP_l: 0.4580  data_time: 0.0018  time: 0.0368
2025/05/19 14:33:07 - mmengine - INFO - Epoch(train) [17][ 50/141]  lr: 2.0000e-04  eta: 0:11:40  time: 0.3649  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0549  loss_rpn_bbox: 0.1238  loss_cls: 0.3236  acc: 90.3320  loss_bbox: nan
2025/05/19 14:33:25 - mmengine - INFO - Epoch(train) [17][100/141]  lr: 2.0000e-04  eta: 0:11:22  time: 0.3616  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0555  loss_rpn_bbox: 0.1276  loss_cls: 0.3300  acc: 84.8377  loss_bbox: nan
2025/05/19 14:33:40 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:33:42 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:33:43 - mmengine - INFO - bbox_mAP_copypaste: 0.431 0.729 0.470 -1.000 0.284 0.457
2025/05/19 14:33:43 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.4310  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.4700  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.4570  data_time: 0.0016  time: 0.0370
2025/05/19 14:34:01 - mmengine - INFO - Epoch(train) [18][ 50/141]  lr: 2.0000e-04  eta: 0:10:48  time: 0.3655  data_time: 0.0049  memory: 4358  loss: nan  loss_rpn_cls: 0.0552  loss_rpn_bbox: 0.1248  loss_cls: 0.3254  acc: 89.9414  loss_bbox: nan
2025/05/19 14:34:20 - mmengine - INFO - Epoch(train) [18][100/141]  lr: 2.0000e-04  eta: 0:10:30  time: 0.3619  data_time: 0.0022  memory: 4359  loss: nan  loss_rpn_cls: 0.0548  loss_rpn_bbox: 0.1280  loss_cls: 0.3356  acc: 87.9883  loss_bbox: nan
2025/05/19 14:34:34 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:34:36 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:34:38 - mmengine - INFO - bbox_mAP_copypaste: 0.427 0.726 0.464 -1.000 0.279 0.452
2025/05/19 14:34:38 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.4270  coco/bbox_mAP_50: 0.7260  coco/bbox_mAP_75: 0.4640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2790  coco/bbox_mAP_l: 0.4520  data_time: 0.0015  time: 0.0369
2025/05/19 14:34:56 - mmengine - INFO - Epoch(train) [19][ 50/141]  lr: 2.0000e-04  eta: 0:09:57  time: 0.3620  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0589  loss_rpn_bbox: 0.1281  loss_cls: 0.3352  acc: 85.5957  loss_bbox: nan
2025/05/19 14:35:14 - mmengine - INFO - Epoch(train) [19][100/141]  lr: 2.0000e-04  eta: 0:09:39  time: 0.3632  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0585  loss_rpn_bbox: 0.1300  loss_cls: 0.3377  acc: 88.5742  loss_bbox: nan
2025/05/19 14:35:28 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:35:30 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:35:32 - mmengine - INFO - bbox_mAP_copypaste: 0.434 0.731 0.480 -1.000 0.284 0.459
2025/05/19 14:35:32 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.4340  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.4800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.4590  data_time: 0.0016  time: 0.0370
2025/05/19 14:35:50 - mmengine - INFO - Epoch(train) [20][ 50/141]  lr: 2.0000e-04  eta: 0:09:05  time: 0.3624  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0570  loss_rpn_bbox: 0.1264  loss_cls: 0.3343  acc: 86.0352  loss_bbox: nan
2025/05/19 14:36:08 - mmengine - INFO - Epoch(train) [20][100/141]  lr: 2.0000e-04  eta: 0:08:47  time: 0.3613  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0544  loss_rpn_bbox: 0.1302  loss_cls: 0.3413  acc: 84.7656  loss_bbox: nan
2025/05/19 14:36:23 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:36:25 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:36:26 - mmengine - INFO - bbox_mAP_copypaste: 0.432 0.727 0.475 -1.000 0.284 0.457
2025/05/19 14:36:26 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.4320  coco/bbox_mAP_50: 0.7270  coco/bbox_mAP_75: 0.4750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.4570  data_time: 0.0015  time: 0.0373
2025/05/19 14:36:44 - mmengine - INFO - Epoch(train) [21][ 50/141]  lr: 2.0000e-04  eta: 0:08:14  time: 0.3596  data_time: 0.0049  memory: 4359  loss: nan  loss_rpn_cls: 0.0568  loss_rpn_bbox: 0.1297  loss_cls: 0.3360  acc: 89.2090  loss_bbox: nan
2025/05/19 14:37:02 - mmengine - INFO - Epoch(train) [21][100/141]  lr: 2.0000e-04  eta: 0:07:56  time: 0.3609  data_time: 0.0024  memory: 4358  loss: nan  loss_rpn_cls: 0.0574  loss_rpn_bbox: 0.1288  loss_cls: 0.3271  acc: 90.4785  loss_bbox: nan
2025/05/19 14:37:17 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:37:19 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:37:20 - mmengine - INFO - bbox_mAP_copypaste: 0.429 0.722 0.473 -1.000 0.281 0.455
2025/05/19 14:37:20 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.4290  coco/bbox_mAP_50: 0.7220  coco/bbox_mAP_75: 0.4730  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2810  coco/bbox_mAP_l: 0.4550  data_time: 0.0015  time: 0.0368
2025/05/19 14:37:35 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:37:39 - mmengine - INFO - Epoch(train) [22][ 50/141]  lr: 2.0000e-04  eta: 0:07:23  time: 0.3672  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0562  loss_rpn_bbox: 0.1271  loss_cls: 0.3302  acc: 86.6699  loss_bbox: nan
2025/05/19 14:37:57 - mmengine - INFO - Epoch(train) [22][100/141]  lr: 2.0000e-04  eta: 0:07:04  time: 0.3580  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.0545  loss_rpn_bbox: 0.1247  loss_cls: 0.3243  acc: 84.4727  loss_bbox: nan
2025/05/19 14:38:11 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:38:13 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:38:15 - mmengine - INFO - bbox_mAP_copypaste: 0.430 0.730 0.468 -1.000 0.281 0.456
2025/05/19 14:38:15 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.4300  coco/bbox_mAP_50: 0.7300  coco/bbox_mAP_75: 0.4680  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2810  coco/bbox_mAP_l: 0.4560  data_time: 0.0017  time: 0.0370
2025/05/19 14:38:33 - mmengine - INFO - Epoch(train) [23][ 50/141]  lr: 2.0000e-04  eta: 0:06:31  time: 0.3641  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0573  loss_rpn_bbox: 0.1306  loss_cls: 0.3331  acc: 87.0117  loss_bbox: nan
2025/05/19 14:38:51 - mmengine - INFO - Epoch(train) [23][100/141]  lr: 2.0000e-04  eta: 0:06:13  time: 0.3593  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0529  loss_rpn_bbox: 0.1264  loss_cls: 0.3361  acc: 84.4727  loss_bbox: nan
2025/05/19 14:39:06 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:39:07 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:39:09 - mmengine - INFO - bbox_mAP_copypaste: 0.428 0.730 0.462 -1.000 0.282 0.454
2025/05/19 14:39:09 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.4280  coco/bbox_mAP_50: 0.7300  coco/bbox_mAP_75: 0.4620  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2820  coco/bbox_mAP_l: 0.4540  data_time: 0.0016  time: 0.0366
2025/05/19 14:39:27 - mmengine - INFO - Epoch(train) [24][ 50/141]  lr: 2.0000e-04  eta: 0:05:40  time: 0.3668  data_time: 0.0051  memory: 4359  loss: nan  loss_rpn_cls: 0.0522  loss_rpn_bbox: 0.1244  loss_cls: 0.3252  acc: 87.1094  loss_bbox: nan
2025/05/19 14:39:45 - mmengine - INFO - Epoch(train) [24][100/141]  lr: 2.0000e-04  eta: 0:05:22  time: 0.3605  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.0572  loss_rpn_bbox: 0.1290  loss_cls: 0.3402  acc: 85.6445  loss_bbox: nan
2025/05/19 14:40:00 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:40:02 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:40:03 - mmengine - INFO - bbox_mAP_copypaste: 0.435 0.731 0.482 -1.000 0.288 0.461
2025/05/19 14:40:03 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.4350  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.4820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2880  coco/bbox_mAP_l: 0.4610  data_time: 0.0014  time: 0.0371
2025/05/19 14:40:21 - mmengine - INFO - Epoch(train) [25][ 50/141]  lr: 2.0000e-04  eta: 0:04:48  time: 0.3626  data_time: 0.0049  memory: 4359  loss: nan  loss_rpn_cls: 0.0587  loss_rpn_bbox: 0.1282  loss_cls: 0.3240  acc: 88.2812  loss_bbox: nan
2025/05/19 14:40:39 - mmengine - INFO - Epoch(train) [25][100/141]  lr: 2.0000e-04  eta: 0:04:30  time: 0.3605  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0564  loss_rpn_bbox: 0.1270  loss_cls: 0.3389  acc: 87.1582  loss_bbox: nan
2025/05/19 14:40:54 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:40:56 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:40:57 - mmengine - INFO - bbox_mAP_copypaste: 0.433 0.729 0.475 -1.000 0.288 0.459
2025/05/19 14:40:57 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.4330  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.4750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2880  coco/bbox_mAP_l: 0.4590  data_time: 0.0016  time: 0.0371
2025/05/19 14:41:16 - mmengine - INFO - Epoch(train) [26][ 50/141]  lr: 2.0000e-04  eta: 0:03:57  time: 0.3622  data_time: 0.0049  memory: 4359  loss: nan  loss_rpn_cls: 0.0569  loss_rpn_bbox: 0.1232  loss_cls: 0.3209  acc: 85.4980  loss_bbox: nan
2025/05/19 14:41:34 - mmengine - INFO - Epoch(train) [26][100/141]  lr: 2.0000e-04  eta: 0:03:39  time: 0.3620  data_time: 0.0024  memory: 4359  loss: nan  loss_rpn_cls: 0.0564  loss_rpn_bbox: 0.1248  loss_cls: 0.3255  acc: 87.1094  loss_bbox: nan
2025/05/19 14:41:48 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:41:50 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:41:52 - mmengine - INFO - bbox_mAP_copypaste: 0.426 0.733 0.459 -1.000 0.277 0.452
2025/05/19 14:41:52 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.4260  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.4590  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2770  coco/bbox_mAP_l: 0.4520  data_time: 0.0016  time: 0.0367
2025/05/19 14:42:10 - mmengine - INFO - Epoch(train) [27][ 50/141]  lr: 2.0000e-04  eta: 0:03:06  time: 0.3667  data_time: 0.0051  memory: 4359  loss: nan  loss_rpn_cls: 0.0587  loss_rpn_bbox: 0.1301  loss_cls: 0.3403  acc: 87.5000  loss_bbox: nan
2025/05/19 14:42:28 - mmengine - INFO - Epoch(train) [27][100/141]  lr: 2.0000e-04  eta: 0:02:48  time: 0.3601  data_time: 0.0022  memory: 4358  loss: nan  loss_rpn_cls: 0.0569  loss_rpn_bbox: 0.1288  loss_cls: 0.3329  acc: 90.7227  loss_bbox: nan
2025/05/19 14:42:43 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:42:45 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:42:46 - mmengine - INFO - bbox_mAP_copypaste: 0.439 0.733 0.485 -1.000 0.292 0.465
2025/05/19 14:42:46 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.4390  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.4850  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2920  coco/bbox_mAP_l: 0.4650  data_time: 0.0016  time: 0.0370
2025/05/19 14:42:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_15.pth is removed
2025/05/19 14:42:47 - mmengine - INFO - The best checkpoint with 0.4390 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2025/05/19 14:43:05 - mmengine - INFO - Epoch(train) [28][ 50/141]  lr: 2.0000e-04  eta: 0:02:15  time: 0.3657  data_time: 0.0052  memory: 4359  loss: nan  loss_rpn_cls: 0.0574  loss_rpn_bbox: 0.1282  loss_cls: 0.3394  acc: 87.0605  loss_bbox: nan
2025/05/19 14:43:23 - mmengine - INFO - Epoch(train) [28][100/141]  lr: 2.0000e-04  eta: 0:01:57  time: 0.3589  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0559  loss_rpn_bbox: 0.1291  loss_cls: 0.3268  acc: 87.1582  loss_bbox: nan
2025/05/19 14:43:38 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:43:40 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:43:41 - mmengine - INFO - bbox_mAP_copypaste: 0.428 0.724 0.469 -1.000 0.279 0.454
2025/05/19 14:43:41 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.4280  coco/bbox_mAP_50: 0.7240  coco/bbox_mAP_75: 0.4690  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2790  coco/bbox_mAP_l: 0.4540  data_time: 0.0015  time: 0.0370
2025/05/19 14:44:00 - mmengine - INFO - Epoch(train) [29][ 50/141]  lr: 2.0000e-04  eta: 0:01:24  time: 0.3651  data_time: 0.0050  memory: 4359  loss: nan  loss_rpn_cls: 0.0562  loss_rpn_bbox: 0.1256  loss_cls: 0.3186  acc: 85.2539  loss_bbox: nan
2025/05/19 14:44:00 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:44:18 - mmengine - INFO - Epoch(train) [29][100/141]  lr: 2.0000e-04  eta: 0:01:06  time: 0.3617  data_time: 0.0023  memory: 4359  loss: nan  loss_rpn_cls: 0.0569  loss_rpn_bbox: 0.1255  loss_cls: 0.3330  acc: 85.7422  loss_bbox: nan
2025/05/19 14:44:32 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:44:34 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:44:36 - mmengine - INFO - bbox_mAP_copypaste: 0.435 0.732 0.481 -1.000 0.288 0.460
2025/05/19 14:44:36 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.4350  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.4810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2880  coco/bbox_mAP_l: 0.4600  data_time: 0.0016  time: 0.0371
2025/05/19 14:44:54 - mmengine - INFO - Epoch(train) [30][ 50/141]  lr: 2.0000e-04  eta: 0:00:33  time: 0.3657  data_time: 0.0050  memory: 4358  loss: nan  loss_rpn_cls: 0.0537  loss_rpn_bbox: 0.1261  loss_cls: 0.3289  acc: 87.5977  loss_bbox: nan
2025/05/19 14:45:12 - mmengine - INFO - Epoch(train) [30][100/141]  lr: 2.0000e-04  eta: 0:00:14  time: 0.3571  data_time: 0.0023  memory: 4358  loss: nan  loss_rpn_cls: 0.0545  loss_rpn_bbox: 0.1269  loss_cls: 0.3283  acc: 90.9668  loss_bbox: nan
2025/05/19 14:45:27 - mmengine - INFO - Exp name: fasterrcnn_fs_shear_xy_20250519_141750
2025/05/19 14:45:27 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/19 14:45:30 - mmengine - INFO - Evaluating bbox...
2025/05/19 14:45:31 - mmengine - INFO - bbox_mAP_copypaste: 0.436 0.729 0.492 -1.000 0.292 0.462
2025/05/19 14:45:31 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.4360  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.4920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2920  coco/bbox_mAP_l: 0.4620  data_time: 0.0015  time: 0.0367
