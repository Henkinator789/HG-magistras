2025/05/13 21:29:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 160818946
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 160818946
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/13 21:29:05 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=4,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.02, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=4,
    dataset=dict(
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='PhotoMetricDistortion'),
            dict(type='RandomAffine'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='PhotoMetricDistortion'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/fasterrcnn'

2025/05/13 21:29:06 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/13 21:29:06 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/13 21:29:07 - mmengine - INFO - load model from: torchvision://resnet50
2025/05/13 21:29:07 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2025/05/13 21:29:07 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([5, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([16, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([16]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2025/05/13 21:29:07 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/13 21:29:07 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/13 21:29:07 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\fasterrcnn.
2025/05/13 21:29:31 - mmengine - INFO - Epoch(train)  [1][ 50/141]  lr: 1.9820e-03  eta: 0:32:32  time: 0.4671  data_time: 0.0942  memory: 4362  loss: 2.1113  loss_rpn_cls: 0.6543  loss_rpn_bbox: 0.2829  loss_cls: 0.8046  acc: 81.4941  loss_bbox: 0.3695
2025/05/13 21:29:49 - mmengine - INFO - Epoch(train)  [1][100/141]  lr: 3.9840e-03  eta: 0:28:55  time: 0.3733  data_time: 0.0042  memory: 4362  loss: 1.9323  loss_rpn_cls: 0.3804  loss_rpn_bbox: 0.2713  loss_cls: 0.7052  acc: 75.0000  loss_bbox: 0.5754
2025/05/13 21:30:04 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:30:15 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:30:16 - mmengine - INFO - bbox_mAP_copypaste: 0.055 0.166 0.012 -1.000 0.005 0.061
2025/05/13 21:30:16 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0550  coco/bbox_mAP_50: 0.1660  coco/bbox_mAP_75: 0.0120  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0050  coco/bbox_mAP_l: 0.0610  data_time: 0.1658  time: 0.2072
2025/05/13 21:30:17 - mmengine - INFO - The best checkpoint with 0.0550 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/13 21:30:36 - mmengine - INFO - Epoch(train)  [2][ 50/141]  lr: 7.6276e-03  eta: 0:26:48  time: 0.3784  data_time: 0.0078  memory: 4362  loss: 1.7731  loss_rpn_cls: 0.2449  loss_rpn_bbox: 0.2439  loss_cls: 0.6237  acc: 78.5156  loss_bbox: 0.6607
2025/05/13 21:30:54 - mmengine - INFO - Epoch(train)  [2][100/141]  lr: 9.6296e-03  eta: 0:26:02  time: 0.3660  data_time: 0.0044  memory: 4362  loss: 1.7132  loss_rpn_cls: 0.1958  loss_rpn_bbox: 0.2469  loss_cls: 0.6220  acc: 81.2500  loss_bbox: 0.6485
2025/05/13 21:31:09 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:31:11 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:31:13 - mmengine - INFO - bbox_mAP_copypaste: 0.104 0.200 0.093 -1.000 0.076 0.108
2025/05/13 21:31:13 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.1040  coco/bbox_mAP_50: 0.2000  coco/bbox_mAP_75: 0.0930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0760  coco/bbox_mAP_l: 0.1080  data_time: 0.0018  time: 0.0377
2025/05/13 21:31:13 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/13 21:31:13 - mmengine - INFO - The best checkpoint with 0.1040 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/13 21:31:32 - mmengine - INFO - Epoch(train)  [3][ 50/141]  lr: 1.3273e-02  eta: 0:25:04  time: 0.3739  data_time: 0.0083  memory: 4362  loss: 1.5144  loss_rpn_cls: 0.1525  loss_rpn_bbox: 0.2050  loss_cls: 0.5602  acc: 82.1777  loss_bbox: 0.5966
2025/05/13 21:31:50 - mmengine - INFO - Epoch(train)  [3][100/141]  lr: 1.5275e-02  eta: 0:24:33  time: 0.3642  data_time: 0.0043  memory: 4362  loss: 1.4598  loss_rpn_cls: 0.1321  loss_rpn_bbox: 0.2064  loss_cls: 0.5525  acc: 81.4453  loss_bbox: 0.5689
2025/05/13 21:32:05 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:32:07 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:32:08 - mmengine - INFO - bbox_mAP_copypaste: 0.129 0.289 0.086 -1.000 0.061 0.144
2025/05/13 21:32:08 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.1290  coco/bbox_mAP_50: 0.2890  coco/bbox_mAP_75: 0.0860  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0610  coco/bbox_mAP_l: 0.1440  data_time: 0.0017  time: 0.0375
2025/05/13 21:32:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/13 21:32:09 - mmengine - INFO - The best checkpoint with 0.1290 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/13 21:32:28 - mmengine - INFO - Epoch(train)  [4][ 50/141]  lr: 1.8919e-02  eta: 0:23:47  time: 0.3728  data_time: 0.0077  memory: 4363  loss: 1.3474  loss_rpn_cls: 0.1097  loss_rpn_bbox: 0.1891  loss_cls: 0.5111  acc: 87.0605  loss_bbox: 0.5375
2025/05/13 21:32:46 - mmengine - INFO - Epoch(train)  [4][100/141]  lr: 2.0000e-02  eta: 0:23:22  time: 0.3621  data_time: 0.0044  memory: 4362  loss: 1.3639  loss_rpn_cls: 0.1243  loss_rpn_bbox: 0.1874  loss_cls: 0.5268  acc: 83.7891  loss_bbox: 0.5253
2025/05/13 21:33:01 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:33:03 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:33:04 - mmengine - INFO - bbox_mAP_copypaste: 0.239 0.464 0.201 -1.000 0.152 0.257
2025/05/13 21:33:04 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.2390  coco/bbox_mAP_50: 0.4640  coco/bbox_mAP_75: 0.2010  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1520  coco/bbox_mAP_l: 0.2570  data_time: 0.0016  time: 0.0376
2025/05/13 21:33:04 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/13 21:33:05 - mmengine - INFO - The best checkpoint with 0.2390 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/13 21:33:23 - mmengine - INFO - Epoch(train)  [5][ 50/141]  lr: 2.0000e-02  eta: 0:22:41  time: 0.3682  data_time: 0.0081  memory: 4362  loss: 1.3409  loss_rpn_cls: 0.1098  loss_rpn_bbox: 0.1768  loss_cls: 0.5372  acc: 81.6406  loss_bbox: 0.5172
2025/05/13 21:33:42 - mmengine - INFO - Epoch(train)  [5][100/141]  lr: 2.0000e-02  eta: 0:22:19  time: 0.3668  data_time: 0.0043  memory: 4362  loss: 1.2344  loss_rpn_cls: 0.0937  loss_rpn_bbox: 0.1654  loss_cls: 0.4821  acc: 87.2559  loss_bbox: 0.4931
2025/05/13 21:33:57 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:33:59 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:34:00 - mmengine - INFO - bbox_mAP_copypaste: 0.293 0.518 0.311 -1.000 0.167 0.321
2025/05/13 21:34:00 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.2930  coco/bbox_mAP_50: 0.5180  coco/bbox_mAP_75: 0.3110  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1670  coco/bbox_mAP_l: 0.3210  data_time: 0.0015  time: 0.0376
2025/05/13 21:34:00 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/13 21:34:01 - mmengine - INFO - The best checkpoint with 0.2930 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2025/05/13 21:34:19 - mmengine - INFO - Epoch(train)  [6][ 50/141]  lr: 2.0000e-02  eta: 0:21:41  time: 0.3705  data_time: 0.0078  memory: 4362  loss: 1.1678  loss_rpn_cls: 0.0821  loss_rpn_bbox: 0.1630  loss_cls: 0.4458  acc: 84.3750  loss_bbox: 0.4770
2025/05/13 21:34:38 - mmengine - INFO - Epoch(train)  [6][100/141]  lr: 2.0000e-02  eta: 0:21:21  time: 0.3652  data_time: 0.0043  memory: 4362  loss: 1.1834  loss_rpn_cls: 0.0762  loss_rpn_bbox: 0.1594  loss_cls: 0.4627  acc: 88.4277  loss_bbox: 0.4852
2025/05/13 21:34:52 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:34:54 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:34:56 - mmengine - INFO - bbox_mAP_copypaste: 0.242 0.499 0.184 -1.000 0.207 0.257
2025/05/13 21:34:56 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.2420  coco/bbox_mAP_50: 0.4990  coco/bbox_mAP_75: 0.1840  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2070  coco/bbox_mAP_l: 0.2570  data_time: 0.0015  time: 0.0373
2025/05/13 21:35:14 - mmengine - INFO - Epoch(train)  [7][ 50/141]  lr: 2.0000e-02  eta: 0:20:44  time: 0.3691  data_time: 0.0077  memory: 4362  loss: 1.1602  loss_rpn_cls: 0.0814  loss_rpn_bbox: 0.1590  loss_cls: 0.4439  acc: 83.7825  loss_bbox: 0.4759
2025/05/13 21:35:33 - mmengine - INFO - Epoch(train)  [7][100/141]  lr: 2.0000e-02  eta: 0:20:25  time: 0.3703  data_time: 0.0043  memory: 4362  loss: 1.1258  loss_rpn_cls: 0.0764  loss_rpn_bbox: 0.1516  loss_cls: 0.4330  acc: 83.1055  loss_bbox: 0.4647
2025/05/13 21:35:47 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:35:49 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:35:51 - mmengine - INFO - bbox_mAP_copypaste: 0.214 0.482 0.130 -1.000 0.122 0.234
2025/05/13 21:35:51 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.2140  coco/bbox_mAP_50: 0.4820  coco/bbox_mAP_75: 0.1300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1220  coco/bbox_mAP_l: 0.2340  data_time: 0.0015  time: 0.0373
2025/05/13 21:35:56 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:36:09 - mmengine - INFO - Epoch(train)  [8][ 50/141]  lr: 2.0000e-02  eta: 0:19:48  time: 0.3681  data_time: 0.0077  memory: 4362  loss: 1.1338  loss_rpn_cls: 0.0708  loss_rpn_bbox: 0.1465  loss_cls: 0.4434  acc: 86.2793  loss_bbox: 0.4729
2025/05/13 21:36:27 - mmengine - INFO - Epoch(train)  [8][100/141]  lr: 2.0000e-02  eta: 0:19:28  time: 0.3649  data_time: 0.0043  memory: 4362  loss: 1.1148  loss_rpn_cls: 0.0746  loss_rpn_bbox: 0.1549  loss_cls: 0.4175  acc: 86.4746  loss_bbox: 0.4677
2025/05/13 21:36:42 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:36:44 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:36:46 - mmengine - INFO - bbox_mAP_copypaste: 0.295 0.531 0.296 -1.000 0.189 0.317
2025/05/13 21:36:46 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.2950  coco/bbox_mAP_50: 0.5310  coco/bbox_mAP_75: 0.2960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1890  coco/bbox_mAP_l: 0.3170  data_time: 0.0016  time: 0.0375
2025/05/13 21:36:46 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_5.pth is removed
2025/05/13 21:36:47 - mmengine - INFO - The best checkpoint with 0.2950 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/13 21:37:05 - mmengine - INFO - Epoch(train)  [9][ 50/141]  lr: 2.0000e-03  eta: 0:18:54  time: 0.3726  data_time: 0.0079  memory: 4362  loss: 1.0348  loss_rpn_cls: 0.0646  loss_rpn_bbox: 0.1374  loss_cls: 0.3874  acc: 87.7930  loss_bbox: 0.4455
2025/05/13 21:37:24 - mmengine - INFO - Epoch(train)  [9][100/141]  lr: 2.0000e-03  eta: 0:18:34  time: 0.3651  data_time: 0.0041  memory: 4362  loss: 0.9706  loss_rpn_cls: 0.0558  loss_rpn_bbox: 0.1270  loss_cls: 0.3641  acc: 86.7676  loss_bbox: 0.4237
2025/05/13 21:37:39 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:37:40 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:37:42 - mmengine - INFO - bbox_mAP_copypaste: 0.342 0.624 0.338 -1.000 0.203 0.369
2025/05/13 21:37:42 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.3420  coco/bbox_mAP_50: 0.6240  coco/bbox_mAP_75: 0.3380  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2030  coco/bbox_mAP_l: 0.3690  data_time: 0.0017  time: 0.0375
2025/05/13 21:37:42 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/13 21:37:43 - mmengine - INFO - The best checkpoint with 0.3420 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/13 21:38:01 - mmengine - INFO - Epoch(train) [10][ 50/141]  lr: 2.0000e-03  eta: 0:18:00  time: 0.3688  data_time: 0.0080  memory: 4362  loss: 0.9857  loss_rpn_cls: 0.0590  loss_rpn_bbox: 0.1273  loss_cls: 0.3659  acc: 87.0605  loss_bbox: 0.4335
2025/05/13 21:38:19 - mmengine - INFO - Epoch(train) [10][100/141]  lr: 2.0000e-03  eta: 0:17:41  time: 0.3650  data_time: 0.0042  memory: 4362  loss: 0.9533  loss_rpn_cls: 0.0541  loss_rpn_bbox: 0.1261  loss_cls: 0.3524  acc: 90.0879  loss_bbox: 0.4206
2025/05/13 21:38:34 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:38:36 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:38:38 - mmengine - INFO - bbox_mAP_copypaste: 0.344 0.632 0.334 -1.000 0.207 0.372
2025/05/13 21:38:38 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.3440  coco/bbox_mAP_50: 0.6320  coco/bbox_mAP_75: 0.3340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2070  coco/bbox_mAP_l: 0.3720  data_time: 0.0015  time: 0.0380
2025/05/13 21:38:38 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/13 21:38:39 - mmengine - INFO - The best checkpoint with 0.3440 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2025/05/13 21:38:57 - mmengine - INFO - Epoch(train) [11][ 50/141]  lr: 2.0000e-03  eta: 0:17:07  time: 0.3727  data_time: 0.0079  memory: 4362  loss: 0.9490  loss_rpn_cls: 0.0555  loss_rpn_bbox: 0.1264  loss_cls: 0.3477  acc: 85.6445  loss_bbox: 0.4193
2025/05/13 21:39:16 - mmengine - INFO - Epoch(train) [11][100/141]  lr: 2.0000e-03  eta: 0:16:47  time: 0.3649  data_time: 0.0042  memory: 4362  loss: 0.9663  loss_rpn_cls: 0.0603  loss_rpn_bbox: 0.1287  loss_cls: 0.3488  acc: 88.0859  loss_bbox: 0.4286
2025/05/13 21:39:30 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:39:32 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:39:34 - mmengine - INFO - bbox_mAP_copypaste: 0.343 0.636 0.336 -1.000 0.196 0.373
2025/05/13 21:39:34 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.3430  coco/bbox_mAP_50: 0.6360  coco/bbox_mAP_75: 0.3360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1960  coco/bbox_mAP_l: 0.3730  data_time: 0.0017  time: 0.0375
2025/05/13 21:39:52 - mmengine - INFO - Epoch(train) [12][ 50/141]  lr: 2.0000e-04  eta: 0:16:14  time: 0.3730  data_time: 0.0079  memory: 4362  loss: 0.9350  loss_rpn_cls: 0.0526  loss_rpn_bbox: 0.1236  loss_cls: 0.3446  acc: 85.4980  loss_bbox: 0.4142
2025/05/13 21:40:11 - mmengine - INFO - Epoch(train) [12][100/141]  lr: 2.0000e-04  eta: 0:15:55  time: 0.3652  data_time: 0.0043  memory: 4362  loss: 0.9403  loss_rpn_cls: 0.0517  loss_rpn_bbox: 0.1248  loss_cls: 0.3463  acc: 86.0840  loss_bbox: 0.4175
2025/05/13 21:40:26 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:40:27 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:40:29 - mmengine - INFO - bbox_mAP_copypaste: 0.340 0.640 0.329 -1.000 0.208 0.368
2025/05/13 21:40:29 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.3400  coco/bbox_mAP_50: 0.6400  coco/bbox_mAP_75: 0.3290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2080  coco/bbox_mAP_l: 0.3680  data_time: 0.0015  time: 0.0371
2025/05/13 21:40:47 - mmengine - INFO - Epoch(train) [13][ 50/141]  lr: 2.0000e-04  eta: 0:15:20  time: 0.3699  data_time: 0.0078  memory: 4362  loss: 0.9400  loss_rpn_cls: 0.0540  loss_rpn_bbox: 0.1240  loss_cls: 0.3448  acc: 87.7930  loss_bbox: 0.4171
2025/05/13 21:41:06 - mmengine - INFO - Epoch(train) [13][100/141]  lr: 2.0000e-04  eta: 0:15:02  time: 0.3670  data_time: 0.0044  memory: 4362  loss: 0.9395  loss_rpn_cls: 0.0514  loss_rpn_bbox: 0.1239  loss_cls: 0.3425  acc: 88.3301  loss_bbox: 0.4217
2025/05/13 21:41:21 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:41:23 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:41:24 - mmengine - INFO - bbox_mAP_copypaste: 0.349 0.643 0.345 -1.000 0.216 0.376
2025/05/13 21:41:24 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.3490  coco/bbox_mAP_50: 0.6430  coco/bbox_mAP_75: 0.3450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2160  coco/bbox_mAP_l: 0.3760  data_time: 0.0015  time: 0.0373
2025/05/13 21:41:24 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_10.pth is removed
2025/05/13 21:41:25 - mmengine - INFO - The best checkpoint with 0.3490 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2025/05/13 21:41:44 - mmengine - INFO - Epoch(train) [14][ 50/141]  lr: 2.0000e-04  eta: 0:14:28  time: 0.3750  data_time: 0.0077  memory: 4362  loss: 0.9654  loss_rpn_cls: 0.0534  loss_rpn_bbox: 0.1291  loss_cls: 0.3567  acc: 88.1836  loss_bbox: 0.4262
2025/05/13 21:42:02 - mmengine - INFO - Epoch(train) [14][100/141]  lr: 2.0000e-04  eta: 0:14:09  time: 0.3648  data_time: 0.0043  memory: 4362  loss: 0.9172  loss_rpn_cls: 0.0509  loss_rpn_bbox: 0.1213  loss_cls: 0.3347  acc: 88.4766  loss_bbox: 0.4104
2025/05/13 21:42:17 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:42:18 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:42:20 - mmengine - INFO - bbox_mAP_copypaste: 0.352 0.644 0.356 -1.000 0.230 0.379
2025/05/13 21:42:20 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.3520  coco/bbox_mAP_50: 0.6440  coco/bbox_mAP_75: 0.3560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2300  coco/bbox_mAP_l: 0.3790  data_time: 0.0017  time: 0.0371
2025/05/13 21:42:20 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_13.pth is removed
2025/05/13 21:42:21 - mmengine - INFO - The best checkpoint with 0.3520 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/13 21:42:31 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:42:39 - mmengine - INFO - Epoch(train) [15][ 50/141]  lr: 2.0000e-04  eta: 0:13:35  time: 0.3728  data_time: 0.0076  memory: 4362  loss: 0.9261  loss_rpn_cls: 0.0540  loss_rpn_bbox: 0.1255  loss_cls: 0.3322  acc: 86.2793  loss_bbox: 0.4144
2025/05/13 21:42:58 - mmengine - INFO - Epoch(train) [15][100/141]  lr: 2.0000e-04  eta: 0:13:17  time: 0.3703  data_time: 0.0043  memory: 4362  loss: 0.9173  loss_rpn_cls: 0.0499  loss_rpn_bbox: 0.1211  loss_cls: 0.3382  acc: 86.3770  loss_bbox: 0.4080
2025/05/13 21:43:13 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:43:15 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:43:16 - mmengine - INFO - bbox_mAP_copypaste: 0.350 0.642 0.355 -1.000 0.227 0.378
2025/05/13 21:43:16 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.3500  coco/bbox_mAP_50: 0.6420  coco/bbox_mAP_75: 0.3550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.3780  data_time: 0.0017  time: 0.0375
2025/05/13 21:43:35 - mmengine - INFO - Epoch(train) [16][ 50/141]  lr: 2.0000e-04  eta: 0:12:43  time: 0.3698  data_time: 0.0076  memory: 4362  loss: 0.9320  loss_rpn_cls: 0.0529  loss_rpn_bbox: 0.1231  loss_cls: 0.3401  acc: 85.2539  loss_bbox: 0.4159
2025/05/13 21:43:53 - mmengine - INFO - Epoch(train) [16][100/141]  lr: 2.0000e-04  eta: 0:12:24  time: 0.3691  data_time: 0.0044  memory: 4362  loss: 0.9309  loss_rpn_cls: 0.0514  loss_rpn_bbox: 0.1257  loss_cls: 0.3413  acc: 88.0859  loss_bbox: 0.4125
2025/05/13 21:44:08 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:44:10 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:44:11 - mmengine - INFO - bbox_mAP_copypaste: 0.344 0.642 0.338 -1.000 0.223 0.370
2025/05/13 21:44:11 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.3440  coco/bbox_mAP_50: 0.6420  coco/bbox_mAP_75: 0.3380  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2230  coco/bbox_mAP_l: 0.3700  data_time: 0.0016  time: 0.0372
2025/05/13 21:44:30 - mmengine - INFO - Epoch(train) [17][ 50/141]  lr: 2.0000e-04  eta: 0:11:50  time: 0.3670  data_time: 0.0079  memory: 4362  loss: 0.9290  loss_rpn_cls: 0.0525  loss_rpn_bbox: 0.1251  loss_cls: 0.3301  acc: 86.8652  loss_bbox: 0.4213
2025/05/13 21:44:48 - mmengine - INFO - Epoch(train) [17][100/141]  lr: 2.0000e-04  eta: 0:11:32  time: 0.3655  data_time: 0.0043  memory: 4362  loss: 0.9354  loss_rpn_cls: 0.0479  loss_rpn_bbox: 0.1249  loss_cls: 0.3458  acc: 85.4004  loss_bbox: 0.4168
2025/05/13 21:45:03 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:45:05 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:45:06 - mmengine - INFO - bbox_mAP_copypaste: 0.356 0.646 0.363 -1.000 0.226 0.383
2025/05/13 21:45:06 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.3560  coco/bbox_mAP_50: 0.6460  coco/bbox_mAP_75: 0.3630  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2260  coco/bbox_mAP_l: 0.3830  data_time: 0.0016  time: 0.0372
2025/05/13 21:45:06 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/13 21:45:07 - mmengine - INFO - The best checkpoint with 0.3560 coco/bbox_mAP at 17 epoch is saved to best_coco_bbox_mAP_epoch_17.pth.
2025/05/13 21:45:26 - mmengine - INFO - Epoch(train) [18][ 50/141]  lr: 2.0000e-04  eta: 0:10:58  time: 0.3736  data_time: 0.0076  memory: 4362  loss: 0.9378  loss_rpn_cls: 0.0537  loss_rpn_bbox: 0.1265  loss_cls: 0.3371  acc: 87.3535  loss_bbox: 0.4206
2025/05/13 21:45:44 - mmengine - INFO - Epoch(train) [18][100/141]  lr: 2.0000e-04  eta: 0:10:40  time: 0.3691  data_time: 0.0042  memory: 4362  loss: 0.9205  loss_rpn_cls: 0.0526  loss_rpn_bbox: 0.1222  loss_cls: 0.3379  acc: 90.0391  loss_bbox: 0.4078
2025/05/13 21:46:00 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:46:02 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:46:03 - mmengine - INFO - bbox_mAP_copypaste: 0.349 0.643 0.347 -1.000 0.217 0.377
2025/05/13 21:46:03 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.3490  coco/bbox_mAP_50: 0.6430  coco/bbox_mAP_75: 0.3470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2170  coco/bbox_mAP_l: 0.3770  data_time: 0.0016  time: 0.0386
2025/05/13 21:46:21 - mmengine - INFO - Epoch(train) [19][ 50/141]  lr: 2.0000e-04  eta: 0:10:06  time: 0.3680  data_time: 0.0077  memory: 4362  loss: 0.9278  loss_rpn_cls: 0.0513  loss_rpn_bbox: 0.1235  loss_cls: 0.3381  acc: 85.8887  loss_bbox: 0.4149
2025/05/13 21:46:40 - mmengine - INFO - Epoch(train) [19][100/141]  lr: 2.0000e-04  eta: 0:09:48  time: 0.3675  data_time: 0.0044  memory: 4362  loss: 0.9357  loss_rpn_cls: 0.0526  loss_rpn_bbox: 0.1242  loss_cls: 0.3425  acc: 86.3281  loss_bbox: 0.4164
2025/05/13 21:46:55 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:46:57 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:46:58 - mmengine - INFO - bbox_mAP_copypaste: 0.349 0.644 0.349 -1.000 0.218 0.377
2025/05/13 21:46:58 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.3490  coco/bbox_mAP_50: 0.6440  coco/bbox_mAP_75: 0.3490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2180  coco/bbox_mAP_l: 0.3770  data_time: 0.0017  time: 0.0377
2025/05/13 21:47:17 - mmengine - INFO - Epoch(train) [20][ 50/141]  lr: 2.0000e-04  eta: 0:09:14  time: 0.3715  data_time: 0.0077  memory: 4362  loss: 0.9200  loss_rpn_cls: 0.0500  loss_rpn_bbox: 0.1237  loss_cls: 0.3370  acc: 88.0859  loss_bbox: 0.4093
2025/05/13 21:47:35 - mmengine - INFO - Epoch(train) [20][100/141]  lr: 2.0000e-04  eta: 0:08:55  time: 0.3683  data_time: 0.0044  memory: 4362  loss: 0.9199  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.1210  loss_cls: 0.3324  acc: 88.9648  loss_bbox: 0.4171
2025/05/13 21:47:50 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:47:52 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:47:53 - mmengine - INFO - bbox_mAP_copypaste: 0.359 0.645 0.365 -1.000 0.222 0.387
2025/05/13 21:47:53 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.3590  coco/bbox_mAP_50: 0.6450  coco/bbox_mAP_75: 0.3650  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2220  coco/bbox_mAP_l: 0.3870  data_time: 0.0017  time: 0.0374
2025/05/13 21:47:53 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\fasterrcnn\best_coco_bbox_mAP_epoch_17.pth is removed
2025/05/13 21:47:54 - mmengine - INFO - The best checkpoint with 0.3590 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2025/05/13 21:48:13 - mmengine - INFO - Epoch(train) [21][ 50/141]  lr: 2.0000e-04  eta: 0:08:22  time: 0.3775  data_time: 0.0077  memory: 4362  loss: 0.9383  loss_rpn_cls: 0.0517  loss_rpn_bbox: 0.1264  loss_cls: 0.3428  acc: 88.5742  loss_bbox: 0.4174
2025/05/13 21:48:31 - mmengine - INFO - Epoch(train) [21][100/141]  lr: 2.0000e-04  eta: 0:08:03  time: 0.3665  data_time: 0.0043  memory: 4362  loss: 0.9248  loss_rpn_cls: 0.0512  loss_rpn_bbox: 0.1242  loss_cls: 0.3392  acc: 88.2812  loss_bbox: 0.4102
2025/05/13 21:48:46 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:48:48 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:48:50 - mmengine - INFO - bbox_mAP_copypaste: 0.351 0.645 0.350 -1.000 0.227 0.378
2025/05/13 21:48:50 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.3510  coco/bbox_mAP_50: 0.6450  coco/bbox_mAP_75: 0.3500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2270  coco/bbox_mAP_l: 0.3780  data_time: 0.0017  time: 0.0375
2025/05/13 21:49:04 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:49:08 - mmengine - INFO - Epoch(train) [22][ 50/141]  lr: 2.0000e-04  eta: 0:07:30  time: 0.3712  data_time: 0.0078  memory: 4362  loss: 0.9398  loss_rpn_cls: 0.0533  loss_rpn_bbox: 0.1232  loss_cls: 0.3436  acc: 88.0371  loss_bbox: 0.4197
2025/05/13 21:49:27 - mmengine - INFO - Epoch(train) [22][100/141]  lr: 2.0000e-04  eta: 0:07:11  time: 0.3675  data_time: 0.0043  memory: 4362  loss: 0.9219  loss_rpn_cls: 0.0499  loss_rpn_bbox: 0.1243  loss_cls: 0.3354  acc: 89.6484  loss_bbox: 0.4123
2025/05/13 21:49:42 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:49:43 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:49:45 - mmengine - INFO - bbox_mAP_copypaste: 0.350 0.644 0.347 -1.000 0.219 0.377
2025/05/13 21:49:45 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.3500  coco/bbox_mAP_50: 0.6440  coco/bbox_mAP_75: 0.3470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2190  coco/bbox_mAP_l: 0.3770  data_time: 0.0016  time: 0.0374
2025/05/13 21:50:03 - mmengine - INFO - Epoch(train) [23][ 50/141]  lr: 2.0000e-04  eta: 0:06:38  time: 0.3721  data_time: 0.0079  memory: 4362  loss: 0.9475  loss_rpn_cls: 0.0530  loss_rpn_bbox: 0.1242  loss_cls: 0.3481  acc: 85.7910  loss_bbox: 0.4223
2025/05/13 21:50:22 - mmengine - INFO - Epoch(train) [23][100/141]  lr: 2.0000e-04  eta: 0:06:19  time: 0.3676  data_time: 0.0043  memory: 4362  loss: 0.9289  loss_rpn_cls: 0.0499  loss_rpn_bbox: 0.1239  loss_cls: 0.3367  acc: 88.1348  loss_bbox: 0.4183
2025/05/13 21:50:37 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:50:39 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:50:40 - mmengine - INFO - bbox_mAP_copypaste: 0.344 0.647 0.333 -1.000 0.214 0.372
2025/05/13 21:50:40 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.3440  coco/bbox_mAP_50: 0.6470  coco/bbox_mAP_75: 0.3330  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2140  coco/bbox_mAP_l: 0.3720  data_time: 0.0016  time: 0.0374
2025/05/13 21:50:59 - mmengine - INFO - Epoch(train) [24][ 50/141]  lr: 2.0000e-04  eta: 0:05:45  time: 0.3726  data_time: 0.0076  memory: 4362  loss: 0.9057  loss_rpn_cls: 0.0473  loss_rpn_bbox: 0.1211  loss_cls: 0.3321  acc: 85.3027  loss_bbox: 0.4051
2025/05/13 21:51:17 - mmengine - INFO - Epoch(train) [24][100/141]  lr: 2.0000e-04  eta: 0:05:27  time: 0.3706  data_time: 0.0042  memory: 4362  loss: 0.9370  loss_rpn_cls: 0.0516  loss_rpn_bbox: 0.1243  loss_cls: 0.3419  acc: 88.6230  loss_bbox: 0.4192
2025/05/13 21:51:32 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:51:34 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:51:36 - mmengine - INFO - bbox_mAP_copypaste: 0.351 0.651 0.346 -1.000 0.223 0.378
2025/05/13 21:51:36 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.3510  coco/bbox_mAP_50: 0.6510  coco/bbox_mAP_75: 0.3460  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2230  coco/bbox_mAP_l: 0.3780  data_time: 0.0015  time: 0.0376
2025/05/13 21:51:54 - mmengine - INFO - Epoch(train) [25][ 50/141]  lr: 2.0000e-04  eta: 0:04:53  time: 0.3706  data_time: 0.0077  memory: 4362  loss: 0.9210  loss_rpn_cls: 0.0500  loss_rpn_bbox: 0.1230  loss_cls: 0.3403  acc: 85.8887  loss_bbox: 0.4076
2025/05/13 21:52:12 - mmengine - INFO - Epoch(train) [25][100/141]  lr: 2.0000e-04  eta: 0:04:35  time: 0.3635  data_time: 0.0042  memory: 4362  loss: 0.9337  loss_rpn_cls: 0.0491  loss_rpn_bbox: 0.1230  loss_cls: 0.3428  acc: 88.6719  loss_bbox: 0.4188
2025/05/13 21:52:27 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:52:29 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:52:31 - mmengine - INFO - bbox_mAP_copypaste: 0.358 0.647 0.366 -1.000 0.222 0.386
2025/05/13 21:52:31 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.3580  coco/bbox_mAP_50: 0.6470  coco/bbox_mAP_75: 0.3660  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2220  coco/bbox_mAP_l: 0.3860  data_time: 0.0014  time: 0.0372
2025/05/13 21:52:49 - mmengine - INFO - Epoch(train) [26][ 50/141]  lr: 2.0000e-04  eta: 0:04:01  time: 0.3682  data_time: 0.0079  memory: 4362  loss: 0.9448  loss_rpn_cls: 0.0534  loss_rpn_bbox: 0.1280  loss_cls: 0.3387  acc: 87.9395  loss_bbox: 0.4247
2025/05/13 21:53:07 - mmengine - INFO - Epoch(train) [26][100/141]  lr: 2.0000e-04  eta: 0:03:43  time: 0.3661  data_time: 0.0043  memory: 4362  loss: 0.9113  loss_rpn_cls: 0.0489  loss_rpn_bbox: 0.1190  loss_cls: 0.3340  acc: 89.6973  loss_bbox: 0.4095
2025/05/13 21:53:22 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:53:24 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:53:26 - mmengine - INFO - bbox_mAP_copypaste: 0.358 0.653 0.362 -1.000 0.231 0.385
2025/05/13 21:53:26 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.3580  coco/bbox_mAP_50: 0.6530  coco/bbox_mAP_75: 0.3620  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2310  coco/bbox_mAP_l: 0.3850  data_time: 0.0016  time: 0.0375
2025/05/13 21:53:44 - mmengine - INFO - Epoch(train) [27][ 50/141]  lr: 2.0000e-04  eta: 0:03:09  time: 0.3732  data_time: 0.0077  memory: 4362  loss: 0.9166  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.1226  loss_cls: 0.3328  acc: 83.6914  loss_bbox: 0.4118
2025/05/13 21:54:03 - mmengine - INFO - Epoch(train) [27][100/141]  lr: 2.0000e-04  eta: 0:02:51  time: 0.3670  data_time: 0.0042  memory: 4362  loss: 0.9377  loss_rpn_cls: 0.0524  loss_rpn_bbox: 0.1266  loss_cls: 0.3419  acc: 87.4512  loss_bbox: 0.4169
2025/05/13 21:54:18 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:54:19 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:54:21 - mmengine - INFO - bbox_mAP_copypaste: 0.348 0.646 0.338 -1.000 0.215 0.375
2025/05/13 21:54:21 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.3480  coco/bbox_mAP_50: 0.6460  coco/bbox_mAP_75: 0.3380  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2150  coco/bbox_mAP_l: 0.3750  data_time: 0.0016  time: 0.0380
2025/05/13 21:54:39 - mmengine - INFO - Epoch(train) [28][ 50/141]  lr: 2.0000e-04  eta: 0:02:17  time: 0.3722  data_time: 0.0077  memory: 4362  loss: 0.9284  loss_rpn_cls: 0.0516  loss_rpn_bbox: 0.1243  loss_cls: 0.3395  acc: 84.8145  loss_bbox: 0.4130
2025/05/13 21:54:58 - mmengine - INFO - Epoch(train) [28][100/141]  lr: 2.0000e-04  eta: 0:01:59  time: 0.3661  data_time: 0.0045  memory: 4362  loss: 0.9222  loss_rpn_cls: 0.0505  loss_rpn_bbox: 0.1231  loss_cls: 0.3344  acc: 87.2559  loss_bbox: 0.4142
2025/05/13 21:55:13 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:55:15 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:55:16 - mmengine - INFO - bbox_mAP_copypaste: 0.353 0.642 0.356 -1.000 0.214 0.382
2025/05/13 21:55:16 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.3530  coco/bbox_mAP_50: 0.6420  coco/bbox_mAP_75: 0.3560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2140  coco/bbox_mAP_l: 0.3820  data_time: 0.0016  time: 0.0372
2025/05/13 21:55:35 - mmengine - INFO - Epoch(train) [29][ 50/141]  lr: 2.0000e-04  eta: 0:01:25  time: 0.3758  data_time: 0.0079  memory: 4362  loss: 0.9127  loss_rpn_cls: 0.0521  loss_rpn_bbox: 0.1217  loss_cls: 0.3285  acc: 85.9375  loss_bbox: 0.4105
2025/05/13 21:55:35 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:55:53 - mmengine - INFO - Epoch(train) [29][100/141]  lr: 2.0000e-04  eta: 0:01:07  time: 0.3651  data_time: 0.0042  memory: 4362  loss: 0.9272  loss_rpn_cls: 0.0530  loss_rpn_bbox: 0.1211  loss_cls: 0.3355  acc: 83.5449  loss_bbox: 0.4175
2025/05/13 21:56:08 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:56:10 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:56:11 - mmengine - INFO - bbox_mAP_copypaste: 0.346 0.647 0.336 -1.000 0.207 0.374
2025/05/13 21:56:11 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.3460  coco/bbox_mAP_50: 0.6470  coco/bbox_mAP_75: 0.3360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2070  coco/bbox_mAP_l: 0.3740  data_time: 0.0016  time: 0.0373
2025/05/13 21:56:30 - mmengine - INFO - Epoch(train) [30][ 50/141]  lr: 2.0000e-04  eta: 0:00:33  time: 0.3701  data_time: 0.0078  memory: 4362  loss: 0.9075  loss_rpn_cls: 0.0507  loss_rpn_bbox: 0.1216  loss_cls: 0.3293  acc: 85.3027  loss_bbox: 0.4060
2025/05/13 21:56:48 - mmengine - INFO - Epoch(train) [30][100/141]  lr: 2.0000e-04  eta: 0:00:15  time: 0.3661  data_time: 0.0042  memory: 4362  loss: 0.9250  loss_rpn_cls: 0.0469  loss_rpn_bbox: 0.1237  loss_cls: 0.3407  acc: 86.5234  loss_bbox: 0.4137
2025/05/13 21:57:03 - mmengine - INFO - Exp name: fasterrcnn_fs_pmd_aff_20250513_212901
2025/05/13 21:57:03 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/13 21:57:07 - mmengine - INFO - Evaluating bbox...
2025/05/13 21:57:08 - mmengine - INFO - bbox_mAP_copypaste: 0.352 0.654 0.343 -1.000 0.213 0.380
2025/05/13 21:57:08 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.3520  coco/bbox_mAP_50: 0.6540  coco/bbox_mAP_75: 0.3430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2130  coco/bbox_mAP_l: 0.3800  data_time: 0.0017  time: 0.0382
