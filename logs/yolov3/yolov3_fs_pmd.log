2025/05/11 20:18:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1265423311
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1265423311
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/11 20:18:15 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        0,
        0,
        0,
    ],
    pad_size_divisor=32,
    std=[
        255.0,
        255.0,
        255.0,
    ],
    type='DetDataPreprocessor')
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        depth=53,
        init_cfg=dict(checkpoint='open-mmlab://darknet53', type='Pretrained'),
        out_indices=(
            3,
            4,
            5,
        ),
        type='Darknet'),
    bbox_head=dict(
        anchor_generator=dict(
            base_sizes=[
                [
                    (
                        116,
                        90,
                    ),
                    (
                        156,
                        198,
                    ),
                    (
                        373,
                        326,
                    ),
                ],
                [
                    (
                        30,
                        61,
                    ),
                    (
                        62,
                        45,
                    ),
                    (
                        59,
                        119,
                    ),
                ],
                [
                    (
                        10,
                        13,
                    ),
                    (
                        16,
                        30,
                    ),
                    (
                        33,
                        23,
                    ),
                ],
            ],
            strides=[
                32,
                16,
                8,
            ],
            type='YOLOAnchorGenerator'),
        bbox_coder=dict(type='YOLOBBoxCoder'),
        featmap_strides=[
            32,
            16,
            8,
        ],
        in_channels=[
            512,
            256,
            128,
        ],
        loss_cls=dict(
            loss_weight=1.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        loss_conf=dict(
            loss_weight=1.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        loss_wh=dict(loss_weight=2.0, reduction='sum', type='MSELoss'),
        loss_xy=dict(
            loss_weight=2.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=4,
        out_channels=[
            1024,
            512,
            256,
        ],
        type='YOLOV3Head'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            0,
            0,
            0,
        ],
        pad_size_divisor=32,
        std=[
            255.0,
            255.0,
            255.0,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            1024,
            512,
            256,
        ],
        num_scales=3,
        out_channels=[
            512,
            256,
            128,
        ],
        type='YOLOV3Neck'),
    test_cfg=dict(
        conf_thr=0.005,
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.45, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        assigner=dict(
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='GridAssigner')),
    type='YOLOV3')
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=2000, start_factor=0.1, type='LinearLR'),
    dict(
        by_epoch=True, gamma=0.1, milestones=[
            218,
            246,
        ], type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                416,
                416,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        416,
        416,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=4,
    dataset=dict(
        ann_file='train/annotations.json',
        backend_args=None,
        data_prefix=dict(img='train/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                416,
                416,
            ), type='Resize'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        416,
        416,
    ), type='Resize'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                416,
                416,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/yolov3'

2025/05/11 20:18:16 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/11 20:18:16 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/11 20:18:18 - mmengine - INFO - load model from: open-mmlab://darknet53
2025/05/11 20:18:18 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://darknet53
Name of parameter - Initialization information

backbone.conv1.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

neck.detect1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv3.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv4.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv5.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.conv.weight - torch.Size([256, 768, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv4.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv5.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.conv.weight - torch.Size([128, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv4.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv5.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_pred.0.weight - torch.Size([27, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.0.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.weight - torch.Size([27, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.weight - torch.Size([27, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  
2025/05/11 20:18:18 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/11 20:18:18 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/11 20:18:18 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\yolov3.
2025/05/11 20:18:31 - mmengine - INFO - Epoch(train)  [1][ 50/141]  lr: 1.2206e-04  eta: 0:18:06  time: 0.2599  data_time: 0.0918  memory: 2033  grad_norm: 7720.6481  loss: 5246.8222  loss_cls: 1741.7974  loss_conf: 2292.4138  loss_xy: 1104.9860  loss_wh: 107.6251
2025/05/11 20:18:39 - mmengine - INFO - Epoch(train)  [1][100/141]  lr: 1.4457e-04  eta: 0:14:34  time: 0.1638  data_time: 0.0029  memory: 2033  grad_norm: 6803.7678  loss: 4065.7410  loss_cls: 1252.5795  loss_conf: 1651.0673  loss_xy: 1086.7549  loss_wh: 75.3394
2025/05/11 20:18:46 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:18:55 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:18:56 - mmengine - INFO - bbox_mAP_copypaste: 0.073 0.175 0.034 -1.000 0.038 0.080
2025/05/11 20:18:56 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0730  coco/bbox_mAP_50: 0.1750  coco/bbox_mAP_75: 0.0340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0380  coco/bbox_mAP_l: 0.0800  data_time: 0.1669  time: 0.1868
2025/05/11 20:18:57 - mmengine - INFO - The best checkpoint with 0.0730 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/11 20:19:06 - mmengine - INFO - Epoch(train)  [2][ 50/141]  lr: 1.8554e-04  eta: 0:12:47  time: 0.1693  data_time: 0.0055  memory: 2033  grad_norm: 5681.5024  loss: 2901.7386  loss_cls: 798.9558  loss_conf: 1116.3766  loss_xy: 939.5087  loss_wh: 46.8976
2025/05/11 20:19:14 - mmengine - INFO - Epoch(train)  [2][100/141]  lr: 2.0805e-04  eta: 0:12:15  time: 0.1621  data_time: 0.0030  memory: 2033  grad_norm: 5983.2801  loss: 2927.9033  loss_cls: 820.1259  loss_conf: 1083.7621  loss_xy: 979.0948  loss_wh: 44.9205
2025/05/11 20:19:20 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:19:21 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:19:23 - mmengine - INFO - bbox_mAP_copypaste: 0.092 0.191 0.068 -1.000 0.058 0.095
2025/05/11 20:19:23 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0920  coco/bbox_mAP_50: 0.1910  coco/bbox_mAP_75: 0.0680  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0580  coco/bbox_mAP_l: 0.0950  data_time: 0.0038  time: 0.0196
2025/05/11 20:19:23 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/11 20:19:24 - mmengine - INFO - The best checkpoint with 0.0920 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/11 20:19:32 - mmengine - INFO - Epoch(train)  [3][ 50/141]  lr: 2.4902e-04  eta: 0:11:36  time: 0.1667  data_time: 0.0055  memory: 2033  grad_norm: 5723.0962  loss: 2637.3947  loss_cls: 720.8525  loss_conf: 957.2722  loss_xy: 920.4181  loss_wh: 38.8520
2025/05/11 20:19:40 - mmengine - INFO - Epoch(train)  [3][100/141]  lr: 2.7154e-04  eta: 0:11:19  time: 0.1628  data_time: 0.0029  memory: 2033  grad_norm: 6163.3277  loss: 2757.2633  loss_cls: 736.7709  loss_conf: 990.8367  loss_xy: 991.7247  loss_wh: 37.9311
2025/05/11 20:19:47 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:19:48 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:19:49 - mmengine - INFO - bbox_mAP_copypaste: 0.124 0.246 0.100 -1.000 0.069 0.135
2025/05/11 20:19:49 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.1240  coco/bbox_mAP_50: 0.2460  coco/bbox_mAP_75: 0.1000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0690  coco/bbox_mAP_l: 0.1350  data_time: 0.0046  time: 0.0195
2025/05/11 20:19:49 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/11 20:19:51 - mmengine - INFO - The best checkpoint with 0.1240 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/11 20:19:59 - mmengine - INFO - Epoch(train)  [4][ 50/141]  lr: 3.1251e-04  eta: 0:10:54  time: 0.1697  data_time: 0.0056  memory: 2033  grad_norm: 5902.7825  loss: 2547.9283  loss_cls: 653.5595  loss_conf: 907.9575  loss_xy: 950.1997  loss_wh: 36.2116
2025/05/11 20:20:07 - mmengine - INFO - Epoch(train)  [4][100/141]  lr: 3.3502e-04  eta: 0:10:42  time: 0.1643  data_time: 0.0031  memory: 2033  grad_norm: 5789.9009  loss: 2425.6285  loss_cls: 579.5745  loss_conf: 875.3236  loss_xy: 938.1822  loss_wh: 32.5482
2025/05/11 20:20:14 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:20:15 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:20:16 - mmengine - INFO - bbox_mAP_copypaste: 0.175 0.354 0.144 -1.000 0.123 0.188
2025/05/11 20:20:16 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.1750  coco/bbox_mAP_50: 0.3540  coco/bbox_mAP_75: 0.1440  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1230  coco/bbox_mAP_l: 0.1880  data_time: 0.0054  time: 0.0197
2025/05/11 20:20:16 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/11 20:20:18 - mmengine - INFO - The best checkpoint with 0.1750 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/11 20:20:26 - mmengine - INFO - Epoch(train)  [5][ 50/141]  lr: 3.7599e-04  eta: 0:10:20  time: 0.1669  data_time: 0.0055  memory: 2033  grad_norm: 5800.9696  loss: 2263.8412  loss_cls: 524.1135  loss_conf: 806.9751  loss_xy: 902.7094  loss_wh: 30.0432
2025/05/11 20:20:34 - mmengine - INFO - Epoch(train)  [5][100/141]  lr: 3.9850e-04  eta: 0:10:09  time: 0.1599  data_time: 0.0028  memory: 2033  grad_norm: 5969.2656  loss: 2327.2532  loss_cls: 532.0777  loss_conf: 825.7508  loss_xy: 937.3966  loss_wh: 32.0280
2025/05/11 20:20:40 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:20:41 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:20:43 - mmengine - INFO - bbox_mAP_copypaste: 0.120 0.260 0.081 -1.000 0.070 0.129
2025/05/11 20:20:43 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.1200  coco/bbox_mAP_50: 0.2600  coco/bbox_mAP_75: 0.0810  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0700  coco/bbox_mAP_l: 0.1290  data_time: 0.0043  time: 0.0196
2025/05/11 20:20:51 - mmengine - INFO - Epoch(train)  [6][ 50/141]  lr: 4.3947e-04  eta: 0:09:50  time: 0.1656  data_time: 0.0058  memory: 2033  grad_norm: 6182.9397  loss: 2228.1619  loss_cls: 484.6177  loss_conf: 776.9888  loss_xy: 935.6443  loss_wh: 30.9112
2025/05/11 20:20:59 - mmengine - INFO - Epoch(train)  [6][100/141]  lr: 4.6198e-04  eta: 0:09:39  time: 0.1601  data_time: 0.0032  memory: 2033  grad_norm: 6110.5481  loss: 2189.8836  loss_cls: 461.3573  loss_conf: 778.6258  loss_xy: 920.9151  loss_wh: 28.9854
2025/05/11 20:21:06 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:21:07 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:21:08 - mmengine - INFO - bbox_mAP_copypaste: 0.183 0.361 0.155 -1.000 0.113 0.199
2025/05/11 20:21:08 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.1830  coco/bbox_mAP_50: 0.3610  coco/bbox_mAP_75: 0.1550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1130  coco/bbox_mAP_l: 0.1990  data_time: 0.0045  time: 0.0197
2025/05/11 20:21:08 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/11 20:21:09 - mmengine - INFO - The best checkpoint with 0.1830 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2025/05/11 20:21:18 - mmengine - INFO - Epoch(train)  [7][ 50/141]  lr: 5.0295e-04  eta: 0:09:22  time: 0.1701  data_time: 0.0055  memory: 2033  grad_norm: 6719.2776  loss: 2152.0343  loss_cls: 437.7386  loss_conf: 769.0217  loss_xy: 916.1443  loss_wh: 29.1296
2025/05/11 20:21:26 - mmengine - INFO - Epoch(train)  [7][100/141]  lr: 5.2546e-04  eta: 0:09:13  time: 0.1603  data_time: 0.0028  memory: 2033  grad_norm: 5846.9259  loss: 2138.8144  loss_cls: 436.0037  loss_conf: 751.0106  loss_xy: 921.8831  loss_wh: 29.9171
2025/05/11 20:21:33 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:21:33 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:21:35 - mmengine - INFO - bbox_mAP_copypaste: 0.227 0.521 0.144 -1.000 0.203 0.242
2025/05/11 20:21:35 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.2270  coco/bbox_mAP_50: 0.5210  coco/bbox_mAP_75: 0.1440  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2030  coco/bbox_mAP_l: 0.2420  data_time: 0.0037  time: 0.0195
2025/05/11 20:21:35 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_6.pth is removed
2025/05/11 20:21:36 - mmengine - INFO - The best checkpoint with 0.2270 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/11 20:21:39 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:21:45 - mmengine - INFO - Epoch(train)  [8][ 50/141]  lr: 5.6643e-04  eta: 0:08:56  time: 0.1699  data_time: 0.0061  memory: 2033  grad_norm: 6502.7357  loss: 2012.6195  loss_cls: 410.7370  loss_conf: 694.5627  loss_xy: 878.2053  loss_wh: 29.1145
2025/05/11 20:21:53 - mmengine - INFO - Epoch(train)  [8][100/141]  lr: 5.8894e-04  eta: 0:08:47  time: 0.1638  data_time: 0.0031  memory: 2033  grad_norm: 6243.3267  loss: 2125.0981  loss_cls: 426.7883  loss_conf: 724.8450  loss_xy: 944.3388  loss_wh: 29.1259
2025/05/11 20:22:00 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:22:01 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:22:02 - mmengine - INFO - bbox_mAP_copypaste: 0.255 0.496 0.216 -1.000 0.165 0.278
2025/05/11 20:22:02 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.2550  coco/bbox_mAP_50: 0.4960  coco/bbox_mAP_75: 0.2160  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1650  coco/bbox_mAP_l: 0.2780  data_time: 0.0041  time: 0.0190
2025/05/11 20:22:02 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/11 20:22:03 - mmengine - INFO - The best checkpoint with 0.2550 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2025/05/11 20:22:12 - mmengine - INFO - Epoch(train)  [9][ 50/141]  lr: 6.2991e-04  eta: 0:08:31  time: 0.1676  data_time: 0.0061  memory: 2033  grad_norm: 5943.2654  loss: 1951.9061  loss_cls: 352.3322  loss_conf: 668.6647  loss_xy: 904.2777  loss_wh: 26.6315
2025/05/11 20:22:20 - mmengine - INFO - Epoch(train)  [9][100/141]  lr: 6.5243e-04  eta: 0:08:22  time: 0.1632  data_time: 0.0029  memory: 2033  grad_norm: 6097.9548  loss: 2064.3750  loss_cls: 387.7764  loss_conf: 692.4594  loss_xy: 954.1535  loss_wh: 29.9857
2025/05/11 20:22:26 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:22:27 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:22:29 - mmengine - INFO - bbox_mAP_copypaste: 0.178 0.483 0.086 -1.000 0.239 0.185
2025/05/11 20:22:29 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.1780  coco/bbox_mAP_50: 0.4830  coco/bbox_mAP_75: 0.0860  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.2390  coco/bbox_mAP_l: 0.1850  data_time: 0.0031  time: 0.0186
2025/05/11 20:22:37 - mmengine - INFO - Epoch(train) [10][ 50/141]  lr: 6.9340e-04  eta: 0:08:06  time: 0.1646  data_time: 0.0056  memory: 2033  grad_norm: 5959.9847  loss: 1851.9839  loss_cls: 324.9412  loss_conf: 605.8676  loss_xy: 890.7988  loss_wh: 30.3763
2025/05/11 20:22:45 - mmengine - INFO - Epoch(train) [10][100/141]  lr: 7.1591e-04  eta: 0:07:57  time: 0.1654  data_time: 0.0029  memory: 2033  grad_norm: 6382.2697  loss: 1992.9038  loss_cls: 367.1676  loss_conf: 654.3863  loss_xy: 945.0122  loss_wh: 26.3376
2025/05/11 20:22:52 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:22:53 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:22:54 - mmengine - INFO - bbox_mAP_copypaste: 0.275 0.574 0.206 -1.000 0.170 0.298
2025/05/11 20:22:54 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.2750  coco/bbox_mAP_50: 0.5740  coco/bbox_mAP_75: 0.2060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1700  coco/bbox_mAP_l: 0.2980  data_time: 0.0037  time: 0.0190
2025/05/11 20:22:54 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_8.pth is removed
2025/05/11 20:22:55 - mmengine - INFO - The best checkpoint with 0.2750 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2025/05/11 20:23:04 - mmengine - INFO - Epoch(train) [11][ 50/141]  lr: 7.5688e-04  eta: 0:07:42  time: 0.1716  data_time: 0.0056  memory: 2033  grad_norm: 6355.3760  loss: 1925.4331  loss_cls: 357.8428  loss_conf: 596.3533  loss_xy: 943.3696  loss_wh: 27.8674
2025/05/11 20:23:12 - mmengine - INFO - Epoch(train) [11][100/141]  lr: 7.7939e-04  eta: 0:07:33  time: 0.1568  data_time: 0.0029  memory: 2033  grad_norm: 6207.3250  loss: 1753.7662  loss_cls: 291.1315  loss_conf: 565.3094  loss_xy: 871.7105  loss_wh: 25.6148
2025/05/11 20:23:18 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:23:19 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:23:21 - mmengine - INFO - bbox_mAP_copypaste: 0.291 0.561 0.255 -1.000 0.190 0.312
2025/05/11 20:23:21 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.2910  coco/bbox_mAP_50: 0.5610  coco/bbox_mAP_75: 0.2550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1900  coco/bbox_mAP_l: 0.3120  data_time: 0.0044  time: 0.0188
2025/05/11 20:23:21 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_10.pth is removed
2025/05/11 20:23:22 - mmengine - INFO - The best checkpoint with 0.2910 coco/bbox_mAP at 11 epoch is saved to best_coco_bbox_mAP_epoch_11.pth.
2025/05/11 20:23:31 - mmengine - INFO - Epoch(train) [12][ 50/141]  lr: 8.2036e-04  eta: 0:07:17  time: 0.1685  data_time: 0.0055  memory: 2033  grad_norm: 5818.2804  loss: 1693.5396  loss_cls: 271.1129  loss_conf: 502.5175  loss_xy: 896.4453  loss_wh: 23.4639
2025/05/11 20:23:39 - mmengine - INFO - Epoch(train) [12][100/141]  lr: 8.4287e-04  eta: 0:07:08  time: 0.1624  data_time: 0.0028  memory: 2033  grad_norm: 6709.5243  loss: 1862.6738  loss_cls: 307.7652  loss_conf: 580.0462  loss_xy: 949.0512  loss_wh: 25.8112
2025/05/11 20:23:45 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:23:46 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:23:48 - mmengine - INFO - bbox_mAP_copypaste: 0.267 0.526 0.221 -1.000 0.182 0.284
2025/05/11 20:23:48 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.2670  coco/bbox_mAP_50: 0.5260  coco/bbox_mAP_75: 0.2210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1820  coco/bbox_mAP_l: 0.2840  data_time: 0.0043  time: 0.0193
2025/05/11 20:23:56 - mmengine - INFO - Epoch(train) [13][ 50/141]  lr: 8.8384e-04  eta: 0:06:52  time: 0.1626  data_time: 0.0053  memory: 2033  grad_norm: 6851.2881  loss: 1742.7510  loss_cls: 280.0566  loss_conf: 515.6214  loss_xy: 921.7416  loss_wh: 25.3315
2025/05/11 20:24:04 - mmengine - INFO - Epoch(train) [13][100/141]  lr: 9.0635e-04  eta: 0:06:44  time: 0.1590  data_time: 0.0029  memory: 2033  grad_norm: 6741.2464  loss: 1708.9661  loss_cls: 283.9965  loss_conf: 486.0418  loss_xy: 908.3584  loss_wh: 30.5693
2025/05/11 20:24:10 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:24:11 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:24:12 - mmengine - INFO - bbox_mAP_copypaste: 0.263 0.516 0.220 -1.000 0.166 0.280
2025/05/11 20:24:12 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.2630  coco/bbox_mAP_50: 0.5160  coco/bbox_mAP_75: 0.2200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1660  coco/bbox_mAP_l: 0.2800  data_time: 0.0043  time: 0.0192
2025/05/11 20:24:21 - mmengine - INFO - Epoch(train) [14][ 50/141]  lr: 9.4732e-04  eta: 0:06:28  time: 0.1641  data_time: 0.0055  memory: 2033  grad_norm: 6423.6281  loss: 1552.5610  loss_cls: 236.2412  loss_conf: 420.8604  loss_xy: 872.1977  loss_wh: 23.2616
2025/05/11 20:24:29 - mmengine - INFO - Epoch(train) [14][100/141]  lr: 9.6983e-04  eta: 0:06:19  time: 0.1608  data_time: 0.0028  memory: 2033  grad_norm: 7187.1233  loss: 1672.1281  loss_cls: 268.5286  loss_conf: 475.7180  loss_xy: 900.5202  loss_wh: 27.3614
2025/05/11 20:24:35 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:24:36 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:24:38 - mmengine - INFO - bbox_mAP_copypaste: 0.246 0.487 0.214 -1.000 0.139 0.264
2025/05/11 20:24:38 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.2460  coco/bbox_mAP_50: 0.4870  coco/bbox_mAP_75: 0.2140  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1390  coco/bbox_mAP_l: 0.2640  data_time: 0.0045  time: 0.0194
2025/05/11 20:24:42 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:24:46 - mmengine - INFO - Epoch(train) [15][ 50/141]  lr: 1.0000e-03  eta: 0:06:04  time: 0.1682  data_time: 0.0055  memory: 2033  grad_norm: 6490.9366  loss: 1553.8849  loss_cls: 220.3439  loss_conf: 393.2621  loss_xy: 912.8137  loss_wh: 27.4653
2025/05/11 20:24:54 - mmengine - INFO - Epoch(train) [15][100/141]  lr: 1.0000e-03  eta: 0:05:56  time: 0.1601  data_time: 0.0028  memory: 2033  grad_norm: 7125.0234  loss: 1560.3846  loss_cls: 220.5673  loss_conf: 409.3431  loss_xy: 901.2137  loss_wh: 29.2605
2025/05/11 20:25:01 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:25:02 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:25:03 - mmengine - INFO - bbox_mAP_copypaste: 0.275 0.535 0.250 -1.000 0.160 0.293
2025/05/11 20:25:03 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.2750  coco/bbox_mAP_50: 0.5350  coco/bbox_mAP_75: 0.2500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1600  coco/bbox_mAP_l: 0.2930  data_time: 0.0056  time: 0.0202
2025/05/11 20:25:11 - mmengine - INFO - Epoch(train) [16][ 50/141]  lr: 1.0000e-03  eta: 0:05:40  time: 0.1649  data_time: 0.0054  memory: 2033  grad_norm: 6333.0520  loss: 1424.7980  loss_cls: 166.3209  loss_conf: 328.2835  loss_xy: 901.2647  loss_wh: 28.9290
2025/05/11 20:25:19 - mmengine - INFO - Epoch(train) [16][100/141]  lr: 1.0000e-03  eta: 0:05:32  time: 0.1594  data_time: 0.0029  memory: 2033  grad_norm: 6946.0702  loss: 1470.5099  loss_cls: 188.8999  loss_conf: 344.1488  loss_xy: 910.8310  loss_wh: 26.6302
2025/05/11 20:25:26 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:25:27 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:25:28 - mmengine - INFO - bbox_mAP_copypaste: 0.266 0.516 0.239 -1.000 0.192 0.287
2025/05/11 20:25:28 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.2660  coco/bbox_mAP_50: 0.5160  coco/bbox_mAP_75: 0.2390  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1920  coco/bbox_mAP_l: 0.2870  data_time: 0.0038  time: 0.0194
2025/05/11 20:25:37 - mmengine - INFO - Epoch(train) [17][ 50/141]  lr: 1.0000e-03  eta: 0:05:17  time: 0.1623  data_time: 0.0054  memory: 2033  grad_norm: 5919.3421  loss: 1267.0998  loss_cls: 131.9715  loss_conf: 256.8591  loss_xy: 853.6774  loss_wh: 24.5918
2025/05/11 20:25:45 - mmengine - INFO - Epoch(train) [17][100/141]  lr: 1.0000e-03  eta: 0:05:08  time: 0.1593  data_time: 0.0029  memory: 2033  grad_norm: 6952.8418  loss: 1364.7940  loss_cls: 150.7216  loss_conf: 299.7126  loss_xy: 891.3093  loss_wh: 23.0505
2025/05/11 20:25:51 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:25:52 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:25:54 - mmengine - INFO - bbox_mAP_copypaste: 0.248 0.498 0.214 -1.000 0.158 0.264
2025/05/11 20:25:54 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.2480  coco/bbox_mAP_50: 0.4980  coco/bbox_mAP_75: 0.2140  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1580  coco/bbox_mAP_l: 0.2640  data_time: 0.0040  time: 0.0189
2025/05/11 20:26:02 - mmengine - INFO - Epoch(train) [18][ 50/141]  lr: 1.0000e-03  eta: 0:04:53  time: 0.1663  data_time: 0.0057  memory: 2033  grad_norm: 6389.5667  loss: 1322.1439  loss_cls: 125.1478  loss_conf: 253.3455  loss_xy: 917.4092  loss_wh: 26.2414
2025/05/11 20:26:10 - mmengine - INFO - Epoch(train) [18][100/141]  lr: 1.0000e-03  eta: 0:04:45  time: 0.1612  data_time: 0.0029  memory: 2033  grad_norm: 6378.4317  loss: 1284.5648  loss_cls: 124.3330  loss_conf: 244.1326  loss_xy: 891.4248  loss_wh: 24.6744
2025/05/11 20:26:16 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:26:17 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:26:19 - mmengine - INFO - bbox_mAP_copypaste: 0.256 0.519 0.214 -1.000 0.135 0.280
2025/05/11 20:26:19 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.2560  coco/bbox_mAP_50: 0.5190  coco/bbox_mAP_75: 0.2140  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1350  coco/bbox_mAP_l: 0.2800  data_time: 0.0050  time: 0.0193
2025/05/11 20:26:27 - mmengine - INFO - Epoch(train) [19][ 50/141]  lr: 1.0000e-03  eta: 0:04:30  time: 0.1661  data_time: 0.0056  memory: 2033  grad_norm: 6406.9077  loss: 1225.5810  loss_cls: 108.5632  loss_conf: 211.8641  loss_xy: 882.0876  loss_wh: 23.0661
2025/05/11 20:26:35 - mmengine - INFO - Epoch(train) [19][100/141]  lr: 1.0000e-03  eta: 0:04:21  time: 0.1623  data_time: 0.0030  memory: 2033  grad_norm: 6926.5570  loss: 1272.2458  loss_cls: 115.1882  loss_conf: 231.5668  loss_xy: 895.8862  loss_wh: 29.6046
2025/05/11 20:26:42 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:26:43 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:26:44 - mmengine - INFO - bbox_mAP_copypaste: 0.273 0.543 0.240 -1.000 0.165 0.293
2025/05/11 20:26:44 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.2730  coco/bbox_mAP_50: 0.5430  coco/bbox_mAP_75: 0.2400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1650  coco/bbox_mAP_l: 0.2930  data_time: 0.0042  time: 0.0190
2025/05/11 20:26:52 - mmengine - INFO - Epoch(train) [20][ 50/141]  lr: 1.0000e-03  eta: 0:04:06  time: 0.1648  data_time: 0.0055  memory: 2033  grad_norm: 6253.6317  loss: 1218.3662  loss_cls: 101.8253  loss_conf: 186.0972  loss_xy: 905.9478  loss_wh: 24.4958
2025/05/11 20:27:00 - mmengine - INFO - Epoch(train) [20][100/141]  lr: 1.0000e-03  eta: 0:03:58  time: 0.1574  data_time: 0.0029  memory: 2033  grad_norm: 6226.3759  loss: 1150.3394  loss_cls: 80.4030  loss_conf: 191.5813  loss_xy: 855.1349  loss_wh: 23.2202
2025/05/11 20:27:07 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:27:08 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:27:09 - mmengine - INFO - bbox_mAP_copypaste: 0.253 0.493 0.217 -1.000 0.146 0.276
2025/05/11 20:27:09 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.2530  coco/bbox_mAP_50: 0.4930  coco/bbox_mAP_75: 0.2170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1460  coco/bbox_mAP_l: 0.2760  data_time: 0.0042  time: 0.0186
2025/05/11 20:27:17 - mmengine - INFO - Epoch(train) [21][ 50/141]  lr: 1.0000e-03  eta: 0:03:43  time: 0.1628  data_time: 0.0054  memory: 2033  grad_norm: 5763.8138  loss: 1122.2667  loss_cls: 72.6290  loss_conf: 155.3265  loss_xy: 871.0534  loss_wh: 23.2578
2025/05/11 20:27:26 - mmengine - INFO - Epoch(train) [21][100/141]  lr: 1.0000e-03  eta: 0:03:34  time: 0.1616  data_time: 0.0028  memory: 2033  grad_norm: 6684.7315  loss: 1212.1073  loss_cls: 80.8300  loss_conf: 191.9833  loss_xy: 914.1702  loss_wh: 25.1239
2025/05/11 20:27:32 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:27:33 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:27:34 - mmengine - INFO - bbox_mAP_copypaste: 0.248 0.486 0.216 -1.000 0.111 0.270
2025/05/11 20:27:34 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.2480  coco/bbox_mAP_50: 0.4860  coco/bbox_mAP_75: 0.2160  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1110  coco/bbox_mAP_l: 0.2700  data_time: 0.0041  time: 0.0191
2025/05/11 20:27:41 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:27:43 - mmengine - INFO - Epoch(train) [22][ 50/141]  lr: 1.0000e-03  eta: 0:03:19  time: 0.1634  data_time: 0.0055  memory: 2033  grad_norm: 5719.3875  loss: 1118.8195  loss_cls: 68.2157  loss_conf: 141.0264  loss_xy: 884.9713  loss_wh: 24.6060
2025/05/11 20:27:51 - mmengine - INFO - Epoch(train) [22][100/141]  lr: 1.0000e-03  eta: 0:03:11  time: 0.1580  data_time: 0.0027  memory: 2033  grad_norm: 6180.9684  loss: 1116.6297  loss_cls: 71.5189  loss_conf: 143.6923  loss_xy: 873.6148  loss_wh: 27.8037
2025/05/11 20:27:57 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:27:58 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:28:00 - mmengine - INFO - bbox_mAP_copypaste: 0.222 0.424 0.202 -1.000 0.142 0.240
2025/05/11 20:28:00 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.2220  coco/bbox_mAP_50: 0.4240  coco/bbox_mAP_75: 0.2020  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1420  coco/bbox_mAP_l: 0.2400  data_time: 0.0055  time: 0.0198
2025/05/11 20:28:08 - mmengine - INFO - Epoch(train) [23][ 50/141]  lr: 1.0000e-03  eta: 0:02:56  time: 0.1694  data_time: 0.0053  memory: 2033  grad_norm: 6043.9909  loss: 1154.8626  loss_cls: 69.2245  loss_conf: 137.5963  loss_xy: 922.8439  loss_wh: 25.1980
2025/05/11 20:28:16 - mmengine - INFO - Epoch(train) [23][100/141]  lr: 1.0000e-03  eta: 0:02:48  time: 0.1583  data_time: 0.0030  memory: 2033  grad_norm: 6189.6867  loss: 1088.6700  loss_cls: 66.7430  loss_conf: 136.6422  loss_xy: 860.7328  loss_wh: 24.5520
2025/05/11 20:28:22 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:28:23 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:28:25 - mmengine - INFO - bbox_mAP_copypaste: 0.239 0.499 0.183 -1.000 0.160 0.256
2025/05/11 20:28:25 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.2390  coco/bbox_mAP_50: 0.4990  coco/bbox_mAP_75: 0.1830  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1600  coco/bbox_mAP_l: 0.2560  data_time: 0.0047  time: 0.0188
2025/05/11 20:28:33 - mmengine - INFO - Epoch(train) [24][ 50/141]  lr: 1.0000e-03  eta: 0:02:33  time: 0.1672  data_time: 0.0055  memory: 2033  grad_norm: 5444.4320  loss: 1094.6021  loss_cls: 48.6771  loss_conf: 113.8511  loss_xy: 904.2910  loss_wh: 27.7829
2025/05/11 20:28:41 - mmengine - INFO - Epoch(train) [24][100/141]  lr: 1.0000e-03  eta: 0:02:25  time: 0.1626  data_time: 0.0031  memory: 2033  grad_norm: 5705.9546  loss: 1061.8610  loss_cls: 48.8822  loss_conf: 126.4303  loss_xy: 863.3059  loss_wh: 23.2426
2025/05/11 20:28:48 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:28:49 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:28:50 - mmengine - INFO - bbox_mAP_copypaste: 0.225 0.487 0.156 -1.000 0.144 0.248
2025/05/11 20:28:50 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.2250  coco/bbox_mAP_50: 0.4870  coco/bbox_mAP_75: 0.1560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1440  coco/bbox_mAP_l: 0.2480  data_time: 0.0053  time: 0.0191
2025/05/11 20:28:59 - mmengine - INFO - Epoch(train) [25][ 50/141]  lr: 1.0000e-03  eta: 0:02:10  time: 0.1668  data_time: 0.0054  memory: 2033  grad_norm: 5210.3721  loss: 1056.0399  loss_cls: 42.9879  loss_conf: 98.7976  loss_xy: 889.7813  loss_wh: 24.4732
2025/05/11 20:29:07 - mmengine - INFO - Epoch(train) [25][100/141]  lr: 1.0000e-03  eta: 0:02:02  time: 0.1617  data_time: 0.0031  memory: 2033  grad_norm: 5563.4601  loss: 1077.9220  loss_cls: 47.2576  loss_conf: 112.7402  loss_xy: 893.0093  loss_wh: 24.9149
2025/05/11 20:29:13 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:29:14 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:29:16 - mmengine - INFO - bbox_mAP_copypaste: 0.236 0.458 0.199 -1.000 0.142 0.256
2025/05/11 20:29:16 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.2360  coco/bbox_mAP_50: 0.4580  coco/bbox_mAP_75: 0.1990  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1420  coco/bbox_mAP_l: 0.2560  data_time: 0.0037  time: 0.0192
2025/05/11 20:29:24 - mmengine - INFO - Epoch(train) [26][ 50/141]  lr: 1.0000e-03  eta: 0:01:47  time: 0.1631  data_time: 0.0055  memory: 2033  grad_norm: 5255.4035  loss: 1036.5390  loss_cls: 38.7283  loss_conf: 99.0956  loss_xy: 871.9452  loss_wh: 26.7699
2025/05/11 20:29:32 - mmengine - INFO - Epoch(train) [26][100/141]  lr: 1.0000e-03  eta: 0:01:38  time: 0.1589  data_time: 0.0030  memory: 2033  grad_norm: 5609.0883  loss: 1059.6334  loss_cls: 43.9666  loss_conf: 107.2091  loss_xy: 881.3126  loss_wh: 27.1451
2025/05/11 20:29:38 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:29:39 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:29:41 - mmengine - INFO - bbox_mAP_copypaste: 0.243 0.487 0.208 -1.000 0.145 0.264
2025/05/11 20:29:41 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.2430  coco/bbox_mAP_50: 0.4870  coco/bbox_mAP_75: 0.2080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1450  coco/bbox_mAP_l: 0.2640  data_time: 0.0042  time: 0.0192
2025/05/11 20:29:49 - mmengine - INFO - Epoch(train) [27][ 50/141]  lr: 1.0000e-03  eta: 0:01:24  time: 0.1616  data_time: 0.0056  memory: 2033  grad_norm: 4802.5108  loss: 1007.5948  loss_cls: 29.9779  loss_conf: 83.9669  loss_xy: 868.9180  loss_wh: 24.7319
2025/05/11 20:29:57 - mmengine - INFO - Epoch(train) [27][100/141]  lr: 1.0000e-03  eta: 0:01:15  time: 0.1590  data_time: 0.0030  memory: 2033  grad_norm: 5629.5667  loss: 1026.1023  loss_cls: 43.8727  loss_conf: 87.8297  loss_xy: 864.1406  loss_wh: 30.2594
2025/05/11 20:30:04 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:30:05 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:30:06 - mmengine - INFO - bbox_mAP_copypaste: 0.194 0.464 0.133 -1.000 0.138 0.210
2025/05/11 20:30:06 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.1940  coco/bbox_mAP_50: 0.4640  coco/bbox_mAP_75: 0.1330  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1380  coco/bbox_mAP_l: 0.2100  data_time: 0.0048  time: 0.0196
2025/05/11 20:30:14 - mmengine - INFO - Epoch(train) [28][ 50/141]  lr: 1.0000e-03  eta: 0:01:00  time: 0.1647  data_time: 0.0054  memory: 2033  grad_norm: 5011.2192  loss: 1018.4664  loss_cls: 33.0337  loss_conf: 79.3580  loss_xy: 879.1306  loss_wh: 26.9442
2025/05/11 20:30:22 - mmengine - INFO - Epoch(train) [28][100/141]  lr: 1.0000e-03  eta: 0:00:52  time: 0.1563  data_time: 0.0029  memory: 2033  grad_norm: 5560.2982  loss: 1009.4851  loss_cls: 37.8696  loss_conf: 89.4765  loss_xy: 851.0303  loss_wh: 31.1087
2025/05/11 20:30:29 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:30:30 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:30:31 - mmengine - INFO - bbox_mAP_copypaste: 0.252 0.505 0.209 -1.000 0.170 0.270
2025/05/11 20:30:31 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.2520  coco/bbox_mAP_50: 0.5050  coco/bbox_mAP_75: 0.2090  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1700  coco/bbox_mAP_l: 0.2700  data_time: 0.0044  time: 0.0191
2025/05/11 20:30:39 - mmengine - INFO - Epoch(train) [29][ 50/141]  lr: 1.0000e-03  eta: 0:00:37  time: 0.1622  data_time: 0.0056  memory: 2033  grad_norm: 4992.1692  loss: 955.1841  loss_cls: 34.4166  loss_conf: 73.1220  loss_xy: 825.1014  loss_wh: 22.5441
2025/05/11 20:30:40 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:30:47 - mmengine - INFO - Epoch(train) [29][100/141]  lr: 1.0000e-03  eta: 0:00:29  time: 0.1617  data_time: 0.0030  memory: 2033  grad_norm: 5480.1818  loss: 1031.5731  loss_cls: 41.8039  loss_conf: 83.7029  loss_xy: 876.8196  loss_wh: 29.2468
2025/05/11 20:30:54 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:30:55 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:30:56 - mmengine - INFO - bbox_mAP_copypaste: 0.173 0.433 0.109 -1.000 0.166 0.179
2025/05/11 20:30:56 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.1730  coco/bbox_mAP_50: 0.4330  coco/bbox_mAP_75: 0.1090  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1660  coco/bbox_mAP_l: 0.1790  data_time: 0.0039  time: 0.0190
2025/05/11 20:31:05 - mmengine - INFO - Epoch(train) [30][ 50/141]  lr: 1.0000e-03  eta: 0:00:14  time: 0.1652  data_time: 0.0054  memory: 2033  grad_norm: 5151.8511  loss: 1031.9478  loss_cls: 36.0906  loss_conf: 72.0678  loss_xy: 896.5325  loss_wh: 27.2569
2025/05/11 20:31:13 - mmengine - INFO - Epoch(train) [30][100/141]  lr: 1.0000e-03  eta: 0:00:06  time: 0.1569  data_time: 0.0028  memory: 2033  grad_norm: 5046.0119  loss: 947.6328  loss_cls: 25.1375  loss_conf: 70.6045  loss_xy: 816.9399  loss_wh: 34.9510
2025/05/11 20:31:19 - mmengine - INFO - Exp name: yolov3_fs_pmd_20250511_201811
2025/05/11 20:31:19 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/11 20:31:22 - mmengine - INFO - Evaluating bbox...
2025/05/11 20:31:24 - mmengine - INFO - bbox_mAP_copypaste: 0.234 0.502 0.157 -1.000 0.137 0.257
2025/05/11 20:31:24 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.2340  coco/bbox_mAP_50: 0.5020  coco/bbox_mAP_75: 0.1570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1370  coco/bbox_mAP_l: 0.2570  data_time: 0.0037  time: 0.0209
