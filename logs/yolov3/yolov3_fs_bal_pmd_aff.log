2025/05/11 23:55:25 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1370950187
    GPU 0: NVIDIA GeForce RTX 3070 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6
    NVCC: Cuda compilation tools, release 12.6, V12.6.85
    MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.42.34433 for x64
    GCC: n/a
    PyTorch: 2.1.0+cu118
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192930151
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /utf-8 /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1370950187
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/11 23:55:25 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        0,
        0,
        0,
    ],
    pad_size_divisor=32,
    std=[
        255.0,
        255.0,
        255.0,
    ],
    type='DetDataPreprocessor')
data_root = 'D:/Repositories/test/data/larch_casebearer/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=0, save_best='coco/bbox_mAP', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'H',
        'LD',
        'HD',
        'other',
    ),
    palette=[
        (
            0,
            255,
            0,
        ),
        (
            255,
            128,
            0,
        ),
        (
            255,
            0,
            0,
        ),
        (
            0,
            0,
            255,
        ),
    ])
model = dict(
    backbone=dict(
        depth=53,
        init_cfg=dict(checkpoint='open-mmlab://darknet53', type='Pretrained'),
        out_indices=(
            3,
            4,
            5,
        ),
        type='Darknet'),
    bbox_head=dict(
        anchor_generator=dict(
            base_sizes=[
                [
                    (
                        116,
                        90,
                    ),
                    (
                        156,
                        198,
                    ),
                    (
                        373,
                        326,
                    ),
                ],
                [
                    (
                        30,
                        61,
                    ),
                    (
                        62,
                        45,
                    ),
                    (
                        59,
                        119,
                    ),
                ],
                [
                    (
                        10,
                        13,
                    ),
                    (
                        16,
                        30,
                    ),
                    (
                        33,
                        23,
                    ),
                ],
            ],
            strides=[
                32,
                16,
                8,
            ],
            type='YOLOAnchorGenerator'),
        bbox_coder=dict(type='YOLOBBoxCoder'),
        featmap_strides=[
            32,
            16,
            8,
        ],
        in_channels=[
            512,
            256,
            128,
        ],
        loss_cls=dict(
            loss_weight=1.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        loss_conf=dict(
            loss_weight=1.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        loss_wh=dict(loss_weight=2.0, reduction='sum', type='MSELoss'),
        loss_xy=dict(
            loss_weight=2.0,
            reduction='sum',
            type='CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=4,
        out_channels=[
            1024,
            512,
            256,
        ],
        type='YOLOV3Head'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            0,
            0,
            0,
        ],
        pad_size_divisor=32,
        std=[
            255.0,
            255.0,
            255.0,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            1024,
            512,
            256,
        ],
        num_scales=3,
        out_channels=[
            512,
            256,
            128,
        ],
        type='YOLOV3Neck'),
    test_cfg=dict(
        conf_thr=0.005,
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.45, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    train_cfg=dict(
        assigner=dict(
            min_pos_iou=0,
            neg_iou_thr=0.5,
            pos_iou_thr=0.5,
            type='GridAssigner')),
    type='YOLOV3')
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=2000, start_factor=0.1, type='LinearLR'),
    dict(
        by_epoch=True, gamma=0.1, milestones=[
            218,
            246,
        ], type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='test/annotations.json',
        backend_args=None,
        data_prefix=dict(img='test/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                416,
                416,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/test/annotations.json',
    backend_args=None,
    classwise=True,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        416,
        416,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=4,
    dataset=dict(
        dataset=dict(
            ann_file='train/annotations.json',
            backend_args=None,
            data_prefix=dict(img='train/'),
            data_root='D:/Repositories/test/data/larch_casebearer/',
            metainfo=dict(
                classes=(
                    'H',
                    'LD',
                    'HD',
                    'other',
                ),
                palette=[
                    (
                        0,
                        255,
                        0,
                    ),
                    (
                        255,
                        128,
                        0,
                    ),
                    (
                        255,
                        0,
                        0,
                    ),
                    (
                        0,
                        0,
                        255,
                    ),
                ]),
            pipeline=[
                dict(backend_args=None, type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(keep_ratio=True, scale=(
                    416,
                    416,
                ), type='Resize'),
                dict(type='PhotoMetricDistortion'),
                dict(type='RandomAffine'),
                dict(type='PackDetInputs'),
            ],
            type='CocoDataset'),
        oversample_thr=0.25,
        type='ClassBalancedDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        416,
        416,
    ), type='Resize'),
    dict(type='PhotoMetricDistortion'),
    dict(type='RandomAffine'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='val/annotations.json',
        backend_args=None,
        data_prefix=dict(img='val/'),
        data_root='D:/Repositories/test/data/larch_casebearer/',
        metainfo=dict(
            classes=(
                'H',
                'LD',
                'HD',
                'other',
            ),
            palette=[
                (
                    0,
                    255,
                    0,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    255,
                    0,
                    0,
                ),
                (
                    0,
                    0,
                    255,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                416,
                416,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='D:/Repositories/test/data/larch_casebearer/val/annotations.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '25-05-09/yolov3'

2025/05/11 23:55:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/11 23:55:27 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/11 23:55:28 - mmengine - INFO - load model from: open-mmlab://darknet53
2025/05/11 23:55:28 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://darknet53
Name of parameter - Initialization information

backbone.conv1.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

neck.detect1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv3.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv4.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv5.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.conv.weight - torch.Size([256, 768, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv4.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv5.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.conv.weight - torch.Size([128, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv4.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv5.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_pred.0.weight - torch.Size([27, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.0.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.weight - torch.Size([27, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.weight - torch.Size([27, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.bias - torch.Size([27]): 
Initialized by user-defined `init_weights` in YOLOV3Head  
2025/05/11 23:55:28 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/11 23:55:28 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/11 23:55:28 - mmengine - INFO - Checkpoints will be saved to D:\Repositories\test\25-05-09\yolov3.
2025/05/11 23:55:41 - mmengine - INFO - Epoch(train)  [1][ 50/141]  lr: 1.2206e-04  eta: 0:17:47  time: 0.2554  data_time: 0.0955  memory: 2033  grad_norm: 7079.7053  loss: 4395.7461  loss_cls: 1438.2142  loss_conf: 1914.6342  loss_xy: 891.3754  loss_wh: 151.5224
2025/05/11 23:55:48 - mmengine - INFO - Epoch(train)  [1][100/141]  lr: 1.4457e-04  eta: 0:14:11  time: 0.1567  data_time: 0.0051  memory: 2033  grad_norm: 7662.6225  loss: 3954.2491  loss_cls: 1226.1369  loss_conf: 1657.7185  loss_xy: 936.6186  loss_wh: 133.7751
2025/05/11 23:55:55 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:56:04 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:56:06 - mmengine - INFO - bbox_mAP_copypaste: 0.052 0.159 0.013 -1.000 0.045 0.052
2025/05/11 23:56:06 - mmengine - INFO - Epoch(val) [1][49/49]    coco/bbox_mAP: 0.0520  coco/bbox_mAP_50: 0.1590  coco/bbox_mAP_75: 0.0130  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0450  coco/bbox_mAP_l: 0.0520  data_time: 0.1700  time: 0.1900
2025/05/11 23:56:07 - mmengine - INFO - The best checkpoint with 0.0520 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2025/05/11 23:56:15 - mmengine - INFO - Epoch(train)  [2][ 50/141]  lr: 1.8554e-04  eta: 0:12:25  time: 0.1629  data_time: 0.0062  memory: 2033  grad_norm: 6281.5733  loss: 2867.1408  loss_cls: 792.4203  loss_conf: 1109.4279  loss_xy: 866.4472  loss_wh: 98.8454
2025/05/11 23:56:23 - mmengine - INFO - Epoch(train)  [2][100/141]  lr: 2.0805e-04  eta: 0:11:55  time: 0.1592  data_time: 0.0111  memory: 2033  grad_norm: 6176.0628  loss: 2558.0478  loss_cls: 673.1947  loss_conf: 999.6607  loss_xy: 795.0509  loss_wh: 90.1415
2025/05/11 23:56:29 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:56:30 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:56:32 - mmengine - INFO - bbox_mAP_copypaste: 0.064 0.155 0.033 -1.000 0.020 0.067
2025/05/11 23:56:32 - mmengine - INFO - Epoch(val) [2][49/49]    coco/bbox_mAP: 0.0640  coco/bbox_mAP_50: 0.1550  coco/bbox_mAP_75: 0.0330  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0200  coco/bbox_mAP_l: 0.0670  data_time: 0.0033  time: 0.0195
2025/05/11 23:56:32 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_1.pth is removed
2025/05/11 23:56:33 - mmengine - INFO - The best checkpoint with 0.0640 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2025/05/11 23:56:41 - mmengine - INFO - Epoch(train)  [3][ 50/141]  lr: 2.4902e-04  eta: 0:11:17  time: 0.1619  data_time: 0.0078  memory: 2033  grad_norm: 5844.2167  loss: 2407.8621  loss_cls: 645.4796  loss_conf: 914.5325  loss_xy: 777.3182  loss_wh: 70.5319
2025/05/11 23:56:49 - mmengine - INFO - Epoch(train)  [3][100/141]  lr: 2.7154e-04  eta: 0:11:04  time: 0.1640  data_time: 0.0115  memory: 2033  grad_norm: 5863.9782  loss: 2401.7822  loss_cls: 630.6188  loss_conf: 912.6199  loss_xy: 789.3101  loss_wh: 69.2334
2025/05/11 23:56:56 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:56:57 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:56:59 - mmengine - INFO - bbox_mAP_copypaste: 0.086 0.190 0.055 -1.000 0.076 0.085
2025/05/11 23:56:59 - mmengine - INFO - Epoch(val) [3][49/49]    coco/bbox_mAP: 0.0860  coco/bbox_mAP_50: 0.1900  coco/bbox_mAP_75: 0.0550  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0760  coco/bbox_mAP_l: 0.0850  data_time: 0.0037  time: 0.0197
2025/05/11 23:56:59 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_2.pth is removed
2025/05/11 23:57:00 - mmengine - INFO - The best checkpoint with 0.0860 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2025/05/11 23:57:08 - mmengine - INFO - Epoch(train)  [4][ 50/141]  lr: 3.1251e-04  eta: 0:10:44  time: 0.1686  data_time: 0.0077  memory: 2033  grad_norm: 5546.4635  loss: 2308.2941  loss_cls: 597.3587  loss_conf: 851.0681  loss_xy: 801.4142  loss_wh: 58.4531
2025/05/11 23:57:16 - mmengine - INFO - Epoch(train)  [4][100/141]  lr: 3.3502e-04  eta: 0:10:31  time: 0.1588  data_time: 0.0098  memory: 2033  grad_norm: 5632.9778  loss: 2198.1569  loss_cls: 545.3008  loss_conf: 823.3424  loss_xy: 775.4809  loss_wh: 54.0327
2025/05/11 23:57:23 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:57:24 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:57:25 - mmengine - INFO - bbox_mAP_copypaste: 0.129 0.271 0.097 -1.000 0.113 0.130
2025/05/11 23:57:25 - mmengine - INFO - Epoch(val) [4][49/49]    coco/bbox_mAP: 0.1290  coco/bbox_mAP_50: 0.2710  coco/bbox_mAP_75: 0.0970  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1130  coco/bbox_mAP_l: 0.1300  data_time: 0.0044  time: 0.0201
2025/05/11 23:57:25 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_3.pth is removed
2025/05/11 23:57:26 - mmengine - INFO - The best checkpoint with 0.1290 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2025/05/11 23:57:35 - mmengine - INFO - Epoch(train)  [5][ 50/141]  lr: 3.7599e-04  eta: 0:10:10  time: 0.1644  data_time: 0.0109  memory: 2033  grad_norm: 5582.0662  loss: 2132.8858  loss_cls: 502.3376  loss_conf: 810.4463  loss_xy: 770.1111  loss_wh: 49.9908
2025/05/11 23:57:43 - mmengine - INFO - Epoch(train)  [5][100/141]  lr: 3.9850e-04  eta: 0:09:59  time: 0.1609  data_time: 0.0076  memory: 2033  grad_norm: 5680.3806  loss: 2203.2735  loss_cls: 507.3058  loss_conf: 837.4704  loss_xy: 804.5482  loss_wh: 53.9491
2025/05/11 23:57:49 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:57:50 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:57:52 - mmengine - INFO - bbox_mAP_copypaste: 0.108 0.246 0.057 -1.000 0.073 0.117
2025/05/11 23:57:52 - mmengine - INFO - Epoch(val) [5][49/49]    coco/bbox_mAP: 0.1080  coco/bbox_mAP_50: 0.2460  coco/bbox_mAP_75: 0.0570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0730  coco/bbox_mAP_l: 0.1170  data_time: 0.0048  time: 0.0198
2025/05/11 23:58:00 - mmengine - INFO - Epoch(train)  [6][ 50/141]  lr: 4.3947e-04  eta: 0:09:42  time: 0.1649  data_time: 0.0101  memory: 2033  grad_norm: 5676.9108  loss: 2146.6043  loss_cls: 480.8254  loss_conf: 808.8117  loss_xy: 801.1181  loss_wh: 55.8492
2025/05/11 23:58:08 - mmengine - INFO - Epoch(train)  [6][100/141]  lr: 4.6198e-04  eta: 0:09:32  time: 0.1612  data_time: 0.0106  memory: 2033  grad_norm: 5809.5094  loss: 2130.7413  loss_cls: 513.4739  loss_conf: 784.6002  loss_xy: 775.3015  loss_wh: 57.3658
2025/05/11 23:58:15 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:58:16 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:58:17 - mmengine - INFO - bbox_mAP_copypaste: 0.128 0.287 0.088 -1.000 0.077 0.135
2025/05/11 23:58:17 - mmengine - INFO - Epoch(val) [6][49/49]    coco/bbox_mAP: 0.1280  coco/bbox_mAP_50: 0.2870  coco/bbox_mAP_75: 0.0880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0770  coco/bbox_mAP_l: 0.1350  data_time: 0.0044  time: 0.0198
2025/05/11 23:58:25 - mmengine - INFO - Epoch(train)  [7][ 50/141]  lr: 5.0295e-04  eta: 0:09:14  time: 0.1626  data_time: 0.0088  memory: 2033  grad_norm: 5168.7650  loss: 2020.2073  loss_cls: 438.3502  loss_conf: 760.1484  loss_xy: 765.4389  loss_wh: 56.2698
2025/05/11 23:58:33 - mmengine - INFO - Epoch(train)  [7][100/141]  lr: 5.2546e-04  eta: 0:09:05  time: 0.1590  data_time: 0.0049  memory: 2033  grad_norm: 5233.8898  loss: 2181.9559  loss_cls: 505.0690  loss_conf: 799.0335  loss_xy: 821.3470  loss_wh: 56.5063
2025/05/11 23:58:40 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:58:41 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:58:42 - mmengine - INFO - bbox_mAP_copypaste: 0.144 0.310 0.103 -1.000 0.088 0.153
2025/05/11 23:58:42 - mmengine - INFO - Epoch(val) [7][49/49]    coco/bbox_mAP: 0.1440  coco/bbox_mAP_50: 0.3100  coco/bbox_mAP_75: 0.1030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0880  coco/bbox_mAP_l: 0.1530  data_time: 0.0049  time: 0.0199
2025/05/11 23:58:42 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_4.pth is removed
2025/05/11 23:58:44 - mmengine - INFO - The best checkpoint with 0.1440 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2025/05/11 23:58:46 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:58:52 - mmengine - INFO - Epoch(train)  [8][ 50/141]  lr: 5.6643e-04  eta: 0:08:49  time: 0.1690  data_time: 0.0087  memory: 2033  grad_norm: 5209.7953  loss: 2130.8568  loss_cls: 479.6913  loss_conf: 791.0356  loss_xy: 811.0459  loss_wh: 49.0839
2025/05/11 23:59:00 - mmengine - INFO - Epoch(train)  [8][100/141]  lr: 5.8894e-04  eta: 0:08:40  time: 0.1598  data_time: 0.0115  memory: 2033  grad_norm: 5162.6436  loss: 1952.1143  loss_cls: 418.7966  loss_conf: 732.5426  loss_xy: 753.2976  loss_wh: 47.4775
2025/05/11 23:59:07 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:59:08 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:59:09 - mmengine - INFO - bbox_mAP_copypaste: 0.142 0.320 0.093 -1.000 0.069 0.152
2025/05/11 23:59:09 - mmengine - INFO - Epoch(val) [8][49/49]    coco/bbox_mAP: 0.1420  coco/bbox_mAP_50: 0.3200  coco/bbox_mAP_75: 0.0930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0690  coco/bbox_mAP_l: 0.1520  data_time: 0.0035  time: 0.0196
2025/05/11 23:59:17 - mmengine - INFO - Epoch(train)  [9][ 50/141]  lr: 6.2991e-04  eta: 0:08:24  time: 0.1615  data_time: 0.0072  memory: 2033  grad_norm: 4837.4313  loss: 2028.9565  loss_cls: 425.8485  loss_conf: 755.9317  loss_xy: 792.7284  loss_wh: 54.4480
2025/05/11 23:59:25 - mmengine - INFO - Epoch(train)  [9][100/141]  lr: 6.5243e-04  eta: 0:08:15  time: 0.1567  data_time: 0.0069  memory: 2033  grad_norm: 5039.3515  loss: 1945.3748  loss_cls: 405.1427  loss_conf: 735.9590  loss_xy: 756.1826  loss_wh: 48.0905
2025/05/11 23:59:32 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:59:33 - mmengine - INFO - Evaluating bbox...
2025/05/11 23:59:34 - mmengine - INFO - bbox_mAP_copypaste: 0.170 0.349 0.143 -1.000 0.083 0.189
2025/05/11 23:59:34 - mmengine - INFO - Epoch(val) [9][49/49]    coco/bbox_mAP: 0.1700  coco/bbox_mAP_50: 0.3490  coco/bbox_mAP_75: 0.1430  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0830  coco/bbox_mAP_l: 0.1890  data_time: 0.0047  time: 0.0202
2025/05/11 23:59:34 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_7.pth is removed
2025/05/11 23:59:36 - mmengine - INFO - The best checkpoint with 0.1700 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2025/05/11 23:59:44 - mmengine - INFO - Epoch(train) [10][ 50/141]  lr: 6.9340e-04  eta: 0:07:59  time: 0.1665  data_time: 0.0094  memory: 2033  grad_norm: 4837.6733  loss: 1924.4750  loss_cls: 399.2945  loss_conf: 726.5990  loss_xy: 749.9585  loss_wh: 48.6230
2025/05/11 23:59:52 - mmengine - INFO - Epoch(train) [10][100/141]  lr: 7.1591e-04  eta: 0:07:50  time: 0.1579  data_time: 0.0037  memory: 2033  grad_norm: 4655.1216  loss: 2014.5957  loss_cls: 423.6550  loss_conf: 741.5057  loss_xy: 802.3973  loss_wh: 47.0377
2025/05/11 23:59:58 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/11 23:59:59 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:00:01 - mmengine - INFO - bbox_mAP_copypaste: 0.148 0.301 0.121 -1.000 0.070 0.161
2025/05/12 00:00:01 - mmengine - INFO - Epoch(val) [10][49/49]    coco/bbox_mAP: 0.1480  coco/bbox_mAP_50: 0.3010  coco/bbox_mAP_75: 0.1210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0700  coco/bbox_mAP_l: 0.1610  data_time: 0.0041  time: 0.0194
2025/05/12 00:00:09 - mmengine - INFO - Epoch(train) [11][ 50/141]  lr: 7.5688e-04  eta: 0:07:35  time: 0.1668  data_time: 0.0078  memory: 2033  grad_norm: 4410.7694  loss: 1946.3488  loss_cls: 399.7357  loss_conf: 716.8243  loss_xy: 775.5576  loss_wh: 54.2312
2025/05/12 00:00:17 - mmengine - INFO - Epoch(train) [11][100/141]  lr: 7.7939e-04  eta: 0:07:26  time: 0.1598  data_time: 0.0079  memory: 2033  grad_norm: 4550.0031  loss: 1960.9708  loss_cls: 398.0926  loss_conf: 731.8639  loss_xy: 777.7875  loss_wh: 53.2269
2025/05/12 00:00:23 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:00:25 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:00:26 - mmengine - INFO - bbox_mAP_copypaste: 0.138 0.320 0.097 -1.000 0.102 0.143
2025/05/12 00:00:26 - mmengine - INFO - Epoch(val) [11][49/49]    coco/bbox_mAP: 0.1380  coco/bbox_mAP_50: 0.3200  coco/bbox_mAP_75: 0.0970  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1020  coco/bbox_mAP_l: 0.1430  data_time: 0.0048  time: 0.0198
2025/05/12 00:00:34 - mmengine - INFO - Epoch(train) [12][ 50/141]  lr: 8.2036e-04  eta: 0:07:11  time: 0.1628  data_time: 0.0077  memory: 2033  grad_norm: 4591.7104  loss: 1902.1157  loss_cls: 388.2800  loss_conf: 706.5115  loss_xy: 752.3236  loss_wh: 55.0007
2025/05/12 00:00:42 - mmengine - INFO - Epoch(train) [12][100/141]  lr: 8.4287e-04  eta: 0:07:02  time: 0.1583  data_time: 0.0056  memory: 2033  grad_norm: 4494.3865  loss: 2011.2224  loss_cls: 396.1104  loss_conf: 743.7807  loss_xy: 808.3741  loss_wh: 62.9573
2025/05/12 00:00:49 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:00:50 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:00:51 - mmengine - INFO - bbox_mAP_copypaste: 0.196 0.427 0.145 -1.000 0.128 0.213
2025/05/12 00:00:51 - mmengine - INFO - Epoch(val) [12][49/49]    coco/bbox_mAP: 0.1960  coco/bbox_mAP_50: 0.4270  coco/bbox_mAP_75: 0.1450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1280  coco/bbox_mAP_l: 0.2130  data_time: 0.0051  time: 0.0198
2025/05/12 00:00:51 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_9.pth is removed
2025/05/12 00:00:52 - mmengine - INFO - The best checkpoint with 0.1960 coco/bbox_mAP at 12 epoch is saved to best_coco_bbox_mAP_epoch_12.pth.
2025/05/12 00:01:01 - mmengine - INFO - Epoch(train) [13][ 50/141]  lr: 8.8384e-04  eta: 0:06:47  time: 0.1659  data_time: 0.0080  memory: 2033  grad_norm: 4440.7315  loss: 1939.7716  loss_cls: 400.2297  loss_conf: 709.9104  loss_xy: 766.6353  loss_wh: 62.9962
2025/05/12 00:01:09 - mmengine - INFO - Epoch(train) [13][100/141]  lr: 9.0635e-04  eta: 0:06:39  time: 0.1635  data_time: 0.0076  memory: 2033  grad_norm: 4974.3547  loss: 2026.4609  loss_cls: 390.8862  loss_conf: 759.9593  loss_xy: 811.6887  loss_wh: 63.9267
2025/05/12 00:01:15 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:01:16 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:01:18 - mmengine - INFO - bbox_mAP_copypaste: 0.130 0.343 0.064 -1.000 0.111 0.137
2025/05/12 00:01:18 - mmengine - INFO - Epoch(val) [13][49/49]    coco/bbox_mAP: 0.1300  coco/bbox_mAP_50: 0.3430  coco/bbox_mAP_75: 0.0640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1110  coco/bbox_mAP_l: 0.1370  data_time: 0.0032  time: 0.0192
2025/05/12 00:01:26 - mmengine - INFO - Epoch(train) [14][ 50/141]  lr: 9.4732e-04  eta: 0:06:23  time: 0.1585  data_time: 0.0078  memory: 2033  grad_norm: 4279.7980  loss: 1824.4512  loss_cls: 346.3402  loss_conf: 688.6360  loss_xy: 736.9810  loss_wh: 52.4940
2025/05/12 00:01:34 - mmengine - INFO - Epoch(train) [14][100/141]  lr: 9.6983e-04  eta: 0:06:15  time: 0.1603  data_time: 0.0093  memory: 2033  grad_norm: 4112.5946  loss: 1901.9726  loss_cls: 369.3524  loss_conf: 696.5264  loss_xy: 776.4020  loss_wh: 59.6919
2025/05/12 00:01:40 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:01:41 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:01:43 - mmengine - INFO - bbox_mAP_copypaste: 0.197 0.421 0.144 -1.000 0.094 0.219
2025/05/12 00:01:43 - mmengine - INFO - Epoch(val) [14][49/49]    coco/bbox_mAP: 0.1970  coco/bbox_mAP_50: 0.4210  coco/bbox_mAP_75: 0.1440  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0940  coco/bbox_mAP_l: 0.2190  data_time: 0.0047  time: 0.0190
2025/05/12 00:01:43 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_12.pth is removed
2025/05/12 00:01:44 - mmengine - INFO - The best checkpoint with 0.1970 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2025/05/12 00:01:48 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:01:52 - mmengine - INFO - Epoch(train) [15][ 50/141]  lr: 1.0000e-03  eta: 0:06:00  time: 0.1649  data_time: 0.0083  memory: 2033  grad_norm: 4219.1290  loss: 1949.6511  loss_cls: 379.3464  loss_conf: 725.6953  loss_xy: 795.6699  loss_wh: 48.9395
2025/05/12 00:02:00 - mmengine - INFO - Epoch(train) [15][100/141]  lr: 1.0000e-03  eta: 0:05:51  time: 0.1561  data_time: 0.0037  memory: 2033  grad_norm: 4137.2785  loss: 1933.8949  loss_cls: 382.8304  loss_conf: 721.7146  loss_xy: 775.0450  loss_wh: 54.3049
2025/05/12 00:02:07 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:02:08 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:02:09 - mmengine - INFO - bbox_mAP_copypaste: 0.152 0.299 0.131 -1.000 0.077 0.167
2025/05/12 00:02:09 - mmengine - INFO - Epoch(val) [15][49/49]    coco/bbox_mAP: 0.1520  coco/bbox_mAP_50: 0.2990  coco/bbox_mAP_75: 0.1310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0770  coco/bbox_mAP_l: 0.1670  data_time: 0.0037  time: 0.0198
2025/05/12 00:02:17 - mmengine - INFO - Epoch(train) [16][ 50/141]  lr: 1.0000e-03  eta: 0:05:36  time: 0.1618  data_time: 0.0067  memory: 2033  grad_norm: 4051.6967  loss: 1987.8318  loss_cls: 383.7319  loss_conf: 739.6697  loss_xy: 811.7644  loss_wh: 52.6658
2025/05/12 00:02:25 - mmengine - INFO - Epoch(train) [16][100/141]  lr: 1.0000e-03  eta: 0:05:28  time: 0.1548  data_time: 0.0045  memory: 2033  grad_norm: 4044.2830  loss: 1886.4456  loss_cls: 369.1317  loss_conf: 687.5818  loss_xy: 778.9558  loss_wh: 50.7764
2025/05/12 00:02:31 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:02:33 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:02:34 - mmengine - INFO - bbox_mAP_copypaste: 0.129 0.282 0.087 -1.000 0.100 0.140
2025/05/12 00:02:34 - mmengine - INFO - Epoch(val) [16][49/49]    coco/bbox_mAP: 0.1290  coco/bbox_mAP_50: 0.2820  coco/bbox_mAP_75: 0.0870  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1000  coco/bbox_mAP_l: 0.1400  data_time: 0.0034  time: 0.0199
2025/05/12 00:02:42 - mmengine - INFO - Epoch(train) [17][ 50/141]  lr: 1.0000e-03  eta: 0:05:13  time: 0.1618  data_time: 0.0098  memory: 2033  grad_norm: 3823.6689  loss: 1857.1442  loss_cls: 366.3339  loss_conf: 683.8994  loss_xy: 759.0285  loss_wh: 47.8825
2025/05/12 00:02:50 - mmengine - INFO - Epoch(train) [17][100/141]  lr: 1.0000e-03  eta: 0:05:04  time: 0.1579  data_time: 0.0076  memory: 2033  grad_norm: 3608.4693  loss: 1887.1031  loss_cls: 348.9993  loss_conf: 702.9914  loss_xy: 780.6140  loss_wh: 54.4985
2025/05/12 00:02:56 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:02:57 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:02:59 - mmengine - INFO - bbox_mAP_copypaste: 0.142 0.297 0.107 -1.000 0.086 0.154
2025/05/12 00:02:59 - mmengine - INFO - Epoch(val) [17][49/49]    coco/bbox_mAP: 0.1420  coco/bbox_mAP_50: 0.2970  coco/bbox_mAP_75: 0.1070  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0860  coco/bbox_mAP_l: 0.1540  data_time: 0.0031  time: 0.0194
2025/05/12 00:03:07 - mmengine - INFO - Epoch(train) [18][ 50/141]  lr: 1.0000e-03  eta: 0:04:49  time: 0.1636  data_time: 0.0101  memory: 2033  grad_norm: 3777.9853  loss: 1841.0185  loss_cls: 335.0562  loss_conf: 690.7234  loss_xy: 770.9462  loss_wh: 44.2927
2025/05/12 00:03:15 - mmengine - INFO - Epoch(train) [18][100/141]  lr: 1.0000e-03  eta: 0:04:41  time: 0.1583  data_time: 0.0076  memory: 2033  grad_norm: 3766.0310  loss: 1857.7006  loss_cls: 350.7985  loss_conf: 696.9221  loss_xy: 762.5255  loss_wh: 47.4545
2025/05/12 00:03:22 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:03:23 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:03:24 - mmengine - INFO - bbox_mAP_copypaste: 0.207 0.409 0.171 -1.000 0.117 0.230
2025/05/12 00:03:24 - mmengine - INFO - Epoch(val) [18][49/49]    coco/bbox_mAP: 0.2070  coco/bbox_mAP_50: 0.4090  coco/bbox_mAP_75: 0.1710  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1170  coco/bbox_mAP_l: 0.2300  data_time: 0.0043  time: 0.0202
2025/05/12 00:03:24 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_14.pth is removed
2025/05/12 00:03:25 - mmengine - INFO - The best checkpoint with 0.2070 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2025/05/12 00:03:34 - mmengine - INFO - Epoch(train) [19][ 50/141]  lr: 1.0000e-03  eta: 0:04:26  time: 0.1687  data_time: 0.0056  memory: 2033  grad_norm: 3771.8629  loss: 1999.4455  loss_cls: 389.8447  loss_conf: 728.2649  loss_xy: 827.6021  loss_wh: 53.7338
2025/05/12 00:03:41 - mmengine - INFO - Epoch(train) [19][100/141]  lr: 1.0000e-03  eta: 0:04:18  time: 0.1553  data_time: 0.0072  memory: 2033  grad_norm: 3586.6882  loss: 1784.4236  loss_cls: 322.1786  loss_conf: 660.4903  loss_xy: 752.4380  loss_wh: 49.3166
2025/05/12 00:03:48 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:03:49 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:03:50 - mmengine - INFO - bbox_mAP_copypaste: 0.229 0.519 0.153 -1.000 0.173 0.242
2025/05/12 00:03:50 - mmengine - INFO - Epoch(val) [19][49/49]    coco/bbox_mAP: 0.2290  coco/bbox_mAP_50: 0.5190  coco/bbox_mAP_75: 0.1530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1730  coco/bbox_mAP_l: 0.2420  data_time: 0.0038  time: 0.0197
2025/05/12 00:03:50 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_18.pth is removed
2025/05/12 00:03:52 - mmengine - INFO - The best checkpoint with 0.2290 coco/bbox_mAP at 19 epoch is saved to best_coco_bbox_mAP_epoch_19.pth.
2025/05/12 00:04:00 - mmengine - INFO - Epoch(train) [20][ 50/141]  lr: 1.0000e-03  eta: 0:04:03  time: 0.1668  data_time: 0.0082  memory: 2033  grad_norm: 3734.8881  loss: 1883.6102  loss_cls: 350.0552  loss_conf: 703.3903  loss_xy: 783.4813  loss_wh: 46.6834
2025/05/12 00:04:08 - mmengine - INFO - Epoch(train) [20][100/141]  lr: 1.0000e-03  eta: 0:03:55  time: 0.1588  data_time: 0.0084  memory: 2033  grad_norm: 3638.3511  loss: 1800.2201  loss_cls: 328.6091  loss_conf: 653.3443  loss_xy: 771.8519  loss_wh: 46.4148
2025/05/12 00:04:14 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:04:15 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:04:17 - mmengine - INFO - bbox_mAP_copypaste: 0.112 0.314 0.038 -1.000 0.057 0.131
2025/05/12 00:04:17 - mmengine - INFO - Epoch(val) [20][49/49]    coco/bbox_mAP: 0.1120  coco/bbox_mAP_50: 0.3140  coco/bbox_mAP_75: 0.0380  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.0570  coco/bbox_mAP_l: 0.1310  data_time: 0.0040  time: 0.0192
2025/05/12 00:04:25 - mmengine - INFO - Epoch(train) [21][ 50/141]  lr: 1.0000e-03  eta: 0:03:40  time: 0.1617  data_time: 0.0128  memory: 2033  grad_norm: 3318.7414  loss: 1688.3748  loss_cls: 293.8656  loss_conf: 632.7098  loss_xy: 720.1698  loss_wh: 41.6296
2025/05/12 00:04:33 - mmengine - INFO - Epoch(train) [21][100/141]  lr: 1.0000e-03  eta: 0:03:32  time: 0.1618  data_time: 0.0076  memory: 2033  grad_norm: 3473.7007  loss: 1905.8701  loss_cls: 360.9652  loss_conf: 697.3411  loss_xy: 799.8221  loss_wh: 47.7417
2025/05/12 00:04:40 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:04:41 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:04:42 - mmengine - INFO - bbox_mAP_copypaste: 0.233 0.494 0.170 -1.000 0.159 0.251
2025/05/12 00:04:42 - mmengine - INFO - Epoch(val) [21][49/49]    coco/bbox_mAP: 0.2330  coco/bbox_mAP_50: 0.4940  coco/bbox_mAP_75: 0.1700  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1590  coco/bbox_mAP_l: 0.2510  data_time: 0.0045  time: 0.0195
2025/05/12 00:04:42 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_19.pth is removed
2025/05/12 00:04:43 - mmengine - INFO - The best checkpoint with 0.2330 coco/bbox_mAP at 21 epoch is saved to best_coco_bbox_mAP_epoch_21.pth.
2025/05/12 00:04:50 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:04:52 - mmengine - INFO - Epoch(train) [22][ 50/141]  lr: 1.0000e-03  eta: 0:03:17  time: 0.1626  data_time: 0.0074  memory: 2033  grad_norm: 3315.8764  loss: 1743.9500  loss_cls: 312.8585  loss_conf: 630.7610  loss_xy: 754.4591  loss_wh: 45.8714
2025/05/12 00:04:59 - mmengine - INFO - Epoch(train) [22][100/141]  lr: 1.0000e-03  eta: 0:03:09  time: 0.1579  data_time: 0.0053  memory: 2033  grad_norm: 3352.7389  loss: 1842.1262  loss_cls: 331.9197  loss_conf: 670.5397  loss_xy: 794.0768  loss_wh: 45.5900
2025/05/12 00:05:06 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:05:07 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:05:09 - mmengine - INFO - bbox_mAP_copypaste: 0.158 0.351 0.092 -1.000 0.111 0.166
2025/05/12 00:05:09 - mmengine - INFO - Epoch(val) [22][49/49]    coco/bbox_mAP: 0.1580  coco/bbox_mAP_50: 0.3510  coco/bbox_mAP_75: 0.0920  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1110  coco/bbox_mAP_l: 0.1660  data_time: 0.0043  time: 0.0198
2025/05/12 00:05:17 - mmengine - INFO - Epoch(train) [23][ 50/141]  lr: 1.0000e-03  eta: 0:02:54  time: 0.1627  data_time: 0.0064  memory: 2033  grad_norm: 3695.2663  loss: 1850.9345  loss_cls: 343.0997  loss_conf: 684.5147  loss_xy: 779.5929  loss_wh: 43.7272
2025/05/12 00:05:25 - mmengine - INFO - Epoch(train) [23][100/141]  lr: 1.0000e-03  eta: 0:02:46  time: 0.1606  data_time: 0.0095  memory: 2033  grad_norm: 3208.7191  loss: 1742.8495  loss_cls: 289.0323  loss_conf: 657.4223  loss_xy: 753.9252  loss_wh: 42.4697
2025/05/12 00:05:31 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:05:32 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:05:34 - mmengine - INFO - bbox_mAP_copypaste: 0.221 0.466 0.164 -1.000 0.120 0.237
2025/05/12 00:05:34 - mmengine - INFO - Epoch(val) [23][49/49]    coco/bbox_mAP: 0.2210  coco/bbox_mAP_50: 0.4660  coco/bbox_mAP_75: 0.1640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1200  coco/bbox_mAP_l: 0.2370  data_time: 0.0052  time: 0.0203
2025/05/12 00:05:42 - mmengine - INFO - Epoch(train) [24][ 50/141]  lr: 1.0000e-03  eta: 0:02:31  time: 0.1610  data_time: 0.0104  memory: 2033  grad_norm: 3304.7697  loss: 1714.0350  loss_cls: 316.9583  loss_conf: 613.4679  loss_xy: 744.2136  loss_wh: 39.3951
2025/05/12 00:05:50 - mmengine - INFO - Epoch(train) [24][100/141]  lr: 1.0000e-03  eta: 0:02:23  time: 0.1557  data_time: 0.0046  memory: 2033  grad_norm: 3441.6701  loss: 1828.9986  loss_cls: 316.3273  loss_conf: 674.2483  loss_xy: 789.5335  loss_wh: 48.8895
2025/05/12 00:05:56 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:05:57 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:05:59 - mmengine - INFO - bbox_mAP_copypaste: 0.217 0.472 0.153 -1.000 0.124 0.238
2025/05/12 00:05:59 - mmengine - INFO - Epoch(val) [24][49/49]    coco/bbox_mAP: 0.2170  coco/bbox_mAP_50: 0.4720  coco/bbox_mAP_75: 0.1530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1240  coco/bbox_mAP_l: 0.2380  data_time: 0.0048  time: 0.0195
2025/05/12 00:06:07 - mmengine - INFO - Epoch(train) [25][ 50/141]  lr: 1.0000e-03  eta: 0:02:08  time: 0.1657  data_time: 0.0108  memory: 2033  grad_norm: 3267.2489  loss: 1664.6818  loss_cls: 296.9530  loss_conf: 603.1159  loss_xy: 723.2207  loss_wh: 41.3921
2025/05/12 00:06:15 - mmengine - INFO - Epoch(train) [25][100/141]  lr: 1.0000e-03  eta: 0:02:00  time: 0.1563  data_time: 0.0043  memory: 2033  grad_norm: 3443.2954  loss: 1811.0510  loss_cls: 322.1931  loss_conf: 663.2321  loss_xy: 784.9006  loss_wh: 40.7252
2025/05/12 00:06:21 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:06:22 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:06:24 - mmengine - INFO - bbox_mAP_copypaste: 0.225 0.490 0.153 -1.000 0.154 0.247
2025/05/12 00:06:24 - mmengine - INFO - Epoch(val) [25][49/49]    coco/bbox_mAP: 0.2250  coco/bbox_mAP_50: 0.4900  coco/bbox_mAP_75: 0.1530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1540  coco/bbox_mAP_l: 0.2470  data_time: 0.0045  time: 0.0192
2025/05/12 00:06:32 - mmengine - INFO - Epoch(train) [26][ 50/141]  lr: 1.0000e-03  eta: 0:01:45  time: 0.1592  data_time: 0.0071  memory: 2033  grad_norm: 3189.5129  loss: 1781.4044  loss_cls: 316.3176  loss_conf: 643.1091  loss_xy: 781.6301  loss_wh: 40.3477
2025/05/12 00:06:39 - mmengine - INFO - Epoch(train) [26][100/141]  lr: 1.0000e-03  eta: 0:01:37  time: 0.1585  data_time: 0.0079  memory: 2033  grad_norm: 3253.5242  loss: 1749.3845  loss_cls: 310.7200  loss_conf: 640.0027  loss_xy: 759.0178  loss_wh: 39.6440
2025/05/12 00:06:46 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:06:47 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:06:48 - mmengine - INFO - bbox_mAP_copypaste: 0.182 0.360 0.167 -1.000 0.126 0.195
2025/05/12 00:06:48 - mmengine - INFO - Epoch(val) [26][49/49]    coco/bbox_mAP: 0.1820  coco/bbox_mAP_50: 0.3600  coco/bbox_mAP_75: 0.1670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1260  coco/bbox_mAP_l: 0.1950  data_time: 0.0049  time: 0.0198
2025/05/12 00:06:57 - mmengine - INFO - Epoch(train) [27][ 50/141]  lr: 1.0000e-03  eta: 0:01:23  time: 0.1634  data_time: 0.0110  memory: 2033  grad_norm: 3198.7816  loss: 1753.2427  loss_cls: 299.2488  loss_conf: 645.7448  loss_xy: 767.6068  loss_wh: 40.6423
2025/05/12 00:07:05 - mmengine - INFO - Epoch(train) [27][100/141]  lr: 1.0000e-03  eta: 0:01:15  time: 0.1638  data_time: 0.0072  memory: 2033  grad_norm: 3247.3894  loss: 1846.1617  loss_cls: 332.2847  loss_conf: 667.9771  loss_xy: 799.0901  loss_wh: 46.8097
2025/05/12 00:07:11 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:07:12 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:07:14 - mmengine - INFO - bbox_mAP_copypaste: 0.260 0.503 0.242 -1.000 0.150 0.278
2025/05/12 00:07:14 - mmengine - INFO - Epoch(val) [27][49/49]    coco/bbox_mAP: 0.2600  coco/bbox_mAP_50: 0.5030  coco/bbox_mAP_75: 0.2420  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1500  coco/bbox_mAP_l: 0.2780  data_time: 0.0053  time: 0.0206
2025/05/12 00:07:14 - mmengine - INFO - The previous best checkpoint D:\Repositories\test\25-05-09\yolov3\best_coco_bbox_mAP_epoch_21.pth is removed
2025/05/12 00:07:15 - mmengine - INFO - The best checkpoint with 0.2600 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2025/05/12 00:07:23 - mmengine - INFO - Epoch(train) [28][ 50/141]  lr: 1.0000e-03  eta: 0:01:00  time: 0.1655  data_time: 0.0088  memory: 2033  grad_norm: 3235.7715  loss: 1779.1343  loss_cls: 327.6884  loss_conf: 632.0111  loss_xy: 772.1944  loss_wh: 47.2404
2025/05/12 00:07:31 - mmengine - INFO - Epoch(train) [28][100/141]  lr: 1.0000e-03  eta: 0:00:52  time: 0.1569  data_time: 0.0067  memory: 2033  grad_norm: 3054.6230  loss: 1731.5938  loss_cls: 305.1886  loss_conf: 625.8619  loss_xy: 758.5639  loss_wh: 41.9794
2025/05/12 00:07:38 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:07:39 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:07:40 - mmengine - INFO - bbox_mAP_copypaste: 0.216 0.416 0.199 -1.000 0.118 0.236
2025/05/12 00:07:40 - mmengine - INFO - Epoch(val) [28][49/49]    coco/bbox_mAP: 0.2160  coco/bbox_mAP_50: 0.4160  coco/bbox_mAP_75: 0.1990  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1180  coco/bbox_mAP_l: 0.2360  data_time: 0.0046  time: 0.0192
2025/05/12 00:07:48 - mmengine - INFO - Epoch(train) [29][ 50/141]  lr: 1.0000e-03  eta: 0:00:37  time: 0.1618  data_time: 0.0112  memory: 2033  grad_norm: 3041.4518  loss: 1710.8064  loss_cls: 297.1934  loss_conf: 622.1416  loss_xy: 749.9237  loss_wh: 41.5477
2025/05/12 00:07:49 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:07:56 - mmengine - INFO - Epoch(train) [29][100/141]  lr: 1.0000e-03  eta: 0:00:29  time: 0.1578  data_time: 0.0091  memory: 2033  grad_norm: 3294.6873  loss: 1741.4377  loss_cls: 302.3298  loss_conf: 646.9740  loss_xy: 753.0066  loss_wh: 39.1273
2025/05/12 00:08:03 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:08:04 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:08:05 - mmengine - INFO - bbox_mAP_copypaste: 0.242 0.522 0.182 -1.000 0.146 0.263
2025/05/12 00:08:05 - mmengine - INFO - Epoch(val) [29][49/49]    coco/bbox_mAP: 0.2420  coco/bbox_mAP_50: 0.5220  coco/bbox_mAP_75: 0.1820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1460  coco/bbox_mAP_l: 0.2630  data_time: 0.0052  time: 0.0198
2025/05/12 00:08:13 - mmengine - INFO - Epoch(train) [30][ 50/141]  lr: 1.0000e-03  eta: 0:00:14  time: 0.1626  data_time: 0.0062  memory: 2033  grad_norm: 2991.6922  loss: 1740.6061  loss_cls: 292.7632  loss_conf: 635.1115  loss_xy: 770.5001  loss_wh: 42.2313
2025/05/12 00:08:21 - mmengine - INFO - Epoch(train) [30][100/141]  lr: 1.0000e-03  eta: 0:00:06  time: 0.1608  data_time: 0.0106  memory: 2033  grad_norm: 3082.9294  loss: 1709.7189  loss_cls: 289.3608  loss_conf: 618.1437  loss_xy: 761.2671  loss_wh: 40.9474
2025/05/12 00:08:28 - mmengine - INFO - Exp name: yolov3_fs_bal_pdm_aff_20250511_235521
2025/05/12 00:08:28 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/12 00:08:31 - mmengine - INFO - Evaluating bbox...
2025/05/12 00:08:33 - mmengine - INFO - bbox_mAP_copypaste: 0.179 0.395 0.130 -1.000 0.114 0.193
2025/05/12 00:08:33 - mmengine - INFO - Epoch(val) [30][49/49]    coco/bbox_mAP: 0.1790  coco/bbox_mAP_50: 0.3950  coco/bbox_mAP_75: 0.1300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.1140  coco/bbox_mAP_l: 0.1930  data_time: 0.0029  time: 0.0220
